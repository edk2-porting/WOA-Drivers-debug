// PDB:  qcqdss7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
52d333cc-8934-34cd-2652-e7da4e866521 kmdf // SRC=QdssReplicatorAcpi.c MJ= MN=
#typev QdssReplicatorAcpi_c386 36 "%0Device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssDeallocReplicatorContext
{
}
#typev QdssReplicatorAcpi_c386 36 "%0Device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssDeallocReplicatorContext$fin$0
{
}
#typev QdssReplicatorAcpi_c232 25 "%0Unable to read Replicator TpdaIndex" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseReplicatorConfigPackage
{
}
#typev QdssReplicatorAcpi_c224 24 "%0Unable to read Replicator DefaultEnable" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseReplicatorConfigPackage
{
}
#typev QdssReplicatorAcpi_c216 23 "%0Unable to read Replicator Length" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseReplicatorConfigPackage
{
}
#typev QdssReplicatorAcpi_c208 22 "%0Unable to read Replicator BaseAddress" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseReplicatorConfigPackage
{
}
#typev QdssReplicatorAcpi_c200 21 "%0Unable to read Replicator Index" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseReplicatorConfigPackage
{
}
#typev QdssReplicatorAcpi_c193 20 "%0pArgument is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseReplicatorConfigPackage
{
}
#typev QdssReplicatorAcpi_c232 25 "%0Unable to read Replicator TpdaIndex" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseReplicatorConfigPackage$fin$0
{
}
#typev QdssReplicatorAcpi_c224 24 "%0Unable to read Replicator DefaultEnable" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseReplicatorConfigPackage$fin$0
{
}
#typev QdssReplicatorAcpi_c216 23 "%0Unable to read Replicator Length" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseReplicatorConfigPackage$fin$0
{
}
#typev QdssReplicatorAcpi_c208 22 "%0Unable to read Replicator BaseAddress" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseReplicatorConfigPackage$fin$0
{
}
#typev QdssReplicatorAcpi_c200 21 "%0Unable to read Replicator Index" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseReplicatorConfigPackage$fin$0
{
}
#typev QdssReplicatorAcpi_c193 20 "%0pArgument is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseReplicatorConfigPackage$fin$0
{
}
#typev QdssReplicatorAcpi_c274 27 "%0%!FUNC! 274: Failed in QdssQueryAcpiNamePackageFromReg for REPC status = %10!s! or OutputBufferMemObj = 0x%11!p!s is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig
{
status, ItemNTSTATUS -- 10
OutputBufferMemObj, ItemPtr -- 11
}
#typev QdssReplicatorAcpi_c324 32 "%0Unable to allocate memory for Replicator block context" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig
{
}
#typev QdssReplicatorAcpi_c354 35 "%0QdssParseReplicatorConfigPackage failed to parse ACPI package %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig
{
index, ItemLong -- 10
}
#typev QdssReplicatorAcpi_c342 34 "%0argument is not a package type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig
{
}
#typev QdssReplicatorAcpi_c335 33 "%0ACPI data pointer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig
{
}
#typev QdssReplicatorAcpi_c306 31 "%0Mismatch in ACPI for number of Replicator's and their configurations" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig
{
}
#typev QdssReplicatorAcpi_c296 30 "%0ACPI output buffer is empty" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig
{
}
#typev QdssReplicatorAcpi_c289 29 "%0ACPI output buffer is invalid (Signature = 0x%10!08X!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig
{
pOutputBuffer->Signature, ItemLong -- 10
}
#typev QdssReplicatorAcpi_c282 28 "%0ACPI output buffer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig
{
}
#typev QdssReplicatorAcpi_c266 26 "%0Device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig
{
}
#typev QdssReplicatorAcpi_c274 27 "%0%!FUNC! 274: Failed in QdssQueryAcpiNamePackageFromReg for REPC status = %10!s! or OutputBufferMemObj = 0x%11!p!s is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig$fin$0
{
status, ItemNTSTATUS -- 10
OutputBufferMemObj, ItemPtr -- 11
}
#typev QdssReplicatorAcpi_c324 32 "%0Unable to allocate memory for Replicator block context" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig$fin$0
{
}
#typev QdssReplicatorAcpi_c354 35 "%0QdssParseReplicatorConfigPackage failed to parse ACPI package %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig$fin$0
{
index, ItemLong -- 10
}
#typev QdssReplicatorAcpi_c342 34 "%0argument is not a package type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig$fin$0
{
}
#typev QdssReplicatorAcpi_c335 33 "%0ACPI data pointer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig$fin$0
{
}
#typev QdssReplicatorAcpi_c306 31 "%0Mismatch in ACPI for number of Replicator's and their configurations" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig$fin$0
{
}
#typev QdssReplicatorAcpi_c296 30 "%0ACPI output buffer is empty" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig$fin$0
{
}
#typev QdssReplicatorAcpi_c289 29 "%0ACPI output buffer is invalid (Signature = 0x%10!08X!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig$fin$0
{
pOutputBuffer->Signature, ItemLong -- 10
}
#typev QdssReplicatorAcpi_c282 28 "%0ACPI output buffer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig$fin$0
{
}
#typev QdssReplicatorAcpi_c266 26 "%0Device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorConfig$fin$0
{
}
#typev QdssReplicatorAcpi_c75 12 "%0%!FUNC! 75: Failed in QdssQueryAcpiNamePackageFromReg for QREP status = %10!s! or OutputBufferMemObj = 0x%11!p! is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames
{
status, ItemNTSTATUS -- 10
OutputBufferMemObj, ItemPtr -- 11
}
#typev QdssReplicatorAcpi_c117 16 "%0Unable to allocate memory for Replicator Names" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames
{
}
#typev QdssReplicatorAcpi_c153 19 "%0argument is too big to copy" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames
{
}
#typev QdssReplicatorAcpi_c136 18 "%0argument is not a string type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames
{
}
#typev QdssReplicatorAcpi_c129 17 "%0ACPI data pointer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames
{
}
#typev QdssReplicatorAcpi_c97 15 "%0ACPI output buffer is empty" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames
{
}
#typev QdssReplicatorAcpi_c90 14 "%0ACPI output buffer is invalid (Signature = 0x%10!08X!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames
{
pOutputBuffer->Signature, ItemLong -- 10
}
#typev QdssReplicatorAcpi_c83 13 "%0ACPI output buffer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames
{
}
#typev QdssReplicatorAcpi_c67 11 "%0Replicator context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames
{
}
#typev QdssReplicatorAcpi_c59 10 "%0Device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames
{
}
#typev QdssReplicatorAcpi_c75 12 "%0%!FUNC! 75: Failed in QdssQueryAcpiNamePackageFromReg for QREP status = %10!s! or OutputBufferMemObj = 0x%11!p! is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames$fin$0
{
status, ItemNTSTATUS -- 10
OutputBufferMemObj, ItemPtr -- 11
}
#typev QdssReplicatorAcpi_c117 16 "%0Unable to allocate memory for Replicator Names" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames$fin$0
{
}
#typev QdssReplicatorAcpi_c153 19 "%0argument is too big to copy" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames$fin$0
{
}
#typev QdssReplicatorAcpi_c136 18 "%0argument is not a string type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames$fin$0
{
}
#typev QdssReplicatorAcpi_c129 17 "%0ACPI data pointer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames$fin$0
{
}
#typev QdssReplicatorAcpi_c97 15 "%0ACPI output buffer is empty" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames$fin$0
{
}
#typev QdssReplicatorAcpi_c90 14 "%0ACPI output buffer is invalid (Signature = 0x%10!08X!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames$fin$0
{
pOutputBuffer->Signature, ItemLong -- 10
}
#typev QdssReplicatorAcpi_c83 13 "%0ACPI output buffer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames$fin$0
{
}
#typev QdssReplicatorAcpi_c67 11 "%0Replicator context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames$fin$0
{
}
#typev QdssReplicatorAcpi_c59 10 "%0Device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForReplicatorNames$fin$0
{
}
