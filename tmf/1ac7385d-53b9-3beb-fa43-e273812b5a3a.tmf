// PDB:  qcmbrg850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
1ac7385d-53b9-3beb-fa43-e273812b5a3a 10.4 // SRC=mbrgglink.c MJ= MN=
#typev mbrgglink_c99 13 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkActivate
{
}
#typev mbrgglink_c94 12 "%0mbrgglink.c::%!FUNC! :=> Error, previous state should not be signalled" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkActivate
{
}
#typev mbrgglink_c90 11 "%0mbrgglink.c::%!FUNC! :=> Release the USB read request semaphore" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkActivate
{
}
#typev mbrgglink_c63 30 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkActivate
{
}
#typev mbrgglink_c63 29 "%0mbrgglink.c::%!FUNC! :=> Rx request creation failed. Insufficient memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkActivate
{
}
#typev mbrgglink_c63 28 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkActivate
{
}
#typev mbrgglink_c56 27 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkActivate
{
}
#typev mbrgglink_c56 25 "%0mbrgglink.c::%!FUNC! :=> Tx request creation failed. Insufficient memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkActivate
{
}
#typev mbrgglink_c56 26 "%0mbrgglink.c::%!FUNC! :=> Tx memory creation failed. Insufficient memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkActivate
{
}
#typev mbrgglink_c56 24 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkActivate
{
}
#typev mbrgglink_c49 23 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkActivate
{
}
#typev mbrgglink_c49 22 "%0mbrgglink.c::%!FUNC! :=> Glink interface query failed with status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkActivate
{
ntStatus, ItemLong -- 10
}
#typev mbrgglink_c49 21 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkActivate
{
}
#typev mbrgglink_c47 10 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkActivate
{
}
#typev mbrgglink_c1076 103 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkChannelStateChange
{
}
#typev mbrgglink_c1072 102 "%0mbrgglink.c::%!FUNC!:=> Unknown Glink channel state change event=%10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkChannelStateChange
{
chnlevent, ItemLong -- 10
}
#typev mbrgglink_c1068 101 "%0mbrgglink.c::%!FUNC!:=> Local end disconnected. glink_close() called" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkChannelStateChange
{
}
#typev mbrgglink_c1063 100 "%0mbrgglink.c::%!FUNC!:=> Error: Unable to submit work item err=0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkChannelStateChange
{
ntStatus, ItemLong -- 10
}
#typev mbrgglink_c1055 99 "%0mbrgglink.c::%!FUNC!:=> Error: Unable to submit work item err=0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkChannelStateChange
{
ntStatus, ItemLong -- 10
}
#typev mbrgglink_c1043 98 "%0mbrgglink.c::%!FUNC!:=> Error: device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkChannelStateChange
{
}
#typev mbrgglink_c1039 97 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkChannelStateChange
{
}
#typev mbrgglink_c1023 96 "%0mbrgglink.c::%!FUNC!:=> Control line state changed but DTR/DSR/RTS/CTS did not change. prev state=0x%10!x!, curr state=0x%11!x!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkControlLineChange
{
prevState, ItemLong -- 10
currState, ItemLong -- 11
}
#typev mbrgglink_c1017 95 "%0mbrgglink.c::%!FUNC!:=> Control line state changed RTS-CTS change. prev state=0x%10!x!, curr state=0x%11!x!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkControlLineChange
{
prevState, ItemLong -- 10
currState, ItemLong -- 11
}
#typev mbrgglink_c1010 94 "%0mbrgglink.c::%!FUNC!:=> Control line state changed DTR-DSR change. prev state=0x%10!x!, curr state=0x%11!x!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkControlLineChange
{
prevState, ItemLong -- 10
currState, ItemLong -- 11
}
#typev mbrgglink_c1002 93 "%0mbrgglink.c::%!FUNC!:=> Error: device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkControlLineChange
{
}
#typev mbrgglink_c1177 115 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkCtrlLinkStateNotifCb
{
}
#typev mbrgglink_c1173 114 "%0mbrgglink.c::%!FUNC!:=> Error: Unable to submit work item err=0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkCtrlLinkStateNotifCb
{
ntStatus, ItemLong -- 10
}
#typev mbrgglink_c1164 113 "%0mbrgglink.c::%!FUNC!:=> Error: Unable to submit work item err=0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkCtrlLinkStateNotifCb
{
ntStatus, ItemLong -- 10
}
#typev mbrgglink_c1157 112 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkCtrlLinkStateNotifCb
{
}
#typev mbrgglink_c836 76 "%0mbrgglink.c::%!FUNC!:=> Failed to set local signal state err=%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkCtrlSetSignalState
{
status, ItemLong -- 10
}
#typev mbrgglink_c832 75 "%0mbrgglink.c::%!FUNC! :=> Wrote to GLINK signal = %10!u!, state = %11!u!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkCtrlSetSignalState
{
signalValue, ItemLong -- 10
bState, ItemLong -- 11
}
#typev mbrgglink_c816 74 "%0mbrgglink.c::%!FUNC! :=> Get local GLINK signal = %10!u!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkCtrlSetSignalState
{
signalValue, ItemLong -- 10
}
#typev mbrgglink_c811 73 "%0mbrgglink.c::%!FUNC!:=> Failed to get local signal state err=%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkCtrlSetSignalState
{
status, ItemLong -- 10
}
#typev mbrgglink_c486 48 "%0mbrgglink.c::%!FUNC! :=> Unknown event signalled 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkIoEventHandler
{
ntStatus, ItemLong -- 10
}
// PDB:  qcmbrg850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev mbrgglink_c481 47 "%0mbrgglink.c::%!FUNC! USB driver unload signalled to Glink" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkIoEventHandler
{
}
// PDB:  qcmbrg850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev mbrgglink_c457 46 "%0mbrgglink.c::%!FUNC! :=> Failed to get remote signal state err=%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkIoEventHandler
{
glinkRequestStatus, ItemLong -- 10
}
#typev mbrgglink_c450 45 "%0mbrgglink.c::%!FUNC! :=> GLINK DSR change signalled" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkIoEventHandler
{
}
#typev mbrgglink_c444 44 "%0mbrgglink.c::%!FUNC! :=> GLINK CTS signalled" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkIoEventHandler
{
}
#typev mbrgglink_c408 43 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkIoEventHandler
{
}
#typev mbrgglink_c407 42 "%0mbrgglink.c::%!FUNC! Error: pWaitBlocks memory alloc failure. Exiting GLINK IO thread" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkIoEventHandler
{
}
#typev mbrgglink_c396 41 "%0mbrgglink.c::%!FUNC! ++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkIoEventHandler
{
}
#typev mbrgglink_c552 53 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkModemAvailableInit
{
}
#typev mbrgglink_c512 50 "%0mbrgglink.c::%!FUNC! :=> Failed to queue receive intent status:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkModemAvailableInit
{
glinkRequeststatus, ItemLong -- 10
}
#typev mbrgglink_c548 78 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkModemAvailableInit
{
}
#typev mbrgglink_c548 76 "%0mbrgglink.c::%!FUNC!:=> Failed to set local signal state err=%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkModemAvailableInit
{
status, ItemLong -- 10
}
#typev mbrgglink_c548 75 "%0mbrgglink.c::%!FUNC! :=> Wrote to GLINK signal = %10!u!, state = %11!u!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkModemAvailableInit
{
signalValue, ItemLong -- 10
bState, ItemLong -- 11
}
#typev mbrgglink_c548 74 "%0mbrgglink.c::%!FUNC! :=> Get local GLINK signal = %10!u!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkModemAvailableInit
{
signalValue, ItemLong -- 10
}
#typev mbrgglink_c548 73 "%0mbrgglink.c::%!FUNC!:=> Failed to get local signal state err=%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkModemAvailableInit
{
status, ItemLong -- 10
}
#typev mbrgglink_c548 77 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkModemAvailableInit
{
}
#typev mbrgglink_c539 52 "%0mbrgglink.c::%!FUNC! :=> Glink request item" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkModemAvailableInit
{
}
#typev mbrgglink_c520 51 "%0mbrgglink.c::%!FUNC! :=> Read the request item" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkModemAvailableInit
{
}
#typev mbrgglink_c503 49 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkModemAvailableInit
{
}
#typev mbrgglink_c147 20 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkNotifyInterfaceChange
{
}
#typev mbrgglink_c142 19 "%0mbrgglink.c::%!FUNC!:=> Error: Unable to submit work item err=0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkNotifyInterfaceChange
{
ntStatus, ItemLong -- 10
}
#typev mbrgglink_c136 18 "%0mbrgglink.c::%!FUNC! :=> RegisterPnPNotification Remove" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkNotifyInterfaceChange
{
}
#typev mbrgglink_c131 17 "%0mbrgglink.c::%!FUNC!:=> Error: Unable to submit work item err=0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkNotifyInterfaceChange
{
ntStatus, ItemLong -- 10
}
#typev mbrgglink_c125 16 "%0mbrgglink.c::%!FUNC! :=> RegisterPnPNotification Arrive" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkNotifyInterfaceChange
{
}
#typev mbrgglink_c117 15 "%0mbrgglink.c::%!FUNC! :=> pDeviceContext is null" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkNotifyInterfaceChange
{
}
#typev mbrgglink_c113 14 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkNotifyInterfaceChange
{
}
#typev mbrgglink_c1091 106 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRemoteReceiveIntentNotify
{
}
#typev mbrgglink_c1090 105 "%0mbrgglink.c::%!FUNC!:=> Remote end queued an intent of size=%10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRemoteReceiveIntentNotify
{
(int)size, ItemLong -- 10
}
#typev mbrgglink_c1089 104 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRemoteReceiveIntentNotify
{
}
#typev mbrgglink_c1105 109 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRemoteReceiveIntentRequestNotify
{
}
#typev mbrgglink_c1104 108 "%0mbrgglink.c::%!FUNC!:=> Remote end requested to queue an intent of size=%10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRemoteReceiveIntentRequestNotify
{
(int)size, ItemLong -- 10
}
#typev mbrgglink_c1103 107 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRemoteReceiveIntentRequestNotify
{
}
#typev mbrgglink_c973 92 "%0mbrgglink.c:%!FUNC!:=>  Copied %10!Id! bytes" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxAppendData
{
(int)pRxGlinkReq->uSize, ItemPtr -- 10
}
#typev mbrgglink_c968 91 "%0mbrgglink.c::%!FUNC! :=> copy failed with status: 0x%10!x!, length: %11!d!, offset: %12!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxAppendData
{
ntStatus, ItemLong -- 10
(int)pRxGlinkReq->uSize, ItemLong -- 11
(int)*offset, ItemLong -- 12
}
#typev mbrgglink_c961 90 "%0mbrgglink.c::%!FUNC!:=> Invalid length to copy: %10!d!. Skip copy." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxAppendData
{
(int)pRxGlinkReq->uSize, ItemLong -- 10
}
#typev mbrgglink_c954 89 "%0mbrgglink.c::%!FUNC!:=> Total size greater than GLINK fifo. Buffer Full 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxAppendData
{
ntStatus, ItemLong -- 10
}
#typev mbrgglink_c947 88 "%0mbrgglink.c::%!FUNC!:=> Invalid buffer. Exiting." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxAppendData
{
}
#typev mbrgglink_c598 56 "%0mbrgglink.c::%!FUNC!-- IntentId=%10!u!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxComplete
{
uRxIntentId, ItemLong -- 10
}
#typev mbrgglink_c576 55 "%0mbrgglink.c::%!FUNC!:=> Error: pkt_priv or priv is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxComplete
{
}
#typev mbrgglink_c583 110 "%0mbrgglink.c::%!FUNC! :=> Found Free Glink Rx Request: %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxComplete
{
i, ItemLong -- 10
}
#typev mbrgglink_c583 111 "%0mbrgglink.c::%!FUNC!:=> Free Glink Rx Request not found" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxComplete
{
}
#typev mbrgglink_c572 54 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxComplete
{
}
#typev mbrgglink_c747 68 "%0mbrgglink.c::%!FUNC! :=> Write to USB failed with status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxProcessRxComplete
{
WdfRequestGetStatus(USBRequest), ItemLong -- 10
}
#typev mbrgglink_c751 69 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxProcessRxComplete
{
}
#typev mbrgglink_c739 67 "%0mbrgglink.c::%!FUNC! :=> USB is not ready, hence not sending the packets" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxProcessRxComplete
{
}
#typev mbrgglink_c732 66 "%0mbrgglink.c::%!FUNC! :=> WdfIoTargetFormatRequestForWrite failed with status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxProcessRxComplete
{
ntStatus, ItemLong -- 10
}
#typev mbrgglink_c715 65 "%0mbrgglink.c::%!FUNC! :=> Aggregated %10!d! packets with data %11!Id! bytes" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxProcessRxComplete
{
noOfPackets, ItemLong -- 10
usbmemOffset, ItemPtr -- 11
}
#typev mbrgglink_c705 64 "%0mbrgglink.c::%!FUNC! :=> Return Rx buff to Glink failed. Modem not up" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxProcessRxComplete
{
}
#typev mbrgglink_c700 63 "%0mbrgglink.c::%!FUNC! :=> Queued to GLINK. IntentId=%10!u!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxProcessRxComplete
{
i, ItemLong -- 10
}
#typev mbrgglink_c692 62 "%0mbrgglink.c:%!FUNC! :=> UsbMemOffset: %10!Id!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxProcessRxComplete
{
usbmemOffset, ItemPtr -- 10
}
#typev mbrgglink_c676 61 "%0mbrgglink.c::%!FUNC! :=> Not processing Rx pkt" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxProcessRxComplete
{
}
#typev mbrgglink_c673 81 "%0mbrgglink.c::%!FUNC! :=> Found Free USB Request: %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxProcessRxComplete
{
i, ItemLong -- 10
}
#typev mbrgglink_c673 82 "%0mbrgglink.c::%!FUNC!:=> Error: Free USB Request Not Found" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxProcessRxComplete
{
}
#typev mbrgglink_c662 58 "%0mbrgglink.c::%!FUNC! Drop Rx Pkts = %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxProcessRxComplete
{
noOfPackets, ItemLong -- 10
}
#typev mbrgglink_c662 57 "%0mbrgglink.c::%!FUNC! Error: Rx buff return to Glink failed. Modem not up" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxProcessRxComplete
{
}
#typev mbrgglink_c661 60 "%0mbrgglink.c::%!FUNC! Error: USB iface removed" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxProcessRxComplete
{
}
#typev mbrgglink_c654 59 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxProcessRxComplete
{
}
#typev mbrgglink_c378 40 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxQueueIntents
{
}
#typev mbrgglink_c366 38 "%0mbrgglink.c::%!FUNC! :=> Error: Failed to queue receive intent err=%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxQueueIntents
{
glinkRequeststatus, ItemLong -- 10
}
#typev mbrgglink_c374 39 "%0mbrgglink.c::%!FUNC! :=> Error, previous state should not be signalled" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxQueueIntents
{
}
#typev mbrgglink_c355 37 "%0mbrgglink.c::%!FUNC! :=> KeWaitForSingleObject failed with status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxQueueIntents
{
ntStatus, ItemLong -- 10
}
#typev mbrgglink_c348 36 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkRxQueueIntents
{
}
#typev mbrgglink_c335 35 "%0mbrgglink.c::%!FUNC! -- :=> status = 0x%10!x!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkSendPortOpenRequest
{
ntStatus, ItemLong -- 10
}
#typev mbrgglink_c331 34 "%0mbrgglink.c::%!FUNC! :=> Glink IO thread creation failed %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkSendPortOpenRequest
{
ntStatus, ItemLong -- 10
}
#typev mbrgglink_c313 33 "%0mbrgglink.c::%!FUNC! :=> Glink open failed with status %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkSendPortOpenRequest
{
glinkRequestStatus, ItemLong -- 10
}
#typev mbrgglink_c299 32 "%0mbrgglink.c::%!FUNC! :=> Glink open failed with status %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkSendPortOpenRequest
{
glinkRequestStatus, ItemLong -- 10
}
#typev mbrgglink_c284 31 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkSendPortOpenRequest
{
}
#typev mbrgglink_c1252 123 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateConfigureWorkItem
{
}
#typev mbrgglink_c1236 122 "%0mbrgglink.c::%!FUNC! GetGlinkStateWorkItemContext failed" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateConfigureWorkItem
{
}
#typev mbrgglink_c1229 121 "%0mbrgglink.c::%!FUNC! Work item create failed err = 0x%10!x!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateConfigureWorkItem
{
ntStatus, ItemLong -- 10
}
#typev mbrgglink_c1217 120 "%0mbrgglink.c::%!FUNC! pGlinkStateEntry is NULL" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateConfigureWorkItem
{
}
#typev mbrgglink_c1209 119 "%0mbrgglink.c::%!FUNC! Modem Bridge not yet supported in hibernate mode" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateConfigureWorkItem
{
}
#typev mbrgglink_c1204 118 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateConfigureWorkItem
{
}
#typev mbrgglink_c1484 155 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1280 125 "%0mbrgglink.c::%!FUNC! :=> pDeviceContext is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1293 126 "%0mbrgglink.c::%!FUNC!:=> List is empty. No state event to process" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1477 154 "%0mbrgglink.c::%!FUNC! :=> Invalid curr state %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
pDeviceContext->glinkCurrState, ItemLong -- 10
}
#typev mbrgglink_c1472 153 "%0mbrgglink.c::%!FUNC!:=> Glink Ctrl Event -> %10!d! not handled in Curr State -> %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
pGlinkStateEntry->glinkCtrlEvent, ItemLong -- 10
pDeviceContext->glinkCurrState, ItemLong -- 11
}
#typev mbrgglink_c1464 152 "%0mbrgglink.c::%!FUNC!:=> state: GLINK_MODEM_DOWN" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1456 151 "%0mbrgglink.c::%!FUNC!:=> state: GLINK_TRANSPORT_DOWN" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1449 150 "%0mbrgglink.c::%!FUNC!:=> Glink Ctrl Event -> %10!d! not handled in Curr State -> %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
pGlinkStateEntry->glinkCtrlEvent, ItemLong -- 10
pDeviceContext->glinkCurrState, ItemLong -- 11
}
#typev mbrgglink_c1444 149 "%0mbrgglink.c::%!FUNC!:=> state: GLINK_TRANSPORT_DOWN" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1437 148 "%0mbrgglink.c::%!FUNC!:=> Glink Ctrl Event -> %10!d! not handled in Curr State" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
pGlinkStateEntry->glinkCtrlEvent, ItemLong -- 10
}
#typev mbrgglink_c1429 147 "%0mbrgglink.c::%!FUNC!:=> state: GLINK_TRANSPORT_DOWN" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1424 146 "%0mbrgglink.c::%!FUNC!:=> state: GLINK_IO_READY" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1413 144 "%0mbrgglink.c::%!FUNC!:=> state: GLINK_TRANSPORT_DOWN" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1417 145 "%0mbrgglink.c::%!FUNC!:=> Glink Ctrl Event -> %10!d! not handled in Curr State -> %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
pGlinkStateEntry->glinkCtrlEvent, ItemLong -- 10
pDeviceContext->glinkCurrState, ItemLong -- 11
}
#typev mbrgglink_c1406 143 "%0mbrgglink.c::%!FUNC! :=> Glink open failed with status %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
glinkRequestStatus, ItemLong -- 10
}
#typev mbrgglink_c1399 142 "%0mbrgglink.c::%!FUNC!:=> Glink transport state up after SSR" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1394 141 "%0mbrgglink.c::%!FUNC!:=> state: GLINK_TRANSPORT_UP" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1387 140 "%0mbrgglink.c::%!FUNC!:=> Glink Ctrl Event -> %10!d! not handled in Curr State -> %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
pGlinkStateEntry->glinkCtrlEvent, ItemLong -- 10
pDeviceContext->glinkCurrState, ItemLong -- 11
}
#typev mbrgglink_c1379 139 "%0mbrgglink.c::%!FUNC!:=> state: GLINK_TRANSPORT_DOWN" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1375 138 "%0mbrgglink.c::%!FUNC!:=> state: GLINK_TRANSPORT_UP" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1369 137 "%0mbrgglink.c::%!FUNC!:=> Error: Unable to submit work item err=0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
ntStatus, ItemLong -- 10
}
#typev mbrgglink_c1363 136 "%0mbrgglink.c::%!FUNC! :=> Modem back online after SSR" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1357 135 "%0mbrgglink.c::%!FUNC! :=> Error, previous state should not be signalled" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1348 134 "%0mbrgglink.c::%!FUNC!:=> state: GLINK_MODEM_UP" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1342 133 "%0mbrgglink.c::%!FUNC!:=> state: GLINK_TRANSPORT_DOWN" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1337 132 "%0mbrgglink.c::%!FUNC!:=> Glink Ctrl Event -> %10!d! not handled in Curr State -> %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
pGlinkStateEntry->glinkCtrlEvent, ItemLong -- 10
pDeviceContext->glinkCurrState, ItemLong -- 11
}
#typev mbrgglink_c1330 131 "%0mbrgglink.c::%!FUNC!:=> state: GLINK_TRANSPORT_UP" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1323 130 "%0mbrgglink.c::%!FUNC!:=> Glink Ctrl Event -> %10!d! not handled in Curr State -> %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
pGlinkStateEntry->glinkCtrlEvent, ItemLong -- 10
pDeviceContext->glinkCurrState, ItemLong -- 11
}
#typev mbrgglink_c1316 129 "%0mbrgglink.c::%!FUNC!:=> state: GLINK_INIT" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1309 128 "%0mbrgglink.c::%!FUNC!:=> state: GLINK_INTERFACE_UP" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c1300 127 "%0mbrgglink.c::%!FUNC! evt=%10!d!, currstate=%11!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
pGlinkStateEntry->glinkCtrlEvent, ItemLong -- 10
pDeviceContext->glinkCurrState, ItemLong -- 11
}
#typev mbrgglink_c1270 124 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkStateManagerWorkItem
{
}
#typev mbrgglink_c929 87 "%0mbrgglink.c:%!FUNC!:=>  Copied %10!Id! bytes" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkTxAppendData
{
length, ItemPtr -- 10
}
#typev mbrgglink_c923 86 "%0mbrgglink.c::%!FUNC! :=> copy failed with status: 0x%10!x!, length: %11!d!, offset: %12!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkTxAppendData
{
ntStatus, ItemLong -- 10
(int)length, ItemLong -- 11
(int)*offset, ItemLong -- 12
}
#typev mbrgglink_c916 85 "%0mbrgglink.c::%!FUNC!:=> Invalid length to copy: %10!d!. Skip copy." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkTxAppendData
{
(int)length, ItemLong -- 10
}
#typev mbrgglink_c909 84 "%0mbrgglink.c::%!FUNC!:=> Total size greater than GLINK fifo. Buffer Full 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkTxAppendData
{
ntStatus, ItemLong -- 10
}
#typev mbrgglink_c902 83 "%0mbrgglink.c::%!FUNC!:=> Invalid buffer. Exiting." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkTxAppendData
{
}
#typev mbrgglink_c788 72 "%0mbrgglink.c::%!FUNC!-- uTxReqId=%10!u!, bytes=%11!I64u!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkTxComplete
{
uTxReqId, ItemLong -- 10
size, ItemULongLong -- 11
}
#typev mbrgglink_c774 71 "%0mbrgglink.c::%!FUNC!:=> Error: device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=GlinkTxComplete
{
}
#typev mbrgglink_c770 70 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=GlinkTxComplete
{
}
// PDB:  qcmbrg850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev mbrgusb_c67 117 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbDeactivate
{
}
#typev mbrgusb_c67 116 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbDeactivate
{
}
// PDB:  qcmbrg850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev mbrgusb_c462 78 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbIoEventHandler
{
}
#typev mbrgusb_c462 77 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbIoEventHandler
{
}
// PDB:  qcmbrg850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev mbrgusb_c433 80 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbIoEventHandler
{
}
#typev mbrgusb_c433 76 "%0mbrgglink.c::%!FUNC!:=> Failed to set local signal state err=%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=UsbIoEventHandler
{
status, ItemLong -- 10
}
#typev mbrgusb_c433 75 "%0mbrgglink.c::%!FUNC! :=> Wrote to GLINK signal = %10!u!, state = %11!u!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbIoEventHandler
{
signalValue, ItemLong -- 10
bState, ItemLong -- 11
}
#typev mbrgusb_c433 74 "%0mbrgglink.c::%!FUNC! :=> Get local GLINK signal = %10!u!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbIoEventHandler
{
signalValue, ItemLong -- 10
}
#typev mbrgusb_c433 73 "%0mbrgglink.c::%!FUNC!:=> Failed to get local signal state err=%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=UsbIoEventHandler
{
status, ItemLong -- 10
}
#typev mbrgusb_c433 79 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbIoEventHandler
{
}
#typev mbrgusb_c432 78 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbIoEventHandler
{
}
#typev mbrgusb_c432 76 "%0mbrgglink.c::%!FUNC!:=> Failed to set local signal state err=%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=UsbIoEventHandler
{
status, ItemLong -- 10
}
#typev mbrgusb_c432 75 "%0mbrgglink.c::%!FUNC! :=> Wrote to GLINK signal = %10!u!, state = %11!u!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbIoEventHandler
{
signalValue, ItemLong -- 10
bState, ItemLong -- 11
}
#typev mbrgusb_c432 74 "%0mbrgglink.c::%!FUNC! :=> Get local GLINK signal = %10!u!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbIoEventHandler
{
signalValue, ItemLong -- 10
}
#typev mbrgusb_c432 73 "%0mbrgglink.c::%!FUNC!:=> Failed to get local signal state err=%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=MBRG_WPP_LOGS FUNC=UsbIoEventHandler
{
status, ItemLong -- 10
}
#typev mbrgusb_c432 77 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbIoEventHandler
{
}
// PDB:  qcmbrg850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev mbrgusb_c638 80 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbQueryControlLineStateNotificationCompletionRoutine
{
}
#typev mbrgusb_c638 80 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbQueryControlLineStateNotificationCompletionRoutine
{
}
#typev mbrgusb_c633 79 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbQueryControlLineStateNotificationCompletionRoutine
{
}
#typev mbrgusb_c629 79 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbQueryControlLineStateNotificationCompletionRoutine
{
}
#typev mbrgusb_c627 78 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbQueryControlLineStateNotificationCompletionRoutine
{
}
#typev mbrgusb_c627 78 "%0mbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbQueryControlLineStateNotificationCompletionRoutine
{
}
#typev mbrgusb_c624 77 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbQueryControlLineStateNotificationCompletionRoutine
{
}
// PDB:  qcmbrg850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev mbrgusb_c619 77 "%0mbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=MBRG_WPP_LOGS FUNC=UsbQueryControlLineStateNotificationCompletionRoutine
{
}
