// PDB:  qcsubsys7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:20:588 (UTC) [tracepdb]
a9221209-0ee1-370a-58dd-fc791959ec24 subsys // SRC=smp2p.c MJ= MN=
#typev smp2p_c136 16 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CleanupSMP2P
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c125 15 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::FAILURE: Unable to destroy SMP2P (SS sleep notification) context, status %11!s! " //   LEVEL=LOG_WARN FLAGS=SUBSYS SUBSYSTEM=commonContext->type FUNC=CleanupSMP2P
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
status, ItemNTSTATUS -- 11
}
#typev smp2p_c119 14 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::FAILURE: Unable to destroy SMP2P context, status %11!s! " //   LEVEL=LOG_WARN FLAGS=SUBSYS SUBSYSTEM=commonContext->type FUNC=CleanupSMP2P
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
status, ItemNTSTATUS -- 11
}
#typev smp2p_c112 13 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::FAILURE: Unable to de-register with SMP2P, status %11!s! " //   LEVEL=LOG_WARN FLAGS=SUBSYS SUBSYSTEM=commonContext->type FUNC=CleanupSMP2P
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
status, ItemNTSTATUS -- 11
}
#typev smp2p_c100 12 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Entry " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CleanupSMP2P
{
}
#typev smp2p_c286 33 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CleanupSmp2pMonitorThread
{
finalStatus, ItemNTSTATUS -- 10
}
#typev smp2p_c283 32 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exiting AmssCleanupSmp2pMonitorThread with error, status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=CleanupSmp2pMonitorThread
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c277 31 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::FAILURE: Failed to acquire the HibernateProcessingPendingLock" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS SUBSYSTEM=commonContext->type FUNC=CleanupSmp2pMonitorThread
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
}
#typev smp2p_c267 30 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Cleaning up the smp2p contexts as the system is entering hibernate state " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=CleanupSmp2pMonitorThread
{
}
#typev smp2p_c258 29 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::FAILURE: Failed to reset the apps to modem SMP2P context " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=CleanupSmp2pMonitorThread
{
}
#typev smp2p_c254 28 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Successfully reset the apps to modem SMP2P context " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=CleanupSmp2pMonitorThread
{
}
#typev smp2p_c236 27 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::FAILURE: SignalObjectAndWait didn't finish with STATUS_SUCCESS, status: %10!s! " //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=CleanupSmp2pMonitorThread
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c233 26 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Finished KeWaitForSingleObject " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=CleanupSmp2pMonitorThread
{
}
#typev smp2p_c221 25 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Setting the terminate event for the SMP2P monitor thread and waiting " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=CleanupSmp2pMonitorThread
{
}
#typev smp2p_c217 24 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CleanupSmp2pMonitorThread
{
}
#typev smp2p_c735 93 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=EvtSSError
{
}
#typev smp2p_c731 92 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::As WDOG Bite Recovery in progress, Subsystem error event dropped without injecting into statemachine." //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=EvtSSError
{
}
#typev smp2p_c726 91 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Enqueueing a DEVICE_EVENT_SUBSYSTEM_ERROR workitem " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=EvtSSError
{
}
#typev smp2p_c717 90 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Will bug check the HLOS on behalf of the faulting subsystem (this is NOT an issue in the SUBSYS driver) " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=EvtSSError
{
}
#typev smp2p_c715 89 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::Subsystem error occurred." //   LEVEL=LOG_CRIT FLAGS=SUBSYS SUBSYSTEM=context->type FUNC=EvtSSError
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
}
#typev smp2p_c708 88 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=EvtSSError
{
}
#typev smp2p_c757 96 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=EvtSSInitiatedReset
{
}
#typev smp2p_c754 95 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Detected subsys initiated SSR " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=EvtSSInitiatedReset
{
}
#typev smp2p_c746 94 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=EvtSSInitiatedReset
{
}
#typev smp2p_c681 84 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=EvtSSSelfSufficient
{
}
#typev smp2p_c678 83 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Subsystem is self sufficient and can manage its own power. We are enqueueing a DEVICE_EVENT_SMP2P_PWR_CLK_RDY workitem " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=EvtSSSelfSufficient
{
}
#typev smp2p_c677 82 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=EvtSSSelfSufficient
{
}
#typev smp2p_c695 87 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=EvtSSShutdownAck
{
}
#typev smp2p_c692 86 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Modem has acknowledged that it is in a soft shutdown state, enqueueing a DEVICE_EVENT_SMP2P_SHUTDOWN_ACK workitem " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=EvtSSShutdownAck
{
}
#typev smp2p_c691 85 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=EvtSSShutdownAck
{
}
#typev smp2p_c667 81 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=EvtSSUp
{
}
#typev smp2p_c664 80 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Subsystem is up and running, enqueueing DEVICE_EVENT_SMP2P_ERR_HDL_RDY workitem " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=EvtSSUp
{
}
#typev smp2p_c663 79 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=EvtSSUp
{
}
#typev smp2p_c81 11 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=InitializeSMP2P
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c72 10 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Entry " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=InitializeSMP2P
{
}
#typev smp2p_c579 67 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=ProcessSmp2pMsg
{
}
#typev smp2p_c575 66 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Received graceful shutdown acknowledgement from the subsystem, calling EvtSSShutdownAck... " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=ProcessSmp2pMsg
{
}
#typev smp2p_c568 65 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Received notification from the subsystem that it is ready to handle its own power and clocks, calling EvtSSSelfSufficient... " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=ProcessSmp2pMsg
{
}
#typev smp2p_c562 64 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Received notification from the subsystem that it is ready to handle its own errors, calling EvtSSUp... " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=ProcessSmp2pMsg
{
}
#typev smp2p_c556 63 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Received error fatal notification from the subsystem, calling EvtSSError " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=ProcessSmp2pMsg
{
}
#typev smp2p_c549 62 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Received subsys initiated SSR, calling EvtSSInitiatedReset... " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=ProcessSmp2pMsg
{
}
#typev smp2p_c544 61 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::SMP2P data: 0x%10!x!, previous value mask: 0x%11!x! " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=ProcessSmp2pMsg
{
uData, ItemLong -- 10
prevValMask, ItemLong -- 11
}
#typev smp2p_c538 60 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::FAILURE: Unable to read SMP2P message, waiting for next message, status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=ProcessSmp2pMsg
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c533 59 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Checking for SMP2P message in the SMP2P monitor thread, reading the message... " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=ProcessSmp2pMsg
{
}
#typev smp2p_c530 58 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=ProcessSmp2pMsg
{
}
#typev smp2p_c517 57 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c516 56 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exiting the SMP2P monitor thread... " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c508 55 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::FAILURE: Failure in the SMP2P monitor thread, pulsing the state machine with an error " //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c498 54 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Wait ended with unexpected status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c487 52 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Received terminate signal in the SMP2P monitor thread, exiting... " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c493 53 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::SMP2P event triggered, reading and processing the message... " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c461 50 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::FAILURE: Error(s) encountered while trying to register with the outgoing modem SMP2P entry " //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c455 49 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::FAILURE: Wait for subsys to apps context ended with an unexpected status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c468 51 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::SMP2P Listener thread now listening for SMP2P events from the modem " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c450 48 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Modem to apps context has been created, checking to see if there are any outstanding messages... " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c444 47 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Received terminate signal in the SMP2P monitor thread, exiting... " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c426 46 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Waiting for the modem to apps SMP2P entry to be created by the modem... " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c411 45 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::FAILURE: Error(s) encountered while trying to create with the outgoing SMP2P entry, status: %10!s! " //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c372 40 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::FAILURE: Wait for apps to subsys context ended with an unexpected status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c405 44 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::FAILURE: Wait for apps to subsys sleep notif context ended with an unexpected status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c401 43 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Apps to subsys sleep notif context is ready, continuing... " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c395 42 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Received terminate signal in the SMP2P monitor thread, exiting... " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c390 41 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::SMP2P initialization of app to subsys sleep notif wait finished " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c368 39 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Apps to subsys context is ready, continuing... " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c362 38 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Received terminate signal in the SMP2P monitor thread, exiting... " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c357 37 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::SMP2P initialization of app to subsys context wait finished " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c341 36 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::SMP2P is not yet initialized, waiting on initialization " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c312 35 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::FAILURE: SMP2P Register function pointer is NULL " //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c303 34 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=Smp2pMonitorThread
{
}
#typev smp2p_c204 23 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=SpawnSmp2pMonitorThread
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c203 22 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Successfully spawned SMP2P monitor thread" //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=SpawnSmp2pMonitorThread
{
}
#typev smp2p_c198 21 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::FAILURE: Unable to close the object handle corersponding to the KTHREAD, status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=SpawnSmp2pMonitorThread
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c186 20 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::FAILURE: Couldn't get the underlying system thread from the object handle, status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=SpawnSmp2pMonitorThread
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c169 19 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::FAILURE: Couldn't spawn the SMP2P monitor thread, status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=SpawnSmp2pMonitorThread
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c157 18 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Successfully created termination event for SMP2P monitor thread " //   LEVEL=LOG_INFO FLAGS=SUBSYS FUNC=SpawnSmp2pMonitorThread
{
}
#typev smp2p_c149 17 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=SpawnSmp2pMonitorThread
{
}
#typev smp2p_c647 77 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exception!  Last status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=WriteOutgoingSmp2pBit
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c651 78 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_VERB FLAGS=EntryExit FUNC=WriteOutgoingSmp2pBit
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c638 76 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::SMP2P write method failed. rval = %11!d!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS SUBSYSTEM=context->type FUNC=WriteOutgoingSmp2pBit
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
rval, ItemLong -- 11
}
#typev smp2p_c633 75 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::SMP2P writing master kernel entry with rval = %11!d!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS SUBSYSTEM=context->type FUNC=WriteOutgoingSmp2pBit
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
rval, ItemLong -- 11
}
#typev smp2p_c628 74 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::SMP2P writing sleepstate entry with rval = %11!d!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS SUBSYSTEM=context->type FUNC=WriteOutgoingSmp2pBit
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
rval, ItemLong -- 11
}
#typev smp2p_c623 73 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::Writing 0x%11!08X! over SMP2P..." //   LEVEL=LOG_INFO FLAGS=SUBSYS SUBSYSTEM=context->type FUNC=WriteOutgoingSmp2pBit
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
data, ItemLong -- 11
}
#typev smp2p_c618 72 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::SMP2P channel context is invalid!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS SUBSYSTEM=context->type FUNC=WriteOutgoingSmp2pBit
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
}
#typev smp2p_c611 71 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::SMP2P write method pointer is NULL!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS SUBSYSTEM=context->type FUNC=WriteOutgoingSmp2pBit
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
}
#typev smp2p_c604 70 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Common context pointer invalid!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=WriteOutgoingSmp2pBit
{
}
#typev smp2p_c596 69 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Device handle invalid!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=WriteOutgoingSmp2pBit
{
}
#typev smp2p_c590 68 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Entry" //   LEVEL=LOG_VERB FLAGS=EntryExit FUNC=WriteOutgoingSmp2pBit
{
}
#typev smp2p_c647 77 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exception!  Last status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=WriteOutgoingSmp2pBit$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c651 78 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_VERB FLAGS=EntryExit FUNC=WriteOutgoingSmp2pBit$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev smp2p_c638 76 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::SMP2P write method failed. rval = %11!d!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS SUBSYSTEM=context->type FUNC=WriteOutgoingSmp2pBit$fin$0
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
rval, ItemLong -- 11
}
#typev smp2p_c633 75 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::SMP2P writing master kernel entry with rval = %11!d!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS SUBSYSTEM=context->type FUNC=WriteOutgoingSmp2pBit$fin$0
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
rval, ItemLong -- 11
}
#typev smp2p_c628 74 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::SMP2P writing sleepstate entry with rval = %11!d!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS SUBSYSTEM=context->type FUNC=WriteOutgoingSmp2pBit$fin$0
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
rval, ItemLong -- 11
}
#typev smp2p_c623 73 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::Writing 0x%11!08X! over SMP2P..." //   LEVEL=LOG_INFO FLAGS=SUBSYS SUBSYSTEM=context->type FUNC=WriteOutgoingSmp2pBit$fin$0
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
data, ItemLong -- 11
}
#typev smp2p_c618 72 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::SMP2P channel context is invalid!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS SUBSYSTEM=context->type FUNC=WriteOutgoingSmp2pBit$fin$0
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
}
#typev smp2p_c611 71 "%0 [%!LEVEL!] [%10!s!] smp2p.c::%!FUNC!::SMP2P write method pointer is NULL!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS SUBSYSTEM=context->type FUNC=WriteOutgoingSmp2pBit$fin$0
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
}
#typev smp2p_c604 70 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Common context pointer invalid!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=WriteOutgoingSmp2pBit$fin$0
{
}
#typev smp2p_c596 69 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Device handle invalid!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=WriteOutgoingSmp2pBit$fin$0
{
}
#typev smp2p_c590 68 "%0 [%!LEVEL!] smp2p.c::%!FUNC!::Entry" //   LEVEL=LOG_VERB FLAGS=EntryExit FUNC=WriteOutgoingSmp2pBit$fin$0
{
}
#enumv _SOC_SUBSYSTEM_TYPE
{
SOC_SUBSYS_WIRELESS_MODEM,0x0
SOC_SUBSYS_AUDIO_DSP,0x1
SOC_SUBSYS_WIRELSS_CONNECTIVITY,0x2
SOC_SUBSYS_SENSORS,0x3
SOC_SUBSYS_COMPUTE_DSP,0x4
SOC_SUBSYS_SECURE_PROC,0x5
SOC_SUBSYS_VENDOR_DEFINED,0x10000
}
