// PDB:  qcpil850.pdb
// PDB:  Last Updated :2020-09-15:03:47:00:391 (UTC) [tracepdb]
937ae4b5-0082-390e-724b-f9f21e3b466e ElfParser // SRC=loader.c MJ= MN=
#typev loader_c116 18 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to calculate size of ELF file %10!s!, loader error: 0x%11!X!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=LoadelfImageRawFile
{
image->image_name, ItemString -- 10
ret_code, ItemLong -- 11
}
#typev loader_c108 17 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to open ELF file %10!s!, loader error: 0x%11!X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=LoadelfImageRawFile
{
image->image_name, ItemString -- 10
ret_code, ItemLong -- 11
}
#typev loader_c116 18 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to calculate size of ELF file %10!s!, loader error: 0x%11!X!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=LoadelfImageRawFile$fin$0
{
image->image_name, ItemString -- 10
ret_code, ItemLong -- 11
}
#typev loader_c108 17 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to open ELF file %10!s!, loader error: 0x%11!X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=LoadelfImageRawFile$fin$0
{
image->image_name, ItemString -- 10
ret_code, ItemLong -- 11
}
#typev loader_c1412 103 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Parameter" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes
{
}
#typev loader_c1487 107 "%0 [%!LEVEL!] loader.c::%!FUNC!::Moving the low physical address of 0x%10!X! up to 0x%11!X! to avoid creating a contiguous segment larger than the maximum allowed: %12!u! bytes" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes
{
lowPhysicalAddress, ItemLong -- 10
phdr->p_paddr, ItemLong -- 11
ELFP_MAX_LEN_IN_BYTES_CONTIGUOUS_MEMORY, ItemLong -- 12
}
#typev loader_c1470 106 "%0 [%!LEVEL!] loader.c::%!FUNC!::Retaining the low physical address of 0x%10!X! (instead of 0x%11!X!) to avoid creating a contiguous segment larger than the maximum allowed: %12!u! bytes" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes
{
lowPhysicalAddress, ItemLong -- 10
phdr->p_paddr, ItemLong -- 11
ELFP_MAX_LEN_IN_BYTES_CONTIGUOUS_MEMORY, ItemLong -- 12
}
#typev loader_c1437 105 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes
{
}
#typev loader_c1427 104 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo->program_hdr_ptr is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes
{
}
#typev loader_c1412 103 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Parameter" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes$fin$0
{
}
#typev loader_c1487 107 "%0 [%!LEVEL!] loader.c::%!FUNC!::Moving the low physical address of 0x%10!X! up to 0x%11!X! to avoid creating a contiguous segment larger than the maximum allowed: %12!u! bytes" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes$fin$0
{
lowPhysicalAddress, ItemLong -- 10
phdr->p_paddr, ItemLong -- 11
ELFP_MAX_LEN_IN_BYTES_CONTIGUOUS_MEMORY, ItemLong -- 12
}
#typev loader_c1470 106 "%0 [%!LEVEL!] loader.c::%!FUNC!::Retaining the low physical address of 0x%10!X! (instead of 0x%11!X!) to avoid creating a contiguous segment larger than the maximum allowed: %12!u! bytes" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes$fin$0
{
lowPhysicalAddress, ItemLong -- 10
phdr->p_paddr, ItemLong -- 11
ELFP_MAX_LEN_IN_BYTES_CONTIGUOUS_MEMORY, ItemLong -- 12
}
#typev loader_c1437 105 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes$fin$0
{
}
#typev loader_c1427 104 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo->program_hdr_ptr is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes$fin$0
{
}
#typev loader_c380 38 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_close_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_close_image
{
}
#typev loader_c353 37 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_close_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_close_image
{
}
#typev loader_c178 21 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_get_file_size failed filedes INVALID." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size
{
}
#typev loader_c178 20 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size
{
}
#typev loader_c163 19 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ZwQueryInformationFile failed with status 0x%10!X!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size
{
status, ItemLong -- 10
}
#typev loader_c178 21 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_get_file_size failed filedes INVALID." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size$fin$0
{
}
#typev loader_c178 20 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size$fin$0
{
}
#typev loader_c163 19 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ZwQueryInformationFile failed with status 0x%10!X!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size$fin$0
{
status, ItemLong -- 10
}
#typev loader_c1032 85 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_is_segment_loadable
{
}
#typev loader_c1032 85 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_is_segment_loadable$fin$0
{
}
#typev loader_c343 36 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_and_map_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image
{
}
#typev loader_c334 35 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_map_hash_segment failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image
{
}
#typev loader_c334 34 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_image failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image
{
}
#typev loader_c312 33 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_and_map_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image
{
}
#typev loader_c343 36 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_and_map_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image$fin$0
{
}
#typev loader_c334 35 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_map_hash_segment failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image$fin$0
{
}
#typev loader_c334 34 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_image failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image$fin$0
{
}
#typev loader_c312 33 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_and_map_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image$fin$0
{
}
#typev loader_c1009 82 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c1000 81 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c1000 78 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_map_segments is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c1000 79 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c1000 80 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_segment is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c959 77 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c1009 82 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c1000 81 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c1000 78 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_map_segments is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c1000 79 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c1000 80 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_segment is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c959 77 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c227 24 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image
{
}
#typev loader_c227 22 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image
{
}
#typev loader_c227 23 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image
{
}
#typev loader_c227 24 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image$fin$0
{
}
#typev loader_c227 22 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image$fin$0
{
}
#typev loader_c227 23 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image$fin$0
{
}
#typev loader_c949 76 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_segment()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c930 75 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c919 74 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c909 73 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: program_hdr_ptr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c901 72 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Argument passed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c894 71 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c886 70 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_segment()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c949 76 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_segment()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c930 75 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c919 74 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c909 73 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: program_hdr_ptr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c901 72 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Argument passed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c894 71 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c886 70 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_segment()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c1197 93 "%0 [%!LEVEL!] loader.c::%!FUNC!::Ending the load of all fixed program segments for image: %10!s!, number of fixed program segments: %11!d!, status: %12!d!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
numFixedSegmentsFound, ItemLong -- 11
status, ItemLong -- 12
}
#typev loader_c1105 88 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo invalid contents" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
}
#typev loader_c1180 92 "%0 [%!LEVEL!] loader.c::%!FUNC!::Virtual address of the image entry assigned to: 0x%10!p!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
ImageInfo->VirtualImageEntryAddress, ItemPtr -- 10
}
#typev loader_c1153 91 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to allocate memory for program segments at a fixed address." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
}
#typev loader_c1142 90 "%0 [%!LEVEL!] loader.c::%!FUNC!::ALLOCATING (file: %10!s!, line: %11!d!): Physical memory at: 0x%12!X!, size: %13!u! bytes." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
__FILE__, ItemString -- 10
__LINE__, ItemLong -- 11
physicalAddress.LowPart, ItemLong -- 12
phdr->p_memsz, ItemLong -- 13
}
#typev loader_c1114 89 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unloadable program segment detected, flags: 0x%10!X!.  Skipping to the next program segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
phdr->p_flags, ItemLong -- 10
}
#typev loader_c1086 87 "%0 [%!LEVEL!] loader.c::%!FUNC!::Beginning the load of all fixed program segments for image %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c1082 86 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
}
#typev loader_c1197 93 "%0 [%!LEVEL!] loader.c::%!FUNC!::Ending the load of all fixed program segments for image: %10!s!, number of fixed program segments: %11!d!, status: %12!d!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
numFixedSegmentsFound, ItemLong -- 11
status, ItemLong -- 12
}
#typev loader_c1105 88 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo invalid contents" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
}
#typev loader_c1180 92 "%0 [%!LEVEL!] loader.c::%!FUNC!::Virtual address of the image entry assigned to: 0x%10!p!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
ImageInfo->VirtualImageEntryAddress, ItemPtr -- 10
}
#typev loader_c1153 91 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to allocate memory for program segments at a fixed address." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
}
#typev loader_c1142 90 "%0 [%!LEVEL!] loader.c::%!FUNC!::ALLOCATING (file: %10!s!, line: %11!d!): Physical memory at: 0x%12!X!, size: %13!u! bytes." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
__FILE__, ItemString -- 10
__LINE__, ItemLong -- 11
physicalAddress.LowPart, ItemLong -- 12
phdr->p_memsz, ItemLong -- 13
}
#typev loader_c1114 89 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unloadable program segment detected, flags: 0x%10!X!.  Skipping to the next program segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
phdr->p_flags, ItemLong -- 10
}
#typev loader_c1086 87 "%0 [%!LEVEL!] loader.c::%!FUNC!::Beginning the load of all fixed program segments for image %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c1082 86 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
}
#typev loader_c476 44 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to load the hash segment from the ELF file." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
}
#typev loader_c453 43 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to map the hash segment to memory." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
}
#typev loader_c442 42 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid hash segment detected, segment index %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
hashSegmentIndex, ItemLong -- 10
}
#typev loader_c431 41 "%0 [%!LEVEL!] loader.c::%!FUNC!::Warning: LoadHashSegment: Unable to locate a hash segment." //   LEVEL=TRACE_LEVEL_WARNING FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
}
#typev loader_c417 40 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory not available." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
}
#typev loader_c405 39 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
}
#typev loader_c476 44 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to load the hash segment from the ELF file." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
}
#typev loader_c453 43 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to map the hash segment to memory." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
}
#typev loader_c442 42 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid hash segment detected, segment index %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
hashSegmentIndex, ItemLong -- 10
}
#typev loader_c431 41 "%0 [%!LEVEL!] loader.c::%!FUNC!::Warning: LoadHashSegment: Unable to locate a hash segment." //   LEVEL=TRACE_LEVEL_WARNING FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
}
#typev loader_c417 40 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory not available." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
}
#typev loader_c405 39 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
}
#typev loader_c1371 102 "%0 [%!LEVEL!] loader.c::%!FUNC!::Ending the load of all relocatable program segments for image: %10!s!, number of relocatable segments: %11!d!, status: %12!d!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
numRelocatableSegments, ItemLong -- 11
status, ItemLong -- 12
}
#typev loader_c1291 97 "%0 [%!LEVEL!] loader.c::%!FUNC!::imageInfo invalid contents" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
}
#typev loader_c1339 101 "%0 [%!LEVEL!] loader.c::%!FUNC!::Relocatable program segment (index: %10!d!) for image (%11!s!) assigned virtual address: 0x%12!p!, size: %13!d! bytes" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
index, ItemLong -- 10
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 11
(PVOID)*phdr_vaddr, ItemPtr -- 12
phdr->p_memsz, ItemLong -- 13
}
#typev loader_c1335 100 "%0 [%!LEVEL!] loader.c::%!FUNC!::Virtual address of the image entry assigned to: 0x%10!p!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
ImageInfo->VirtualImageEntryAddress, ItemPtr -- 10
}
#typev loader_c1314 99 "%0 [%!LEVEL!] loader.c::%!FUNC!::Fixed program segment (index: %10!d!) for relocatable image (%11!s!) detected.  Skipping to the next segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
index, ItemLong -- 10
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 11
}
#typev loader_c1303 98 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unloadable program segment detected, flags: 0x%10!X!.  Skipping to the next program segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
phdr->p_flags, ItemLong -- 10
}
#typev loader_c1262 96 "%0 [%!LEVEL!] loader.c::%!FUNC!::Not sufficient memory reservation for the image size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
}
#typev loader_c1242 95 "%0 [%!LEVEL!] loader.c::%!FUNC!::Beginning the load of all relocatable program segments for image %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c1238 94 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
}
#typev loader_c1371 102 "%0 [%!LEVEL!] loader.c::%!FUNC!::Ending the load of all relocatable program segments for image: %10!s!, number of relocatable segments: %11!d!, status: %12!d!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
numRelocatableSegments, ItemLong -- 11
status, ItemLong -- 12
}
#typev loader_c1291 97 "%0 [%!LEVEL!] loader.c::%!FUNC!::imageInfo invalid contents" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
}
#typev loader_c1339 101 "%0 [%!LEVEL!] loader.c::%!FUNC!::Relocatable program segment (index: %10!d!) for image (%11!s!) assigned virtual address: 0x%12!p!, size: %13!d! bytes" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
index, ItemLong -- 10
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 11
(PVOID)*phdr_vaddr, ItemPtr -- 12
phdr->p_memsz, ItemLong -- 13
}
#typev loader_c1335 100 "%0 [%!LEVEL!] loader.c::%!FUNC!::Virtual address of the image entry assigned to: 0x%10!p!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
ImageInfo->VirtualImageEntryAddress, ItemPtr -- 10
}
#typev loader_c1314 99 "%0 [%!LEVEL!] loader.c::%!FUNC!::Fixed program segment (index: %10!d!) for relocatable image (%11!s!) detected.  Skipping to the next segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
index, ItemLong -- 10
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 11
}
#typev loader_c1303 98 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unloadable program segment detected, flags: 0x%10!X!.  Skipping to the next program segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
phdr->p_flags, ItemLong -- 10
}
#typev loader_c1262 96 "%0 [%!LEVEL!] loader.c::%!FUNC!::Not sufficient memory reservation for the image size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
}
#typev loader_c1242 95 "%0 [%!LEVEL!] loader.c::%!FUNC!::Beginning the load of all relocatable program segments for image %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c1238 94 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
}
#typev loader_c862 69 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_file
{
}
#typev loader_c862 68 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_OPEN failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_file
{
}
#typev loader_c862 69 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_file$fin$0
{
}
#typev loader_c862 68 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_OPEN failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_file$fin$0
{
}
#typev loader_c300 32 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_open_image_read_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c290 31 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c290 26 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c290 27 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_OPEN failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c290 28 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c290 29 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c290 30 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c245 25 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_open_image_read_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c300 32 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_open_image_read_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c290 31 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c290 26 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c290 27 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_OPEN failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c290 28 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c290 29 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c290 30 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c245 25 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_open_image_read_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c588 47 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to map ELF header and hash segment memory at the requested address of: %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate
{
pphysical_address, ItemPtr -- 10
}
#typev loader_c622 49 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: memcpy_s failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate
{
}
#typev loader_c609 48 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: memcpy_s failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate
{
}
#typev loader_c579 46 "%0 [%!LEVEL!] loader.c::%!FUNC!::Memory mapped for the hash segment and ELF headers, virtual: 0x%10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate
{
virtualAddress, ItemPtr -- 10
}
#typev loader_c526 45 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid parameter. Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate
{
}
#typev loader_c588 47 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to map ELF header and hash segment memory at the requested address of: %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate$fin$0
{
pphysical_address, ItemPtr -- 10
}
#typev loader_c622 49 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: memcpy_s failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate$fin$0
{
}
#typev loader_c609 48 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: memcpy_s failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate$fin$0
{
}
#typev loader_c579 46 "%0 [%!LEVEL!] loader.c::%!FUNC!::Memory mapped for the hash segment and ELF headers, virtual: 0x%10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate$fin$0
{
virtualAddress, ItemPtr -- 10
}
#typev loader_c526 45 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid parameter. Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate$fin$0
{
}
#typev loader_c668 51 "%0 [%!LEVEL!] loader.c::%!FUNC!::imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate
{
}
#typev loader_c668 53 "%0 [%!LEVEL!] loader.c::%!FUNC!::elf_loader_ram_deallocate Exit" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate
{
}
#typev loader_c659 52 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unmapping the hash segment for image file: %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c645 50 "%0 [%!LEVEL!] loader.c::%!FUNC!::elf_loader_ram_deallocate Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate
{
}
#typev loader_c668 51 "%0 [%!LEVEL!] loader.c::%!FUNC!::imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate$fin$0
{
}
#typev loader_c668 53 "%0 [%!LEVEL!] loader.c::%!FUNC!::elf_loader_ram_deallocate Exit" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate$fin$0
{
}
#typev loader_c659 52 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unmapping the hash segment for image file: %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate$fin$0
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c645 50 "%0 [%!LEVEL!] loader.c::%!FUNC!::elf_loader_ram_deallocate Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate$fin$0
{
}
#typev loader_c715 57 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c706 56 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c706 55 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: sizeof(Elf32_Ehdr) is not equal to bytes_read." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c687 54 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c715 57 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c706 56 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c706 55 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: sizeof(Elf32_Ehdr) is not equal to bytes_read." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c687 54 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c833 67 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c804 66 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c804 60 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c804 61 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c804 62 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c804 63 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c804 64 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c804 65 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c735 59 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Image, cannot read program headers." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c728 58 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c833 67 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c804 66 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c804 60 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c804 61 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c804 62 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c804 63 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c804 64 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c804 65 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c735 59 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Image, cannot read program headers." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c728 58 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c1653 117 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid type for program header detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_type, ItemLong -- 10
}
#typev loader_c1638 116 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: The file size of the program segment (%10!d!) was greater than the size in memory (%11!d!)." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_filesz, ItemLong -- 10
phdr->p_memsz, ItemLong -- 11
}
#typev loader_c1624 115 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address not zero for relocatable segment. An invalid program segment              physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c1609 114 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address zero for fixed segment. An invalid program segment                  physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c1653 117 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid type for program header detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_type, ItemLong -- 10
}
#typev loader_c1638 116 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: The file size of the program segment (%10!d!) was greater than the size in memory (%11!d!)." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_filesz, ItemLong -- 10
phdr->p_memsz, ItemLong -- 11
}
#typev loader_c1624 115 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address not zero for relocatable segment. An invalid program segment              physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c1609 114 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address zero for fixed segment. An invalid program segment                  physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c90 16 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_parser_ddr_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c77 15 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_and_map_image() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c77 11 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image path string not provided by caller" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c77 12 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory not available." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c77 13 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: LoadelfImageRawFile() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c77 14 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_open_image_read_headers() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c29 10 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_parser_ddr_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c90 16 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_parser_ddr_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c77 15 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_and_map_image() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c77 11 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image path string not provided by caller" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c77 12 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory not available." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c77 13 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: LoadelfImageRawFile() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c77 14 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_open_image_read_headers() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c29 10 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_parser_ddr_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c1583 113 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header
{
}
#typev loader_c1538 109 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF header magic bytes detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
}
#typev loader_c1572 112 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF file version detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
ehdr->e_ident[EI_VERSION], ItemLong -- 10
}
#typev loader_c1561 111 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF data encoding detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
ehdr->e_ident[EI_DATA], ItemLong -- 10
}
#typev loader_c1548 110 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF class detected (must be 32 bit): %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
ehdr->e_ident[EI_CLASS], ItemLong -- 10
}
#typev loader_c1525 108 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header
{
}
#typev loader_c1583 113 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
}
#typev loader_c1538 109 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF header magic bytes detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
}
#typev loader_c1572 112 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF file version detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
ehdr->e_ident[EI_VERSION], ItemLong -- 10
}
#typev loader_c1561 111 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF data encoding detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
ehdr->e_ident[EI_DATA], ItemLong -- 10
}
#typev loader_c1548 110 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF class detected (must be 32 bit): %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
ehdr->e_ident[EI_CLASS], ItemLong -- 10
}
#typev loader_c1525 108 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
}
