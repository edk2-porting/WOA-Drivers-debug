// PDB:  qciommu.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
d5f7ee90-467b-3e56-e362-4c3790b187e9 IOMMU // SRC=SmmuTreeInterface.cpp MJ= MN=
#typev SmmuTreeInterface_cpp38 10 "%0 SmmuTreeInterface.cpp::%!FUNC!::38 :Error: Both Pass through(%10!d!) and Sk Service(%11!d!) interfaces are not ready together." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=IsTreeServiceAvailable
{
Context->IsSecureProgPassThroughUp, ItemLong -- 10
Context->IsSecureProgSkServiceUp, ItemLong -- 11
}
#typev SmmuTreeInterface_cpp178 24 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=PassThroughInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp166 23 "%0 SmmuTreeInterface.cpp::%!FUNC!::166 :Passthrough interface arrival notification." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PassThroughInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp161 22 "%0 SmmuTreeInterface.cpp::%!FUNC!::161 :PassThroughServiceInfo.ServiceMajorVersion : 0x%10!x! is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PassThroughInterfacePostOpenCallback
{
Context->PassThroughServiceInfo.ServiceMajorVersion, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp155 21 "%0 SmmuTreeInterface.cpp::%!FUNC!::155 :PassThroughServiceInfo.InterfaceVersion : 0x%10!x! is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PassThroughInterfacePostOpenCallback
{
Context->PassThroughServiceInfo.InterfaceVersion, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp123 20 "%0 SmmuTreeInterface.cpp::%!FUNC!::123 :Error:QueryPassThroughServiceInfo failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PassThroughInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp117 19 "%0 SmmuTreeInterface.cpp::%!FUNC!::117 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PassThroughInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp109 18 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=PassThroughInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp178 24 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`PassThroughInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp166 23 "%0 SmmuTreeInterface.cpp::%!FUNC!::166 :Passthrough interface arrival notification." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PassThroughInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp161 22 "%0 SmmuTreeInterface.cpp::%!FUNC!::161 :PassThroughServiceInfo.ServiceMajorVersion : 0x%10!x! is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PassThroughInterfacePostOpenCallback'::`1'::fin$0
{
Context->PassThroughServiceInfo.ServiceMajorVersion, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp155 21 "%0 SmmuTreeInterface.cpp::%!FUNC!::155 :PassThroughServiceInfo.InterfaceVersion : 0x%10!x! is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PassThroughInterfacePostOpenCallback'::`1'::fin$0
{
Context->PassThroughServiceInfo.InterfaceVersion, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp123 20 "%0 SmmuTreeInterface.cpp::%!FUNC!::123 :Error:QueryPassThroughServiceInfo failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PassThroughInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp117 19 "%0 SmmuTreeInterface.cpp::%!FUNC!::117 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PassThroughInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp109 18 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`PassThroughInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp208 28 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=PassThroughInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp202 27 "%0 SmmuTreeInterface.cpp::%!FUNC!::202 :Driver Dependency: Connection to the dependent PassThrough interface was removed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PassThroughInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp197 26 "%0 SmmuTreeInterface.cpp::%!FUNC!::197 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PassThroughInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp189 25 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=PassThroughInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp208 28 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`PassThroughInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp202 27 "%0 SmmuTreeInterface.cpp::%!FUNC!::202 :Driver Dependency: Connection to the dependent PassThrough interface was removed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PassThroughInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp197 26 "%0 SmmuTreeInterface.cpp::%!FUNC!::197 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PassThroughInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp189 25 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`PassThroughInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp97 17 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=QueryPassThroughServiceInfo
{
}
#typev SmmuTreeInterface_cpp89 16 "%0 SmmuTreeInterface.cpp::%!FUNC!::89 :Error: Query Pass Through Service Information failed with status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=QueryPassThroughServiceInfo
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp83 15 "%0 SmmuTreeInterface.cpp::%!FUNC!::83 :Error: Query Pass Through Service Information failed with status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=QueryPassThroughServiceInfo
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp78 14 "%0 SmmuTreeInterface.cpp::%!FUNC! :PassThrough Interface Version:0x%10!08X!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=QueryPassThroughServiceInfo
{
pServiceInfo->InterfaceVersion, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp77 13 "%0 SmmuTreeInterface.cpp::%!FUNC! :Querying Pass Through Service Information succeeded." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=QueryPassThroughServiceInfo
{
}
#typev SmmuTreeInterface_cpp57 12 "%0 SmmuTreeInterface.cpp::%!FUNC!::57 :Error: Input arguments passed to TreeQueryPassThroughServiceInfo function are not valid status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=QueryPassThroughServiceInfo
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp50 11 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=QueryPassThroughServiceInfo
{
}
#typev SmmuTreeInterface_cpp97 17 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`QueryPassThroughServiceInfo'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp89 16 "%0 SmmuTreeInterface.cpp::%!FUNC!::89 :Error: Query Pass Through Service Information failed with status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`QueryPassThroughServiceInfo'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp83 15 "%0 SmmuTreeInterface.cpp::%!FUNC!::83 :Error: Query Pass Through Service Information failed with status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`QueryPassThroughServiceInfo'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp78 14 "%0 SmmuTreeInterface.cpp::%!FUNC! :PassThrough Interface Version:0x%10!08X!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`QueryPassThroughServiceInfo'::`1'::fin$0
{
pServiceInfo->InterfaceVersion, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp77 13 "%0 SmmuTreeInterface.cpp::%!FUNC! :Querying Pass Through Service Information succeeded." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`QueryPassThroughServiceInfo'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp57 12 "%0 SmmuTreeInterface.cpp::%!FUNC!::57 :Error: Input arguments passed to TreeQueryPassThroughServiceInfo function are not valid status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`QueryPassThroughServiceInfo'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp50 11 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`QueryPassThroughServiceInfo'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp244 32 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=SKInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp232 31 "%0 SmmuTreeInterface.cpp::%!FUNC!::232 :SkService interface arrival notification." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SKInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp227 30 "%0 SmmuTreeInterface.cpp::%!FUNC!::227 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SKInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp219 29 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=SKInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp244 32 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`SKInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp232 31 "%0 SmmuTreeInterface.cpp::%!FUNC!::232 :SkService interface arrival notification." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SKInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp227 30 "%0 SmmuTreeInterface.cpp::%!FUNC!::227 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SKInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp219 29 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`SKInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp274 36 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=SKInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp268 35 "%0 SmmuTreeInterface.cpp::%!FUNC!::268 :Driver Dependency: Connection to the dependent DiagRouter interface was removed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SKInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp263 34 "%0 SmmuTreeInterface.cpp::%!FUNC!::263 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SKInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp255 33 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=SKInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp274 36 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`SKInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp268 35 "%0 SmmuTreeInterface.cpp::%!FUNC!::268 :Driver Dependency: Connection to the dependent DiagRouter interface was removed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SKInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp263 34 "%0 SmmuTreeInterface.cpp::%!FUNC!::263 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SKInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp255 33 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`SKInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp538 49 "%0 SmmuTreeInterface.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=SmmuEvtIrpPreprocessQueryDevRelations
{
}
#typev SmmuTreeInterface_cpp530 48 "%0 SmmuTreeInterface.cpp::%!FUNC! :Error: Unable to deliver IRP successfully to framework." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=SmmuEvtIrpPreprocessQueryDevRelations
{
}
#typev SmmuTreeInterface_cpp504 47 "%0 SmmuTreeInterface.cpp::%!FUNC!::504 :Error: Conditions to process IRP are not valid." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtIrpPreprocessQueryDevRelations
{
}
#typev SmmuTreeInterface_cpp497 46 "%0 SmmuTreeInterface.cpp::%!FUNC! :Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=SmmuEvtIrpPreprocessQueryDevRelations
{
}
#typev SmmuTreeInterface_cpp538 49 "%0 SmmuTreeInterface.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`SmmuEvtIrpPreprocessQueryDevRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp530 48 "%0 SmmuTreeInterface.cpp::%!FUNC! :Error: Unable to deliver IRP successfully to framework." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`SmmuEvtIrpPreprocessQueryDevRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp504 47 "%0 SmmuTreeInterface.cpp::%!FUNC!::504 :Error: Conditions to process IRP are not valid." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtIrpPreprocessQueryDevRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp497 46 "%0 SmmuTreeInterface.cpp::%!FUNC! :Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`SmmuEvtIrpPreprocessQueryDevRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp730 59 "%0 SmmuTreeInterface.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp690 58 "%0 SmmuTreeInterface.cpp::%!FUNC!::690 :Unable to allocate required memory to copy relation count" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp665 57 "%0 SmmuTreeInterface.cpp::%!FUNC! :IoInvalidateDeviceRelations was not issued by TrEE driver" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp654 56 "%0 SmmuTreeInterface.cpp::%!FUNC!::654 :IoTarget is shutting down or gone" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp638 55 "%0 SmmuTreeInterface.cpp::%!FUNC!::638 :IoTarget is shutting down or gone" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp620 54 "%0 SmmuTreeInterface.cpp::%!FUNC!::620 :IoTarget not yet open with Passthrough or SK Service" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp604 53 "%0 SmmuTreeInterface.cpp::%!FUNC!::604 :DMFDeviceContext not found in %!FUNC!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp595 52 "%0 SmmuTreeInterface.cpp::%!FUNC!::595 :SMMU device context is invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp588 51 "%0 SmmuTreeInterface.cpp::%!FUNC!::588 :Invalid Device Context: status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp581 50 "%0 SmmuTreeInterface.cpp::%!FUNC! :Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp730 59 "%0 SmmuTreeInterface.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp690 58 "%0 SmmuTreeInterface.cpp::%!FUNC!::690 :Unable to allocate required memory to copy relation count" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp665 57 "%0 SmmuTreeInterface.cpp::%!FUNC! :IoInvalidateDeviceRelations was not issued by TrEE driver" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp654 56 "%0 SmmuTreeInterface.cpp::%!FUNC!::654 :IoTarget is shutting down or gone" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp638 55 "%0 SmmuTreeInterface.cpp::%!FUNC!::638 :IoTarget is shutting down or gone" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp620 54 "%0 SmmuTreeInterface.cpp::%!FUNC!::620 :IoTarget not yet open with Passthrough or SK Service" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp604 53 "%0 SmmuTreeInterface.cpp::%!FUNC!::604 :DMFDeviceContext not found in %!FUNC!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp595 52 "%0 SmmuTreeInterface.cpp::%!FUNC!::595 :SMMU device context is invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp588 51 "%0 SmmuTreeInterface.cpp::%!FUNC!::588 :Invalid Device Context: status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp581 50 "%0 SmmuTreeInterface.cpp::%!FUNC! :Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp458 45 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp449 44 "%0 SmmuTreeInterface.cpp::%!FUNC!::449 :DMF_DeviceInterfaceTarget_SendSynchronously failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp442 43 "%0 SmmuTreeInterface.cpp::%!FUNC!::442 :TZ returned bad data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp435 42 "%0 SmmuTreeInterface.cpp::%!FUNC!::435 :TZ returned bad status" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp398 41 "%0 SmmuTreeInterface.cpp::%!FUNC!::398 :Unsupported TZ Command ID" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp348 39 "%0 SmmuTreeInterface.cpp::%!FUNC!::348 :DMFDeviceContext not found in %!FUNC!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp337 38 "%0 SmmuTreeInterface.cpp::%!FUNC!::337 :Both PassThrough and SK Service are not ready together." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp320 37 "%0 SmmuTreeInterface.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp458 45 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp449 44 "%0 SmmuTreeInterface.cpp::%!FUNC!::449 :DMF_DeviceInterfaceTarget_SendSynchronously failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp442 43 "%0 SmmuTreeInterface.cpp::%!FUNC!::442 :TZ returned bad data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp435 42 "%0 SmmuTreeInterface.cpp::%!FUNC!::435 :TZ returned bad status" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp398 41 "%0 SmmuTreeInterface.cpp::%!FUNC!::398 :Unsupported TZ Command ID" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp348 39 "%0 SmmuTreeInterface.cpp::%!FUNC!::348 :DMFDeviceContext not found in %!FUNC!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp337 38 "%0 SmmuTreeInterface.cpp::%!FUNC!::337 :Both PassThrough and SK Service are not ready together." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp320 37 "%0 SmmuTreeInterface.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
