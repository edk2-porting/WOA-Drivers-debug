// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
1b2cc000-affd-3c6a-41bf-0dc22971d1f8 WMRIL // SRC=WMRilServiceBase.cpp MJ= MN=
#typev WMRilServiceBase_cpp150 13 "%0%!LEVEL! %!FUNC!:Driver is not available." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_DRIVER FUNC=WMRil::ServiceBaseClass::GetDriver
{
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilServiceBase_cpp74 10 "%0%!LEVEL! %!FUNC!:THIS FUNCTION SHOULD NEVER BEEN CALLED!! Derived listener which would like be notified should always overwrite this function." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_DRIVER FUNC=WMRil::ServiceBaseClass::ProcessExternalIndication
{
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilServiceBase_cpp95 11 "%0%!LEVEL! %!FUNC!:THIS FUNCTION SHOULD NEVER BEEN CALLED!! Derived listener which would like be notified should always overwrite this function." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_DRIVER FUNC=WMRil::ServiceBaseClass::ProcessInternalIndication
{
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilServiceBase_cpp249 20 "%0%!LEVEL! %!FUNC!:Check to ensure function signature matches." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_DRIVER FUNC=WMRil::ServiceBaseClass::ProcessResponse
{
}
#typev WMRilServiceBase_cpp248 19 "%0%!LEVEL! %!FUNC!:THIS FUNCTION SHOULD NEVER BEEN CALLED!! Service sending async request should always overwrite this function." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_DRIVER FUNC=WMRil::ServiceBaseClass::ProcessResponse
{
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilServiceBase_cpp215 18 "%0%!LEVEL! %!FUNC!:Check to ensure function signature matches." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_DRIVER FUNC=WMRil::ServiceBaseClass::ProcessTimeout
{
}
#typev WMRilServiceBase_cpp214 17 "%0%!LEVEL! %!FUNC!:THIS FUNCTION SHOULD NEVER BEEN CALLED!! Derived service should overwrite this function." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_DRIVER FUNC=WMRil::ServiceBaseClass::ProcessTimeout
{
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilServiceBase_cpp134 12 "%0%!LEVEL! %!FUNC!:Registered for internal indication %10!s!(%11!u!)" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ZONE_DRIVER FUNC=WMRil::ServiceBaseClass::RegisterForInternalIndication
{
Debug::WMRilInternalIndicationToStr(InternalIndicationID), ItemWString -- 10
InternalIndicationID, ItemLong -- 11
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilServiceBase_cpp198 16 "%0%!LEVEL! %!FUNC!:Registered for internal indication %10!s!(%11!u!)" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ZONE_DRIVER FUNC=WMRil::ServiceBaseClass::RegisterForInternalIndicationAndStartTimer
{
Debug::WMRilInternalIndicationToStr(InternalIndicationID), ItemWString -- 10
InternalIndicationID, ItemLong -- 11
}
#typev WMRilServiceBase_cpp183 15 "%0%!LEVEL! %!FUNC!:Start Transaction Failed" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_DRIVER FUNC=WMRil::ServiceBaseClass::RegisterForInternalIndicationAndStartTimer
{
}
#typev WMRilServiceBase_cpp171 14 "%0%!LEVEL! %!FUNC!:Driver has been removed.  Cannot start timer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_DRIVER FUNC=WMRil::ServiceBaseClass::RegisterForInternalIndicationAndStartTimer
{
}
