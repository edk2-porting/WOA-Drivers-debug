// PDB:  qcdx11arm64xum7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
622e56ab-e36e-3358-f8c5-ac0a9fdb6184 utils // SRC=dxgpuscope.cpp MJ= MN=
#typev dxgpuscope_cpp1125 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::AddCounterToString
{
}
#typev dxgpuscope_cpp107 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Create
{
}
#typev dxgpuscope_cpp130 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Destroy
{
}
#typev dxgpuscope_cpp341 11 "%0GPU SCOPE: Disabled" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Disable
{
}
#typev dxgpuscope_cpp485 14 "%0GPU SCOPE: All Counter Allocations Failed. GPU SCOPE Disabled." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
}
#typev dxgpuscope_cpp413 13 "%0GPU SCOPE: Error: Invalid/Unsupported Mode: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
m_scopeState.scopeMode, ItemLong -- 10
}
#typev dxgpuscope_cpp387 12 "%0GPU SCOPE: Error: Could not open file: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
gpuScopeFilename, ItemString -- 10
}
#typev dxgpuscope_cpp2164 23 "%0GPU SCOPE: Error: Invalid Packet Type: %10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
*(pHostRead - 1), ItemLong -- 10
}
#typev dxgpuscope_cpp2156 22 "%0GPU SCOPE - Skip processing scope alloc." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
}
#typev dxgpuscope_cpp1053 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1054 18 "%0GPU SCOPE: Counter not selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp1047 17 "%0GPU SCOPE: Counter selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp1045 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1033 16 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1024 15 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1339 21 "%0Scope: Incorrect stage mode footer usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
#typev dxgpuscope_cpp1325 20 "%0Scope: Incorrect stage mode header usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
// PDB:  qcdx11arm64xum7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev dxgpuscope_cpp1125 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::AddCounterToString
{
}
#typev dxgpuscope_cpp107 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Create
{
}
#typev dxgpuscope_cpp130 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Destroy
{
}
#typev dxgpuscope_cpp341 11 "%0GPU SCOPE: Disabled" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Disable
{
}
#typev dxgpuscope_cpp485 14 "%0GPU SCOPE: All Counter Allocations Failed. GPU SCOPE Disabled." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
}
#typev dxgpuscope_cpp413 13 "%0GPU SCOPE: Error: Invalid/Unsupported Mode: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
m_scopeState.scopeMode, ItemLong -- 10
}
#typev dxgpuscope_cpp387 12 "%0GPU SCOPE: Error: Could not open file: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
gpuScopeFilename, ItemString -- 10
}
#typev dxgpuscope_cpp2164 23 "%0GPU SCOPE: Error: Invalid Packet Type: %10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
*(pHostRead - 1), ItemLong -- 10
}
#typev dxgpuscope_cpp2156 22 "%0GPU SCOPE - Skip processing scope alloc." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
}
#typev dxgpuscope_cpp1054 18 "%0GPU SCOPE: Counter not selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp1053 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1047 17 "%0GPU SCOPE: Counter selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp1045 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1033 16 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1024 15 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1339 21 "%0Scope: Incorrect stage mode footer usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
#typev dxgpuscope_cpp1325 20 "%0Scope: Incorrect stage mode header usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
// PDB:  qcdx11chpeum7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev dxgpuscope_cpp1125 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::AddCounterToString
{
}
#typev dxgpuscope_cpp107 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Create
{
}
#typev dxgpuscope_cpp130 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Destroy
{
}
#typev dxgpuscope_cpp341 11 "%0GPU SCOPE: Disabled" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Disable
{
}
#typev dxgpuscope_cpp485 14 "%0GPU SCOPE: All Counter Allocations Failed. GPU SCOPE Disabled." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
}
#typev dxgpuscope_cpp413 13 "%0GPU SCOPE: Error: Invalid/Unsupported Mode: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
m_scopeState.scopeMode, ItemLong -- 10
}
#typev dxgpuscope_cpp387 12 "%0GPU SCOPE: Error: Could not open file: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
gpuScopeFilename, ItemString -- 10
}
#typev dxgpuscope_cpp2164 23 "%0GPU SCOPE: Error: Invalid Packet Type: %10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
*(pHostRead - 1), ItemLong -- 10
}
#typev dxgpuscope_cpp2156 22 "%0GPU SCOPE - Skip processing scope alloc." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
}
#typev dxgpuscope_cpp1053 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1054 18 "%0GPU SCOPE: Counter not selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp1047 17 "%0GPU SCOPE: Counter selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp1045 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1033 16 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1024 15 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1339 21 "%0Scope: Incorrect stage mode footer usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
#typev dxgpuscope_cpp1325 20 "%0Scope: Incorrect stage mode header usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
// PDB:  qcdx11x86um7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev dxgpuscope_cpp1125 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::AddCounterToString
{
}
#typev dxgpuscope_cpp107 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Create
{
}
#typev dxgpuscope_cpp130 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Destroy
{
}
#typev dxgpuscope_cpp341 11 "%0GPU SCOPE: Disabled" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Disable
{
}
#typev dxgpuscope_cpp485 14 "%0GPU SCOPE: All Counter Allocations Failed. GPU SCOPE Disabled." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
}
#typev dxgpuscope_cpp413 13 "%0GPU SCOPE: Error: Invalid/Unsupported Mode: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
m_scopeState.scopeMode, ItemLong -- 10
}
#typev dxgpuscope_cpp387 12 "%0GPU SCOPE: Error: Could not open file: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
gpuScopeFilename, ItemString -- 10
}
#typev dxgpuscope_cpp2164 23 "%0GPU SCOPE: Error: Invalid Packet Type: %10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
*(pHostRead - 1), ItemLong -- 10
}
#typev dxgpuscope_cpp2156 22 "%0GPU SCOPE - Skip processing scope alloc." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
}
#typev dxgpuscope_cpp1054 18 "%0GPU SCOPE: Counter not selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp1047 17 "%0GPU SCOPE: Counter selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp1033 16 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1024 15 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1339 21 "%0Scope: Incorrect stage mode footer usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
#typev dxgpuscope_cpp1325 20 "%0Scope: Incorrect stage mode header usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
