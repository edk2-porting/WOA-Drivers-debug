// PDB:  qcaudminiport7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
5859c340-4cf2-3b18-2b35-3da6f650dd6a latest // SRC=QTimerPositionClock.cpp MJ= MN=
#typev QTimerPositionClock_cpp63 13 "%0CQTimerPositionClock::ConvertQTimerToQPCTime Leaving method QPC %10!I64u!, ntStatus 0x%11!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CQTimerPositionClock::ConvertQTimerToQPCTime
{
*pQPCTime, ItemULongLong -- 10
ntStatus, ItemLong -- 11
}
#typev QTimerPositionClock_cpp58 12 "%0CQTimerPositionClock::ConvertQTimerToQPCTime:KeConvertAuxiliaryCounterToPerformanceCounter failed ntStatus(0x%10!Ix!) " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CQTimerPositionClock::ConvertQTimerToQPCTime
{
ntStatus, ItemPtr -- 10
}
#typev QTimerPositionClock_cpp45 11 "%0CQTimerPositionClock::ConvertQTimerToQPCTime:KeQueryAuxiliaryCounterFrequency failed ntStatus(0x%10!Ix!) " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CQTimerPositionClock::ConvertQTimerToQPCTime
{
ntStatus, ItemPtr -- 10
}
#typev QTimerPositionClock_cpp40 10 "%0CQTimerPositionClock::ConvertQTimerToQPCTime Entering method QTimeStamp %10!I64u!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CQTimerPositionClock::ConvertQTimerToQPCTime
{
QTimerInMS, ItemULongLong -- 10
}
#typev QTimerPositionClock_cpp183 16 "%0CQTimerPositionClock::GetCurrentQTimerPerfTime:KeConvertPerformanceCounterToAuxiliaryCounter failed ntStatus(0x%10!Ix!) " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CQTimerPositionClock::GetCurrentQTimerPerfTime
{
ntStatus, ItemPtr -- 10
}
#typev QTimerPositionClock_cpp173 15 "%0CQTimerPositionClock::GetCurrentQTimerPerfTime:KeQueryAuxiliaryCounterFrequency failed ntStatus(0x%10!Ix!) " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CQTimerPositionClock::GetCurrentQTimerPerfTime
{
ntStatus, ItemPtr -- 10
}
#typev QTimerPositionClock_cpp153 14 "%0CQTimerPositionClock::GetPreviousPausedTime , paused_time = %10!I64u! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CQTimerPositionClock::GetPreviousPausedTime
{
PausedTime, ItemULongLong -- 10
}
