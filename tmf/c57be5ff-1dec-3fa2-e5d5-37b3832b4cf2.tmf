// PDB:  QcXhciFilter7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:36:688 (UTC) [tracepdb]
c57be5ff-1dec-3fa2-e5d5-37b3832b4cf2 10.7 // SRC=Hw.c MJ= MN=
#typev Hw_c529 28 "%0--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=EvalAcpiMethod
{
}
#typev Hw_c513 27 "%0Expect ACPI_METHOD_ARGUMENT_PACKAGE, but obtain 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=EvalAcpiMethod
{
pArgument->Type, ItemLong -- 10
}
#typev Hw_c507 26 "%0pArgument is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=EvalAcpiMethod
{
}
#typev Hw_c498 25 "%0OutputBuffer Signature Invalid, 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=EvalAcpiMethod
{
pOutputBuffer->Signature, ItemLong -- 10
}
#typev Hw_c491 24 "%0pOutputBuffer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=EvalAcpiMethod
{
}
#typev Hw_c471 23 "%0EvalAcpiMethod failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=EvalAcpiMethod
{
status, ItemNTSTATUS -- 10
}
#typev Hw_c433 22 "%0Unable to get IoTarget" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=EvalAcpiMethod
{
}
#typev Hw_c416 21 "%0++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=EvalAcpiMethod
{
}
#typev Hw_c1289 85 "%0--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=InitSSUSBCommon
{
}
#typev Hw_c1283 84 "%0Invalid USB Core Type %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=InitSSUSBCommon
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c1231 83 "%0Disabling SS PHY" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=InitSSUSBCommon
{
}
#typev Hw_c1222 82 "%0Primary: USB30_STS_REG.USB30_PHY_STATUS = 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=InitSSUSBCommon
{
HwioRegRead(FilterExt->regBase. HWIO_USB3_PRI_USB30_STS_REG_OFFS) & HWIO_USB3_PRI_USB30_STS_REG_USB30_PHY_STATUS_BMSK        >> HWIO_USB3_PRI_USB30_STS_REG_USB30_PHY_STATUS_SHFT, ItemLong -- 10
}
#typev Hw_c1214 81 "%0High Speed Only Mode, disable SS Phy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=InitSSUSBCommon
{
}
#typev Hw_c1208 80 "%0QcUsbInitSsPhy failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=InitSSUSBCommon
{
Status, ItemNTSTATUS -- 10
}
#typev Hw_c1199 79 "%0QcUsbInitHsPhy failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=InitSSUSBCommon
{
Status, ItemNTSTATUS -- 10
}
#typev Hw_c1188 78 "%0Invalid USB Core Type %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=InitSSUSBCommon
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c1166 77 "%0++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=InitSSUSBCommon
{
}
#typev Hw_c1358 88 "%0--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=InitSSUSBHost
{
}
#typev Hw_c1352 87 "%0Invalid USB Core Type %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=InitSSUSBHost
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c1308 86 "%0++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=InitSSUSBHost
{
}
#typev Hw_c353 20 "%0--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=ProcessAnArgument
{
}
#typev Hw_c345 19 "%0Fail to add the PHY config value to the collection, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=ProcessAnArgument
{
Status, ItemNTSTATUS -- 10
}
#typev Hw_c341 18 "%0Unknown Argument: Access Type %10!d!, Reg Addr 0x%11!x!, Val 0x%12!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=ProcessAnArgument
{
pPhyVal->AccessType, ItemLong -- 10
pPhyVal->RegAddr, ItemLong -- 11
pPhyVal->Value, ItemLong -- 12
}
#typev Hw_c321 17 "%0Missing Data Detected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=ProcessAnArgument
{
}
#typev Hw_c309 16 "%0Unmatched Data Detected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=ProcessAnArgument
{
}
#typev Hw_c295 15 "%0Idx value is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=ProcessAnArgument
{
}
#typev Hw_c277 14 "%0Expect ACPI_METHOD_ARGUMENT_INTEGER, but have 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=ProcessAnArgument
{
pArgument->Type, ItemLong -- 10
}
#typev Hw_c268 13 "%0pArgument is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=ProcessAnArgument
{
}
#typev Hw_c265 12 "%0Idx = %10!d!, DataLen %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=ProcessAnArgument
{
Idx, ItemLong -- 10
DataLen, ItemLong -- 11
}
#typev Hw_c245 11 "%0WdfMemoryCreate failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=ProcessAnArgument
{
Status, ItemNTSTATUS -- 10
}
#typev Hw_c229 10 "%0++" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=ProcessAnArgument
{
}
#typev Hw_c1505 97 "%0Invalid USB Core Type %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbClearLfpsRxTermIrq
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c1154 76 "%0--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbCoreReadyForLPM
{
}
#typev Hw_c1135 75 "%0Invalid USB Core Type %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbCoreReadyForLPM
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c1131 74 "%0Primary Port - portSCReg (High speed) = 0x%10!x!, portSCReg (super speed) = 0x%11!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbCoreReadyForLPM
{
hsPortSCReg[0], ItemLong -- 10
ssPortSCReg[0], ItemLong -- 11
}
#typev Hw_c1122 73 "%0++ Core: %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbCoreReadyForLPM
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c1118 72 "%0Invalid Parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbCoreReadyForLPM
{
}
#typev Hw_c1987 123 "%0--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbEnterLpm
{
}
#typev Hw_c1979 122 "%0Invalid USB Core Type %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbEnterLpm
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c1972 121 "%0Cleared host mode active flag on CoreType %10!d!, regval 0x%11!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbEnterLpm
{
FilterExt->coreType, ItemLong -- 10
regval, ItemLong -- 11
}
#typev Hw_c1897 119 "%0QcUsbEnterLpm - Exit the function with STATUS_UNSUCCESSFUL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbEnterLpm
{
}
#typev Hw_c1895 118 "%0QcUsbEnterLpm - USB core not ready for D0 exit for Core - %10!d!, TargetState %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbEnterLpm
{
FilterExt->coreType, ItemLong -- 10
PowerState[TargetState], ItemString -- 11
}
#typev Hw_c1891 117 "%0++ Core: %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbEnterLpm
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c2236 137 "%0--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbExitLpm
{
}
#typev Hw_c2228 136 "%0Invalid USB Core Type %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbExitLpm
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c2179 135 "%0Primary Port: USB core is not in LPM" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbExitLpm
{
}
#typev Hw_c2158 134 "%0++ Core: %10!d!, PreviousState: %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbExitLpm
{
FilterExt->coreType, ItemLong -- 10
PowerState[PreviousState], ItemString -- 11
}
#typev Hw_c1824 112 "%0--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbHsPhyEnterLpm
{
}
#typev Hw_c1815 111 "%0Failed to update DM interrupt to PEP for CoreType %10!d!, Port No. %11!d! : %12!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbHsPhyEnterLpm
{
FilterExt->coreType, ItemLong -- 10
PortIndex, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev Hw_c1801 110 "%0Failed to update DP interrupt to PEP for CoreType %10!d!, Port No. %11!d! : %12!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbHsPhyEnterLpm
{
FilterExt->coreType, ItemLong -- 10
PortIndex, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev Hw_c1790 109 "%0Updating DP/DM wake_up Polarity to PEP for CoreType: %10!d!, Port No.: %11!d!, DP Polarity: %12!d!, DM Polarity: %13!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbHsPhyEnterLpm
{
FilterExt->coreType, ItemLong -- 10
PortIndex, ItemLong -- 11
PortStatus->DpPolarity, ItemLong -- 12
PortStatus->DmPolarity, ItemLong -- 13
}
#typev Hw_c1779 108 "%0Invalid USB Core Type %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbHsPhyEnterLpm
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c1754 107 "%0HS Disconnect: CoreType: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbHsPhyEnterLpm
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c1709 106 "%0HS Suspend: CoreType: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbHsPhyEnterLpm
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c1704 105 "%0Primary Port: Loop Cnt = %10!d!, USB30_STS = 0x%11!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbHsPhyEnterLpm
{
cnt, ItemLong -- 10
Qscratch_Sts, ItemLong -- 11
}
#typev Hw_c1697 104 "%0HS PHY not in L2 state, still power down" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbHsPhyEnterLpm
{
}
#typev Hw_c1678 103 "%0++ Core: %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbHsPhyEnterLpm
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c2101 130 "%0--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbHsPhyExitLpm
{
}
#typev Hw_c2099 129 "%0Invalid USB Core Type %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbHsPhyExitLpm
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c2089 128 "%0PLL is not locked" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbHsPhyExitLpm
{
}
#typev Hw_c2060 127 "%0++ Core: %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbHsPhyExitLpm
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c1446 96 "%0--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbPrepareHw
{
}
#typev Hw_c1428 95 "%0QcUsbReadForceGen1 failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbPrepareHw
{
status, ItemNTSTATUS -- 10
}
#typev Hw_c1421 94 "%0Set host mode active flag on CoreType %10!d!, Regval 0x%11!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbPrepareHw
{
FilterExt->coreType, ItemLong -- 10
regval, ItemLong -- 11
}
#typev Hw_c1405 93 "%0QcUsbReadHSMode failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbPrepareHw
{
status, ItemNTSTATUS -- 10
}
#typev Hw_c1398 92 "%0QcUsbReadCCOut failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbPrepareHw
{
status, ItemNTSTATUS -- 10
}
#typev Hw_c1389 91 "%0EvalAcpiMethod failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbPrepareHw
{
status, ItemNTSTATUS -- 10
}
#typev Hw_c1381 90 "%0++ Core: %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbPrepareHw
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c1377 89 "%0Invalid Context Handle" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbPrepareHw
{
}
#typev Hw_c1869 116 "%0Device_%10!s!, State: Devic_Disconnected(D2) SS: %11!s!, %12!s!, 0x%13!x!,  HS: %14!s!, %15!s!, 0x%16!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbPrintEnterLPMStatus
{
Core_Num[FilterExt->coreType], ItemString -- 10
SS_Port_Link_state, ItemEnum(_USB_PORT_LINK_STATE) -- 11
Port_Speed[SS_Port_Speed], ItemString -- 12
ssPORTSC[0], ItemLong -- 13
HS_Port_Link_state, ItemEnum(_USB_PORT_LINK_STATE) -- 14
Port_Speed[HS_Port_Speed], ItemString -- 15
hsPORTSC[0], ItemLong -- 16
}
#typev Hw_c1866 115 "%0Device_%10!s!, State: Cable_Disconnected(D3) SS: %11!s!, %12!s!, 0x%13!x!,  HS: %14!s!, %15!s!, 0x%16!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbPrintEnterLPMStatus
{
Core_Num[FilterExt->coreType], ItemString -- 10
SS_Port_Link_state, ItemEnum(_USB_PORT_LINK_STATE) -- 11
Port_Speed[SS_Port_Speed], ItemString -- 12
ssPORTSC[0], ItemLong -- 13
HS_Port_Link_state, ItemEnum(_USB_PORT_LINK_STATE) -- 14
Port_Speed[HS_Port_Speed], ItemString -- 15
hsPORTSC[0], ItemLong -- 16
}
#typev Hw_c1863 114 "%0Device_%10!s!, State: Suspended(D1) SS: %11!s!, %12!s!, 0x%13!x!,  HS: %14!s!, %15!s!, 0x%16!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbPrintEnterLPMStatus
{
Core_Num[FilterExt->coreType], ItemString -- 10
SS_Port_Link_state, ItemEnum(_USB_PORT_LINK_STATE) -- 11
Port_Speed[SS_Port_Speed], ItemString -- 12
ssPORTSC[0], ItemLong -- 13
HS_Port_Link_state, ItemEnum(_USB_PORT_LINK_STATE) -- 14
Port_Speed[HS_Port_Speed], ItemString -- 15
hsPORTSC[0], ItemLong -- 16
}
#typev Hw_c1847 113 "%0++ Core: %10!d! TargetState: %11!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbPrintEnterLPMStatus
{
FilterExt->coreType, ItemLong -- 10
PowerState[TargetState], ItemString -- 11
}
#typev Hw_c2137 133 "%0Device_%10!s!, State: DisConnected(D0) SS: %11!s!, %12!s!, 0x%13!x!,  HS: %14!s!, %15!s!, 0x%16!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbPrintExitLPMStatus
{
Core_Num[FilterExt->coreType], ItemString -- 10
SS_Port_Link_state, ItemEnum(_USB_PORT_LINK_STATE) -- 11
Port_Speed[SS_Port_Speed], ItemString -- 12
ssPORTSC[0], ItemLong -- 13
HS_Port_Link_state, ItemEnum(_USB_PORT_LINK_STATE) -- 14
Port_Speed[HS_Port_Speed], ItemString -- 15
hsPORTSC[0], ItemLong -- 16
}
#typev Hw_c2134 132 "%0Device_%10!s!, State: Connected(D0) SS: %11!s!, %12!s!, 0x%13!x!,  HS: %14!s!, %15!s!, 0x%16!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbPrintExitLPMStatus
{
Core_Num[FilterExt->coreType], ItemString -- 10
SS_Port_Link_state, ItemEnum(_USB_PORT_LINK_STATE) -- 11
Port_Speed[SS_Port_Speed], ItemString -- 12
ssPORTSC[0], ItemLong -- 13
HS_Port_Link_state, ItemEnum(_USB_PORT_LINK_STATE) -- 14
Port_Speed[HS_Port_Speed], ItemString -- 15
hsPORTSC[0], ItemLong -- 16
}
#typev Hw_c2121 131 "%0++ Core: %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbPrintExitLPMStatus
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c1038 66 "%0--" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbReadCCOut
{
}
#typev Hw_c1023 65 "%0QcUsbReadCCOut - Invalid Buffer Size, failed with : %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbReadCCOut
{
status, ItemNTSTATUS -- 10
}
#typev Hw_c1015 64 "%0QcUsbReadCCOut - Invalid CC Lane reported : %10!s!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=Hw FUNC=QcUsbReadCCOut
{
cc_lane, ItemEnum(_TYPEC_CC_OUT_STATUS_TYPE) -- 10
}
#typev Hw_c1012 63 "%0QcUsbReadCCOut:: Lane Number = %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbReadCCOut
{
cc_lane, ItemEnum(_TYPEC_CC_OUT_STATUS_TYPE) -- 10
}
#typev Hw_c1000 62 "%0QcUsbUtilEvalAcpiMethodIn failed with : %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbReadCCOut
{
status, ItemNTSTATUS -- 10
}
#typev Hw_c981 61 "%0RtlStringCbPrintf failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbReadCCOut
{
status, ItemNTSTATUS -- 10
}
#typev Hw_c959 60 "%0Invalid Filter Extension" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=QcUsbReadCCOut
{
}
#typev Hw_c955 59 "%0++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbReadCCOut
{
}
#typev Hw_c747 44 "%0--" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbReadForceGen1
{
}
#typev Hw_c732 43 "%0QcUsbReadForceGen1Speed - Invalid Buffer Size, failed with : %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbReadForceGen1
{
status, ItemNTSTATUS -- 10
}
#typev Hw_c725 42 "%0QcUsbReadForceGen1Speed - Invalid Value reported : %10!d!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=Hw FUNC=QcUsbReadForceGen1
{
ForceGen1Speed, ItemLong -- 10
}
#typev Hw_c722 41 "%0QcUsbReadForceGen1Speed:: Force Gen1 Only Enable = %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbReadForceGen1
{
ForceGen1Speed, ItemLong -- 10
}
#typev Hw_c710 40 "%0QcUsbUtilEvalAcpiMethodIn failed with : %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbReadForceGen1
{
status, ItemNTSTATUS -- 10
}
#typev Hw_c691 39 "%0RtlStringCbPrintf failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbReadForceGen1
{
status, ItemNTSTATUS -- 10
}
#typev Hw_c669 38 "%0Invalid Filter Extension" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=QcUsbReadForceGen1
{
}
#typev Hw_c665 37 "%0++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbReadForceGen1
{
}
#typev Hw_c1091 71 "%0--" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbReadHSMode
{
}
#typev Hw_c1087 70 "%0Port: %10!d! HSMODE: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbReadHSMode
{
FilterExt->coreType, ItemLong -- 10
hsmode_override, ItemLong -- 11
}
#typev Hw_c1084 69 "%0Invalid Core Number" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbReadHSMode
{
}
#typev Hw_c1069 68 "%0Invalid Filter Extension" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=QcUsbReadHSMode
{
}
#typev Hw_c1065 67 "%0++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbReadHSMode
{
}
#typev Hw_c1645 102 "%0--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbSsPhyEnterLpm
{
}
#typev Hw_c1642 101 "%0Invalid USB Core Type %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbSsPhyEnterLpm
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c1573 100 "%0Primary Port: Loop Cnt = %10!d!, PRI_USB30_STS_REG = 0x%11!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbSsPhyEnterLpm
{
cnt, ItemLong -- 10
Qscratch_Sts, ItemLong -- 11
}
#typev Hw_c1566 99 "%0SS PHY not in P3 state, still power down" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbSsPhyEnterLpm
{
}
#typev Hw_c1529 98 "%0++ Core: %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbSsPhyEnterLpm
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c2047 126 "%0--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbSsPhyExitLpm
{
}
#typev Hw_c2044 125 "%0Invalid USB Core Type %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbSsPhyExitLpm
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c2004 124 "%0++ Core: %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=FuncTrace FUNC=QcUsbSsPhyExitLpm
{
FilterExt->coreType, ItemLong -- 10
}
#typev Hw_c924 58 "%0--" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FuncTrace FUNC=QcUsbUtilEvalAcpiMethodIn
{
}
#typev Hw_c918 57 "%0OutputBuffer Signature Invalid, 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbUtilEvalAcpiMethodIn
{
((PACPI_EVAL_OUTPUT_BUFFER)pBuffer)->Signature, ItemLong -- 10
}
#typev Hw_c912 56 "%0EvalAcpiMethod failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbUtilEvalAcpiMethodIn
{
status, ItemNTSTATUS -- 10
}
#typev Hw_c898 55 "%0Unable to get IoTarget" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbUtilEvalAcpiMethodIn
{
}
#typev Hw_c887 54 "%0Uninitialized Memory Output pBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbUtilEvalAcpiMethodIn
{
}
#typev Hw_c873 53 "%0Invalid Parameter!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbUtilEvalAcpiMethodIn
{
}
#typev Hw_c864 52 "%0++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FuncTrace FUNC=QcUsbUtilEvalAcpiMethodIn
{
}
#typev Hw_c635 36 "%0--" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FuncTrace FUNC=QcUsbUtilEvalAcpiMethodOut
{
}
#typev Hw_c628 35 "%0Output buffer too small [%10!Iu!<%11!d!]" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbUtilEvalAcpiMethodOut
{
*pBufferSize, ItemPtr -- 10
pOutputBuffer->Argument->DataLength, ItemLong -- 11
}
#typev Hw_c618 34 "%0OutputBuffer Signature Invalid, 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbUtilEvalAcpiMethodOut
{
pOutputBuffer->Signature, ItemLong -- 10
}
#typev Hw_c608 33 "%0EvalAcpiMethod failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbUtilEvalAcpiMethodOut
{
status, ItemNTSTATUS -- 10
}
#typev Hw_c594 32 "%0Unable to get IoTarget" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Hw FUNC=QcUsbUtilEvalAcpiMethodOut
{
}
#typev Hw_c581 31 "%0WdfMemoryCreate failed: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbUtilEvalAcpiMethodOut
{
status, ItemNTSTATUS -- 10
}
#typev Hw_c559 30 "%0Invalid Parameter!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Hw FUNC=QcUsbUtilEvalAcpiMethodOut
{
}
#typev Hw_c556 29 "%0++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FuncTrace FUNC=QcUsbUtilEvalAcpiMethodOut
{
}
#enumv _USB_PORT_LINK_STATE
{
LINK_STATE_U0,0x0
LINK_STATE_U1,0x1
LINK_STATE_U2,0x2
LINK_STATE_U3,0x3
LINK_STATE_DISABLED,0x4
LINK_STATE_RXDETECT,0x5
LINK_STATE_INACTIVE,0x6
LINK_STATE_POLLING,0x7
LINK_STATE_RECOVERY,0x8
LINK_STATE_HOT_RESET,0x9
LINK_STATE_COMPLIANCE_MODE,0xA
LINK_STATE_TEST_MODE,0xB
LINK_STATE_RESERVED_C,0xC
LINK_STATE_RESERVED_D,0xD
LINK_STATE_RESERVED_E,0xE
LINK_STATE_RESUME,0xF
}
#enumv _TYPEC_CC_OUT_STATUS_TYPE
{
TYPEC_CC_OUT_CC1,0x0
TYPEC_CC_OUT_CC2,0x1
TYPEC_CC_OUT_CC_OPEN,0x2
}
