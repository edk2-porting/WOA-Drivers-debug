// PDB:  qcauddev7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:34:218 (UTC) [tracepdb]
825f6747-62cd-3b5b-f7a6-23e14c7684e5 ElfParser // SRC=loader.c MJ= MN=
#typev loader_c387 39 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_close_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_close_image
{
}
#typev loader_c360 38 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_close_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_close_image
{
}
#typev loader_c2163 163 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_init_descriptorList()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_init_descriptorList
{
}
#typev loader_c2134 160 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_init_descriptorList
{
}
#typev loader_c2153 162 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ExAllocatePoolWithTag() failed to allocate memory to descriptorList" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_init_descriptorList
{
}
#typev loader_c2143 161 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ehdr is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_init_descriptorList
{
}
#typev loader_c2124 159 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_init_descriptorList()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_init_descriptorList
{
}
#typev loader_c2163 163 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_init_descriptorList()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_init_descriptorList$fin$0
{
}
#typev loader_c2134 160 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_init_descriptorList$fin$0
{
}
#typev loader_c2153 162 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ExAllocatePoolWithTag() failed to allocate memory to descriptorList" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_init_descriptorList$fin$0
{
}
#typev loader_c2143 161 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ehdr is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_init_descriptorList$fin$0
{
}
#typev loader_c2124 159 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_init_descriptorList()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_init_descriptorList$fin$0
{
}
#typev loader_c1889 139 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_open_imagefile()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_imagefile
{
}
#typev loader_c1877 138 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_OPEN failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_imagefile
{
}
#typev loader_c1869 137 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_imagefile
{
}
#typev loader_c1862 136 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_open_imagefile()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_imagefile
{
}
#typev loader_c1889 139 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_open_imagefile()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_imagefile$fin$0
{
}
#typev loader_c1877 138 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_OPEN failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_imagefile$fin$0
{
}
#typev loader_c1869 137 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_imagefile$fin$0
{
}
#typev loader_c1862 136 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_open_imagefile()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_imagefile$fin$0
{
}
#typev loader_c723 58 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c714 57 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c707 56 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: sizeof(Elf32_Ehdr) is not equal to bytes_read." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c695 55 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c723 58 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c714 57 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c707 56 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: sizeof(Elf32_Ehdr) is not equal to bytes_read." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c695 55 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c844 68 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c812 67 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c804 66 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c796 65 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c788 64 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c778 63 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c770 62 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c762 61 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c743 60 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Image, cannot read program headers." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c736 59 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c844 68 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c812 67 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c804 66 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c796 65 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c788 64 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c778 63 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c770 62 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c762 61 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c743 60 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Image, cannot read program headers." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c736 59 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c2116 158 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_validate_parse_program_headers_get_segments()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments
{
}
#typev loader_c1909 141 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments
{
}
#typev loader_c2078 155 "%0 [%!LEVEL!] loader.c::%!FUNC!::Warning: Segment with unknown segment type identified" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments
{
}
#typev loader_c2055 153 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_parser_get_segment_data failed to get segment data " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments
{
}
#typev loader_c2048 152 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ExAllocatePool failed to allocate memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments
{
}
#typev loader_c2015 150 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_parser_get_segment_data failed to get segment data " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments
{
}
#typev loader_c2008 149 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ExAllocatePool failed to allocate memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments
{
}
#typev loader_c1982 148 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_program_header unsuccessful" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments
{
}
#typev loader_c1970 147 "%0 [%!LEVEL!] loader.c::%!FUNC!::Warning: Non-loadable segment type detected. Skipping to next segment" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments
{
}
#typev loader_c1949 145 "%0 [%!LEVEL!] loader.c::%!FUNC!::Info: Segment size in file zero. Skipping to next segment" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments
{
}
#typev loader_c1940 144 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo->program_hdr_ptr is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments
{
}
#typev loader_c1929 143 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid allocation size for number of headers" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments
{
}
#typev loader_c1918 142 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ehdr is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments
{
}
#typev loader_c1900 140 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_validate_parse_program_headers_get_segments()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments
{
}
#typev loader_c2116 158 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_validate_parse_program_headers_get_segments()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments$fin$0
{
}
#typev loader_c1909 141 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments$fin$0
{
}
#typev loader_c2078 155 "%0 [%!LEVEL!] loader.c::%!FUNC!::Warning: Segment with unknown segment type identified" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments$fin$0
{
}
#typev loader_c2055 153 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_parser_get_segment_data failed to get segment data " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments$fin$0
{
}
#typev loader_c2048 152 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ExAllocatePool failed to allocate memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments$fin$0
{
}
#typev loader_c2015 150 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_parser_get_segment_data failed to get segment data " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments$fin$0
{
}
#typev loader_c2008 149 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ExAllocatePool failed to allocate memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments$fin$0
{
}
#typev loader_c1982 148 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_program_header unsuccessful" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments$fin$0
{
}
#typev loader_c1970 147 "%0 [%!LEVEL!] loader.c::%!FUNC!::Warning: Non-loadable segment type detected. Skipping to next segment" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments$fin$0
{
}
#typev loader_c1949 145 "%0 [%!LEVEL!] loader.c::%!FUNC!::Info: Segment size in file zero. Skipping to next segment" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments$fin$0
{
}
#typev loader_c1940 144 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo->program_hdr_ptr is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments$fin$0
{
}
#typev loader_c1929 143 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid allocation size for number of headers" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments$fin$0
{
}
#typev loader_c1918 142 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ehdr is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments$fin$0
{
}
#typev loader_c1900 140 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_validate_parse_program_headers_get_segments()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_validate_parse_program_headers_get_segments$fin$0
{
}
#typev loader_c1640 116 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid type for program header detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_type, ItemLong -- 10
}
#typev loader_c1625 115 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: The file size of the program segment (%10!d!) was greater than the size in memory (%11!d!)." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_filesz, ItemLong -- 10
phdr->p_memsz, ItemLong -- 11
}
#typev loader_c1611 114 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address not zero for relocatable segment. An invalid program segment              physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c1596 113 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address zero for fixed segment. An invalid program segment                  physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c1640 116 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid type for program header detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_type, ItemLong -- 10
}
#typev loader_c1625 115 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: The file size of the program segment (%10!d!) was greater than the size in memory (%11!d!)." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_filesz, ItemLong -- 10
phdr->p_memsz, ItemLong -- 11
}
#typev loader_c1611 114 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address not zero for relocatable segment. An invalid program segment              physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c1596 113 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address zero for fixed segment. An invalid program segment                  physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c2223 167 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: SegmentListHead is NULL!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_free_segments
{
}
#typev loader_c2223 167 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: SegmentListHead is NULL!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_free_segments$fin$0
{
}
#typev loader_c2199 166 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_data
{
}
#typev loader_c2188 165 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_data
{
}
#typev loader_c2178 164 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ExAllocatePool failed to allocate memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_data
{
}
#typev loader_c2199 166 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_data$fin$0
{
}
#typev loader_c2188 165 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_data$fin$0
{
}
#typev loader_c2178 164 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ExAllocatePool failed to allocate memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_data$fin$0
{
}
#typev loader_c1853 135 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_parser_get_segment_descriptors()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors
{
}
#typev loader_c1842 134 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors
{
}
#typev loader_c1818 133 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_init_descriptorList failed Memory allocation to descriptorList failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors
{
}
#typev loader_c1807 132 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors
{
}
#typev loader_c1797 131 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors
{
}
#typev loader_c1787 130 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors
{
}
#typev loader_c1777 129 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_open_imagefile() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors
{
}
#typev loader_c1745 127 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid SegmentListHead" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors
{
}
#typev loader_c1738 126 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_image_info Image path invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors
{
}
#typev loader_c1731 125 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_parser_get_segment_descriptors()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors
{
}
#typev loader_c1853 135 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_parser_get_segment_descriptors()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors$fin$0
{
}
#typev loader_c1842 134 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors$fin$0
{
}
#typev loader_c1818 133 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_init_descriptorList failed Memory allocation to descriptorList failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors$fin$0
{
}
#typev loader_c1807 132 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors$fin$0
{
}
#typev loader_c1797 131 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors$fin$0
{
}
#typev loader_c1787 130 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors$fin$0
{
}
#typev loader_c1777 129 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_open_imagefile() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors$fin$0
{
}
#typev loader_c1745 127 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid SegmentListHead" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors$fin$0
{
}
#typev loader_c1738 126 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_image_info Image path invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors$fin$0
{
}
#typev loader_c1731 125 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_parser_get_segment_descriptors()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_get_segment_descriptors$fin$0
{
}
#typev loader_c1723 124 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_parser_get_segments()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_get_segments
{
}
#typev loader_c1722 123 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit from elf_parser_get_segments" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segments
{
}
#typev loader_c1670 119 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image path string not provided by caller" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segments
{
}
#typev loader_c1697 121 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory was not allocaed for image" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segments
{
}
#typev loader_c1688 120 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid SegmentListHead" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segments
{
}
#typev loader_c1661 118 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_parser_get_segments()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_get_segments
{
}
#typev loader_c1660 117 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry to elf_parser_get_segments " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segments
{
}
#typev loader_c1723 124 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_parser_get_segments()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_get_segments$fin$0
{
}
#typev loader_c1722 123 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit from elf_parser_get_segments" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segments$fin$0
{
}
#typev loader_c1670 119 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image path string not provided by caller" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segments$fin$0
{
}
#typev loader_c1697 121 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory was not allocaed for image" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segments$fin$0
{
}
#typev loader_c1688 120 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid SegmentListHead" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segments$fin$0
{
}
#typev loader_c1661 118 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_parser_get_segments()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_get_segments$fin$0
{
}
#typev loader_c1660 117 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry to elf_parser_get_segments " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_get_segments$fin$0
{
}
#typev loader_c1570 112 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header
{
}
#typev loader_c1525 108 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF header magic bytes detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
}
#typev loader_c1559 111 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF file version detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
ehdr->e_ident[EI_VERSION], ItemLong -- 10
}
#typev loader_c1548 110 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF data encoding detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
ehdr->e_ident[EI_DATA], ItemLong -- 10
}
#typev loader_c1535 109 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF class detected (must be 32 bit): %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
ehdr->e_ident[EI_CLASS], ItemLong -- 10
}
#typev loader_c1512 107 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header
{
}
#typev loader_c1570 112 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
}
#typev loader_c1525 108 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF header magic bytes detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
}
#typev loader_c1559 111 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF file version detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
ehdr->e_ident[EI_VERSION], ItemLong -- 10
}
#typev loader_c1548 110 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF data encoding detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
ehdr->e_ident[EI_DATA], ItemLong -- 10
}
#typev loader_c1535 109 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF class detected (must be 32 bit): %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
ehdr->e_ident[EI_CLASS], ItemLong -- 10
}
#typev loader_c1512 107 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
}
// PDB:  qcipa7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:27:458 (UTC) [tracepdb]
#typev loader_c123 19 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to calculate size of ELF file %10!s!, loader error: 0x%11!X!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=LoadelfImageRawFile
{
image->image_name, ItemString -- 10
ret_code, ItemLong -- 11
}
#typev loader_c115 18 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to open ELF file %10!s!, loader error: 0x%11!X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=LoadelfImageRawFile
{
image->image_name, ItemString -- 10
ret_code, ItemLong -- 11
}
#typev loader_c123 19 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to calculate size of ELF file %10!s!, loader error: 0x%11!X!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=LoadelfImageRawFile$fin$0
{
image->image_name, ItemString -- 10
ret_code, ItemLong -- 11
}
#typev loader_c115 18 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to open ELF file %10!s!, loader error: 0x%11!X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=LoadelfImageRawFile$fin$0
{
image->image_name, ItemString -- 10
ret_code, ItemLong -- 11
}
#typev loader_c1423 104 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Parameter" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes
{
}
#typev loader_c1448 106 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes
{
}
#typev loader_c1438 105 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo->program_hdr_ptr is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes
{
}
#typev loader_c1423 104 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Parameter" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes$fin$0
{
}
#typev loader_c1448 106 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes$fin$0
{
}
#typev loader_c1438 105 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo->program_hdr_ptr is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes$fin$0
{
}
#typev loader_c387 39 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_close_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_close_image
{
}
#typev loader_c360 38 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_close_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_close_image
{
}
#typev loader_c185 22 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_get_file_size failed filedes INVALID." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size
{
}
#typev loader_c179 21 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size
{
}
#typev loader_c170 20 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ZwQueryInformationFile failed with status 0x%10!X!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size
{
status, ItemLong -- 10
}
#typev loader_c185 22 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_get_file_size failed filedes INVALID." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size$fin$0
{
}
#typev loader_c179 21 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size$fin$0
{
}
#typev loader_c170 20 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ZwQueryInformationFile failed with status 0x%10!X!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size$fin$0
{
status, ItemLong -- 10
}
#typev loader_c1043 86 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_is_segment_loadable
{
}
#typev loader_c1043 86 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_is_segment_loadable$fin$0
{
}
#typev loader_c350 37 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_and_map_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image
{
}
#typev loader_c341 36 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_map_hash_segment failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image
{
}
#typev loader_c329 35 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_image failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image
{
}
#typev loader_c319 34 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_and_map_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image
{
}
#typev loader_c350 37 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_and_map_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image$fin$0
{
}
#typev loader_c341 36 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_map_hash_segment failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image$fin$0
{
}
#typev loader_c329 35 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_image failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image$fin$0
{
}
#typev loader_c319 34 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_and_map_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image$fin$0
{
}
#typev loader_c1020 83 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c1011 82 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c1002 81 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_segment is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c993 80 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c982 79 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_map_segments is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c970 78 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c1020 83 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c1011 82 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c1002 81 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_segment is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c993 80 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c982 79 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_map_segments is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c970 78 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c234 25 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image
{
}
#typev loader_c224 24 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image
{
}
#typev loader_c214 23 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image
{
}
#typev loader_c234 25 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image$fin$0
{
}
#typev loader_c224 24 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image$fin$0
{
}
#typev loader_c214 23 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image$fin$0
{
}
#typev loader_c960 77 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_segment()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c941 76 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c930 75 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c920 74 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: program_hdr_ptr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c912 73 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Argument passed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c905 72 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c897 71 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_segment()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c960 77 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_segment()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c941 76 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c930 75 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c920 74 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: program_hdr_ptr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c912 73 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Argument passed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c905 72 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c897 71 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_segment()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c1208 94 "%0 [%!LEVEL!] loader.c::%!FUNC!::Ending the load of all fixed program segments for image: %10!s!, number of fixed program segments: %11!d!, status: %12!d!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
numFixedSegmentsFound, ItemLong -- 11
status, ItemLong -- 12
}
#typev loader_c1116 89 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo invalid contents" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
}
#typev loader_c1191 93 "%0 [%!LEVEL!] loader.c::%!FUNC!::Virtual address of the image entry assigned to: 0x%10!p!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
ImageInfo->VirtualImageEntryAddress, ItemPtr -- 10
}
#typev loader_c1164 92 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to allocate memory for program segments at a fixed address." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
}
#typev loader_c1153 91 "%0 [%!LEVEL!] loader.c::%!FUNC!::ALLOCATING (file: %10!s!, line: %11!d!): Physical memory at: 0x%12!X!, size: %13!u! bytes." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
__FILE__, ItemString -- 10
__LINE__, ItemLong -- 11
physicalAddress.LowPart, ItemLong -- 12
phdr->p_memsz, ItemLong -- 13
}
#typev loader_c1125 90 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unloadable program segment detected, flags: 0x%10!X!.  Skipping to the next program segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
phdr->p_flags, ItemLong -- 10
}
#typev loader_c1097 88 "%0 [%!LEVEL!] loader.c::%!FUNC!::Beginning the load of all fixed program segments for image %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c1093 87 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
}
#typev loader_c1208 94 "%0 [%!LEVEL!] loader.c::%!FUNC!::Ending the load of all fixed program segments for image: %10!s!, number of fixed program segments: %11!d!, status: %12!d!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
numFixedSegmentsFound, ItemLong -- 11
status, ItemLong -- 12
}
#typev loader_c1116 89 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo invalid contents" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
}
#typev loader_c1191 93 "%0 [%!LEVEL!] loader.c::%!FUNC!::Virtual address of the image entry assigned to: 0x%10!p!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
ImageInfo->VirtualImageEntryAddress, ItemPtr -- 10
}
#typev loader_c1164 92 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to allocate memory for program segments at a fixed address." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
}
#typev loader_c1153 91 "%0 [%!LEVEL!] loader.c::%!FUNC!::ALLOCATING (file: %10!s!, line: %11!d!): Physical memory at: 0x%12!X!, size: %13!u! bytes." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
__FILE__, ItemString -- 10
__LINE__, ItemLong -- 11
physicalAddress.LowPart, ItemLong -- 12
phdr->p_memsz, ItemLong -- 13
}
#typev loader_c1125 90 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unloadable program segment detected, flags: 0x%10!X!.  Skipping to the next program segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
phdr->p_flags, ItemLong -- 10
}
#typev loader_c1097 88 "%0 [%!LEVEL!] loader.c::%!FUNC!::Beginning the load of all fixed program segments for image %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c1093 87 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
}
#typev loader_c483 45 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to load the hash segment from the ELF file." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
}
#typev loader_c460 44 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to map the hash segment to memory." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
}
#typev loader_c449 43 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid hash segment detected, segment index %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
hashSegmentIndex, ItemLong -- 10
}
#typev loader_c438 42 "%0 [%!LEVEL!] loader.c::%!FUNC!::Warning: LoadHashSegment: Unable to locate a hash segment." //   LEVEL=TRACE_LEVEL_WARNING FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
}
#typev loader_c424 41 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory not available." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
}
#typev loader_c412 40 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
}
#typev loader_c483 45 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to load the hash segment from the ELF file." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
}
#typev loader_c460 44 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to map the hash segment to memory." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
}
#typev loader_c449 43 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid hash segment detected, segment index %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
hashSegmentIndex, ItemLong -- 10
}
#typev loader_c438 42 "%0 [%!LEVEL!] loader.c::%!FUNC!::Warning: LoadHashSegment: Unable to locate a hash segment." //   LEVEL=TRACE_LEVEL_WARNING FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
}
#typev loader_c424 41 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory not available." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
}
#typev loader_c412 40 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
}
#typev loader_c1382 103 "%0 [%!LEVEL!] loader.c::%!FUNC!::Ending the load of all relocatable program segments for image: %10!s!, number of relocatable segments: %11!d!, status: %12!d!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
numRelocatableSegments, ItemLong -- 11
status, ItemLong -- 12
}
#typev loader_c1302 98 "%0 [%!LEVEL!] loader.c::%!FUNC!::imageInfo invalid contents" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
}
#typev loader_c1350 102 "%0 [%!LEVEL!] loader.c::%!FUNC!::Relocatable program segment (index: %10!d!) for image (%11!s!) assigned virtual address: 0x%12!p!, size: %13!d! bytes" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
index, ItemLong -- 10
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 11
(PVOID)*phdr_vaddr, ItemPtr -- 12
phdr->p_memsz, ItemLong -- 13
}
#typev loader_c1346 101 "%0 [%!LEVEL!] loader.c::%!FUNC!::Virtual address of the image entry assigned to: 0x%10!p!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
ImageInfo->VirtualImageEntryAddress, ItemPtr -- 10
}
#typev loader_c1325 100 "%0 [%!LEVEL!] loader.c::%!FUNC!::Fixed program segment (index: %10!d!) for relocatable image (%11!s!) detected.  Skipping to the next segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
index, ItemLong -- 10
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 11
}
#typev loader_c1314 99 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unloadable program segment detected, flags: 0x%10!X!.  Skipping to the next program segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
phdr->p_flags, ItemLong -- 10
}
#typev loader_c1273 97 "%0 [%!LEVEL!] loader.c::%!FUNC!::Not sufficient memory reservation for the image size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
}
#typev loader_c1253 96 "%0 [%!LEVEL!] loader.c::%!FUNC!::Beginning the load of all relocatable program segments for image %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c1249 95 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
}
#typev loader_c1382 103 "%0 [%!LEVEL!] loader.c::%!FUNC!::Ending the load of all relocatable program segments for image: %10!s!, number of relocatable segments: %11!d!, status: %12!d!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
numRelocatableSegments, ItemLong -- 11
status, ItemLong -- 12
}
#typev loader_c1302 98 "%0 [%!LEVEL!] loader.c::%!FUNC!::imageInfo invalid contents" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
}
#typev loader_c1350 102 "%0 [%!LEVEL!] loader.c::%!FUNC!::Relocatable program segment (index: %10!d!) for image (%11!s!) assigned virtual address: 0x%12!p!, size: %13!d! bytes" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
index, ItemLong -- 10
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 11
(PVOID)*phdr_vaddr, ItemPtr -- 12
phdr->p_memsz, ItemLong -- 13
}
#typev loader_c1346 101 "%0 [%!LEVEL!] loader.c::%!FUNC!::Virtual address of the image entry assigned to: 0x%10!p!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
ImageInfo->VirtualImageEntryAddress, ItemPtr -- 10
}
#typev loader_c1325 100 "%0 [%!LEVEL!] loader.c::%!FUNC!::Fixed program segment (index: %10!d!) for relocatable image (%11!s!) detected.  Skipping to the next segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
index, ItemLong -- 10
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 11
}
#typev loader_c1314 99 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unloadable program segment detected, flags: 0x%10!X!.  Skipping to the next program segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
phdr->p_flags, ItemLong -- 10
}
#typev loader_c1273 97 "%0 [%!LEVEL!] loader.c::%!FUNC!::Not sufficient memory reservation for the image size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
}
#typev loader_c1253 96 "%0 [%!LEVEL!] loader.c::%!FUNC!::Beginning the load of all relocatable program segments for image %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c1249 95 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
}
#typev loader_c873 70 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_file
{
}
#typev loader_c862 69 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_OPEN failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_file
{
}
#typev loader_c873 70 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_file$fin$0
{
}
#typev loader_c862 69 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_OPEN failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_file$fin$0
{
}
#typev loader_c307 33 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_open_image_read_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c297 32 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c290 31 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c283 30 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c276 29 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c267 28 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_OPEN failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c259 27 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c252 26 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_open_image_read_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c307 33 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_open_image_read_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c297 32 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c290 31 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c283 30 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c276 29 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c267 28 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_OPEN failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c259 27 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c252 26 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_open_image_read_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c533 46 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid parameter. Image or ImageInfo is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate
{
}
#typev loader_c596 48 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to map ELF header and hash segment memory at the requested address of: %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate
{
pphysical_address, ItemPtr -- 10
}
#typev loader_c630 50 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: memcpy_s failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate
{
}
#typev loader_c617 49 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: memcpy_s failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate
{
}
#typev loader_c587 47 "%0 [%!LEVEL!] loader.c::%!FUNC!::Memory mapped for the hash segment and ELF headers, virtual: 0x%10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate
{
virtualAddress, ItemPtr -- 10
}
#typev loader_c533 46 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid parameter. Image or ImageInfo is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate$fin$0
{
}
#typev loader_c596 48 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to map ELF header and hash segment memory at the requested address of: %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate$fin$0
{
pphysical_address, ItemPtr -- 10
}
#typev loader_c630 50 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: memcpy_s failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate$fin$0
{
}
#typev loader_c617 49 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: memcpy_s failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate$fin$0
{
}
#typev loader_c587 47 "%0 [%!LEVEL!] loader.c::%!FUNC!::Memory mapped for the hash segment and ELF headers, virtual: 0x%10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate$fin$0
{
virtualAddress, ItemPtr -- 10
}
#typev loader_c676 54 "%0 [%!LEVEL!] loader.c::%!FUNC!::elf_loader_ram_deallocate Exit" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate
{
}
#typev loader_c667 53 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unmapping the hash segment for image file: %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c657 52 "%0 [%!LEVEL!] loader.c::%!FUNC!::imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate
{
}
#typev loader_c653 51 "%0 [%!LEVEL!] loader.c::%!FUNC!::elf_loader_ram_deallocate Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate
{
}
#typev loader_c676 54 "%0 [%!LEVEL!] loader.c::%!FUNC!::elf_loader_ram_deallocate Exit" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate$fin$0
{
}
#typev loader_c667 53 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unmapping the hash segment for image file: %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate$fin$0
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c657 52 "%0 [%!LEVEL!] loader.c::%!FUNC!::imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate$fin$0
{
}
#typev loader_c653 51 "%0 [%!LEVEL!] loader.c::%!FUNC!::elf_loader_ram_deallocate Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate$fin$0
{
}
#typev loader_c723 58 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c714 57 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c707 56 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: sizeof(Elf32_Ehdr) is not equal to bytes_read." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c695 55 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c723 58 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c714 57 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c707 56 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: sizeof(Elf32_Ehdr) is not equal to bytes_read." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c695 55 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c844 68 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c812 67 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c804 66 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c796 65 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c788 64 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c778 63 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c770 62 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c762 61 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c743 60 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Image, cannot read program headers." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c736 59 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c844 68 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c812 67 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c804 66 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c796 65 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c788 64 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c778 63 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c770 62 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c762 61 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c743 60 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Image, cannot read program headers." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c736 59 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c1640 116 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid type for program header detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_type, ItemLong -- 10
}
#typev loader_c1625 115 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: The file size of the program segment (%10!d!) was greater than the size in memory (%11!d!)." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_filesz, ItemLong -- 10
phdr->p_memsz, ItemLong -- 11
}
#typev loader_c1611 114 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address not zero for relocatable segment. An invalid program segment              physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c1596 113 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address zero for fixed segment. An invalid program segment                  physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c1640 116 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid type for program header detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_type, ItemLong -- 10
}
#typev loader_c1625 115 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: The file size of the program segment (%10!d!) was greater than the size in memory (%11!d!)." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_filesz, ItemLong -- 10
phdr->p_memsz, ItemLong -- 11
}
#typev loader_c1611 114 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address not zero for relocatable segment. An invalid program segment              physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c1596 113 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address zero for fixed segment. An invalid program segment                  physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c97 17 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_parser_ddr_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c45 12 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image path string not provided by caller" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c84 16 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_and_map_image() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c75 15 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_open_image_read_headers() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c66 14 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: LoadelfImageRawFile() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c53 13 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory not available." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c36 11 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: parsedImageInfo is NULL!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c29 10 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_parser_ddr_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c97 17 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_parser_ddr_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c45 12 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image path string not provided by caller" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c84 16 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_and_map_image() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c75 15 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_open_image_read_headers() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c66 14 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: LoadelfImageRawFile() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c53 13 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory not available." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c36 11 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: parsedImageInfo is NULL!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c29 10 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_parser_ddr_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c1570 112 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header
{
}
#typev loader_c1525 108 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF header magic bytes detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
}
#typev loader_c1559 111 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF file version detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
ehdr->e_ident[EI_VERSION], ItemLong -- 10
}
#typev loader_c1548 110 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF data encoding detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
ehdr->e_ident[EI_DATA], ItemLong -- 10
}
#typev loader_c1535 109 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF class detected (must be 32 bit): %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
ehdr->e_ident[EI_CLASS], ItemLong -- 10
}
#typev loader_c1512 107 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header
{
}
#typev loader_c1570 112 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
}
#typev loader_c1525 108 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF header magic bytes detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
}
#typev loader_c1559 111 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF file version detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
ehdr->e_ident[EI_VERSION], ItemLong -- 10
}
#typev loader_c1548 110 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF data encoding detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
ehdr->e_ident[EI_DATA], ItemLong -- 10
}
#typev loader_c1535 109 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF class detected (must be 32 bit): %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
ehdr->e_ident[EI_CLASS], ItemLong -- 10
}
#typev loader_c1512 107 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
}
// PDB:  qcpil.pdb
// PDB:  Last Updated :2021-10-17:21:53:58:868 (UTC) [tracepdb]
#typev loader_c123 19 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to calculate size of ELF file %10!s!, loader error: 0x%11!X!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=LoadelfImageRawFile
{
image->image_name, ItemString -- 10
ret_code, ItemLong -- 11
}
#typev loader_c115 18 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to open ELF file %10!s!, loader error: 0x%11!X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=LoadelfImageRawFile
{
image->image_name, ItemString -- 10
ret_code, ItemLong -- 11
}
#typev loader_c123 19 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to calculate size of ELF file %10!s!, loader error: 0x%11!X!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=LoadelfImageRawFile$fin$0
{
image->image_name, ItemString -- 10
ret_code, ItemLong -- 11
}
#typev loader_c115 18 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to open ELF file %10!s!, loader error: 0x%11!X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=LoadelfImageRawFile$fin$0
{
image->image_name, ItemString -- 10
ret_code, ItemLong -- 11
}
#typev loader_c1423 104 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Parameter" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes
{
}
#typev loader_c1448 106 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes
{
}
#typev loader_c1438 105 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo->program_hdr_ptr is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes
{
}
#typev loader_c1423 104 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Parameter" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes$fin$0
{
}
#typev loader_c1448 106 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes$fin$0
{
}
#typev loader_c1438 105 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo->program_hdr_ptr is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_calculate_segmentSizes$fin$0
{
}
#typev loader_c387 39 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_close_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_close_image
{
}
#typev loader_c360 38 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_close_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_close_image
{
}
#typev loader_c185 22 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_get_file_size failed filedes INVALID." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size
{
}
#typev loader_c179 21 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size
{
}
#typev loader_c170 20 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ZwQueryInformationFile failed with status 0x%10!X!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size
{
status, ItemLong -- 10
}
#typev loader_c185 22 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_get_file_size failed filedes INVALID." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size$fin$0
{
}
#typev loader_c179 21 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size$fin$0
{
}
#typev loader_c170 20 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: ZwQueryInformationFile failed with status 0x%10!X!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_get_file_size$fin$0
{
status, ItemLong -- 10
}
#typev loader_c1043 86 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_is_segment_loadable
{
}
#typev loader_c1043 86 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_is_segment_loadable$fin$0
{
}
#typev loader_c350 37 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_and_map_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image
{
}
#typev loader_c341 36 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_map_hash_segment failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image
{
}
#typev loader_c329 35 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_image failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image
{
}
#typev loader_c319 34 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_and_map_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image
{
}
#typev loader_c350 37 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_and_map_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image$fin$0
{
}
#typev loader_c341 36 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_map_hash_segment failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image$fin$0
{
}
#typev loader_c329 35 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_image failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image$fin$0
{
}
#typev loader_c319 34 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_and_map_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_and_map_image$fin$0
{
}
#typev loader_c1020 83 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c1011 82 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c1002 81 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_segment is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c993 80 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c982 79 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_map_segments is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c970 78 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_image
{
}
#typev loader_c1020 83 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c1011 82 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c1002 81 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_segment is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c993 80 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: phdr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c982 79 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_map_segments is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c970 78 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_image$fin$0
{
}
#typev loader_c234 25 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image
{
}
#typev loader_c224 24 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image
{
}
#typev loader_c214 23 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image
{
}
#typev loader_c234 25 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image$fin$0
{
}
#typev loader_c224 24 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image$fin$0
{
}
#typev loader_c214 23 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_raw_image$fin$0
{
}
#typev loader_c960 77 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_segment()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c941 76 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c930 75 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c920 74 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: program_hdr_ptr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c912 73 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Argument passed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c905 72 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c897 71 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_segment()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_segment
{
}
#typev loader_c960 77 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_load_segment()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c941 76 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c930 75 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c920 74 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: program_hdr_ptr is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c912 73 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Argument passed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c905 72 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c897 71 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_load_segment()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_load_segment$fin$0
{
}
#typev loader_c1208 94 "%0 [%!LEVEL!] loader.c::%!FUNC!::Ending the load of all fixed program segments for image: %10!s!, number of fixed program segments: %11!d!, status: %12!d!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
numFixedSegmentsFound, ItemLong -- 11
status, ItemLong -- 12
}
#typev loader_c1116 89 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo invalid contents" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
}
#typev loader_c1191 93 "%0 [%!LEVEL!] loader.c::%!FUNC!::Virtual address of the image entry assigned to: 0x%10!p!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
ImageInfo->VirtualImageEntryAddress, ItemPtr -- 10
}
#typev loader_c1164 92 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to allocate memory for program segments at a fixed address." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
}
#typev loader_c1153 91 "%0 [%!LEVEL!] loader.c::%!FUNC!::ALLOCATING (file: %10!s!, line: %11!d!): Physical memory at: 0x%12!X!, size: %13!u! bytes." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
__FILE__, ItemString -- 10
__LINE__, ItemLong -- 11
physicalAddress.LowPart, ItemLong -- 12
phdr->p_memsz, ItemLong -- 13
}
#typev loader_c1125 90 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unloadable program segment detected, flags: 0x%10!X!.  Skipping to the next program segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
phdr->p_flags, ItemLong -- 10
}
#typev loader_c1097 88 "%0 [%!LEVEL!] loader.c::%!FUNC!::Beginning the load of all fixed program segments for image %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c1093 87 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments
{
}
#typev loader_c1208 94 "%0 [%!LEVEL!] loader.c::%!FUNC!::Ending the load of all fixed program segments for image: %10!s!, number of fixed program segments: %11!d!, status: %12!d!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
numFixedSegmentsFound, ItemLong -- 11
status, ItemLong -- 12
}
#typev loader_c1116 89 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo invalid contents" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
}
#typev loader_c1191 93 "%0 [%!LEVEL!] loader.c::%!FUNC!::Virtual address of the image entry assigned to: 0x%10!p!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
ImageInfo->VirtualImageEntryAddress, ItemPtr -- 10
}
#typev loader_c1164 92 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to allocate memory for program segments at a fixed address." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
}
#typev loader_c1153 91 "%0 [%!LEVEL!] loader.c::%!FUNC!::ALLOCATING (file: %10!s!, line: %11!d!): Physical memory at: 0x%12!X!, size: %13!u! bytes." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
__FILE__, ItemString -- 10
__LINE__, ItemLong -- 11
physicalAddress.LowPart, ItemLong -- 12
phdr->p_memsz, ItemLong -- 13
}
#typev loader_c1125 90 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unloadable program segment detected, flags: 0x%10!X!.  Skipping to the next program segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
phdr->p_flags, ItemLong -- 10
}
#typev loader_c1097 88 "%0 [%!LEVEL!] loader.c::%!FUNC!::Beginning the load of all fixed program segments for image %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c1093 87 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_fixed_segments$fin$0
{
}
#typev loader_c483 45 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to load the hash segment from the ELF file." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
}
#typev loader_c460 44 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to map the hash segment to memory." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
}
#typev loader_c449 43 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid hash segment detected, segment index %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
hashSegmentIndex, ItemLong -- 10
}
#typev loader_c438 42 "%0 [%!LEVEL!] loader.c::%!FUNC!::Warning: LoadHashSegment: Unable to locate a hash segment." //   LEVEL=TRACE_LEVEL_WARNING FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
}
#typev loader_c424 41 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory not available." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
}
#typev loader_c412 40 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment
{
}
#typev loader_c483 45 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to load the hash segment from the ELF file." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
}
#typev loader_c460 44 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to map the hash segment to memory." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
}
#typev loader_c449 43 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid hash segment detected, segment index %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
hashSegmentIndex, ItemLong -- 10
}
#typev loader_c438 42 "%0 [%!LEVEL!] loader.c::%!FUNC!::Warning: LoadHashSegment: Unable to locate a hash segment." //   LEVEL=TRACE_LEVEL_WARNING FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
}
#typev loader_c424 41 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory not available." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
}
#typev loader_c412 40 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_hash_segment$fin$0
{
}
#typev loader_c1382 103 "%0 [%!LEVEL!] loader.c::%!FUNC!::Ending the load of all relocatable program segments for image: %10!s!, number of relocatable segments: %11!d!, status: %12!d!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
numRelocatableSegments, ItemLong -- 11
status, ItemLong -- 12
}
#typev loader_c1302 98 "%0 [%!LEVEL!] loader.c::%!FUNC!::imageInfo invalid contents" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
}
#typev loader_c1350 102 "%0 [%!LEVEL!] loader.c::%!FUNC!::Relocatable program segment (index: %10!d!) for image (%11!s!) assigned virtual address: 0x%12!p!, size: %13!d! bytes" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
index, ItemLong -- 10
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 11
(PVOID)*phdr_vaddr, ItemPtr -- 12
phdr->p_memsz, ItemLong -- 13
}
#typev loader_c1346 101 "%0 [%!LEVEL!] loader.c::%!FUNC!::Virtual address of the image entry assigned to: 0x%10!p!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
ImageInfo->VirtualImageEntryAddress, ItemPtr -- 10
}
#typev loader_c1325 100 "%0 [%!LEVEL!] loader.c::%!FUNC!::Fixed program segment (index: %10!d!) for relocatable image (%11!s!) detected.  Skipping to the next segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
index, ItemLong -- 10
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 11
}
#typev loader_c1314 99 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unloadable program segment detected, flags: 0x%10!X!.  Skipping to the next program segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
phdr->p_flags, ItemLong -- 10
}
#typev loader_c1273 97 "%0 [%!LEVEL!] loader.c::%!FUNC!::Not sufficient memory reservation for the image size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
}
#typev loader_c1253 96 "%0 [%!LEVEL!] loader.c::%!FUNC!::Beginning the load of all relocatable program segments for image %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c1249 95 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments
{
}
#typev loader_c1382 103 "%0 [%!LEVEL!] loader.c::%!FUNC!::Ending the load of all relocatable program segments for image: %10!s!, number of relocatable segments: %11!d!, status: %12!d!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
numRelocatableSegments, ItemLong -- 11
status, ItemLong -- 12
}
#typev loader_c1302 98 "%0 [%!LEVEL!] loader.c::%!FUNC!::imageInfo invalid contents" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
}
#typev loader_c1350 102 "%0 [%!LEVEL!] loader.c::%!FUNC!::Relocatable program segment (index: %10!d!) for image (%11!s!) assigned virtual address: 0x%12!p!, size: %13!d! bytes" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
index, ItemLong -- 10
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 11
(PVOID)*phdr_vaddr, ItemPtr -- 12
phdr->p_memsz, ItemLong -- 13
}
#typev loader_c1346 101 "%0 [%!LEVEL!] loader.c::%!FUNC!::Virtual address of the image entry assigned to: 0x%10!p!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
ImageInfo->VirtualImageEntryAddress, ItemPtr -- 10
}
#typev loader_c1325 100 "%0 [%!LEVEL!] loader.c::%!FUNC!::Fixed program segment (index: %10!d!) for relocatable image (%11!s!) detected.  Skipping to the next segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
index, ItemLong -- 10
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 11
}
#typev loader_c1314 99 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unloadable program segment detected, flags: 0x%10!X!.  Skipping to the next program segment." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
phdr->p_flags, ItemLong -- 10
}
#typev loader_c1273 97 "%0 [%!LEVEL!] loader.c::%!FUNC!::Not sufficient memory reservation for the image size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
}
#typev loader_c1253 96 "%0 [%!LEVEL!] loader.c::%!FUNC!::Beginning the load of all relocatable program segments for image %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c1249 95 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_map_relocatableSegments$fin$0
{
}
#typev loader_c873 70 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_file
{
}
#typev loader_c862 69 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_OPEN failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_file
{
}
#typev loader_c873 70 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_file$fin$0
{
}
#typev loader_c862 69 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_OPEN failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_file$fin$0
{
}
#typev loader_c307 33 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_open_image_read_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c297 32 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c290 31 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c283 30 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c276 29 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c267 28 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_OPEN failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c259 27 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c252 26 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_open_image_read_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers
{
}
#typev loader_c307 33 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_open_image_read_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c297 32 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c290 31 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_program_headers is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c283 30 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_validate_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c276 29 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_read_elf_header is unsuccessful." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c267 28 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_OPEN failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c259 27 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c252 26 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_open_image_read_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_open_image_read_headers$fin$0
{
}
#typev loader_c533 46 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid parameter. Image or ImageInfo is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate
{
}
#typev loader_c596 48 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to map ELF header and hash segment memory at the requested address of: %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate
{
pphysical_address, ItemPtr -- 10
}
#typev loader_c630 50 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: memcpy_s failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate
{
}
#typev loader_c617 49 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: memcpy_s failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate
{
}
#typev loader_c587 47 "%0 [%!LEVEL!] loader.c::%!FUNC!::Memory mapped for the hash segment and ELF headers, virtual: 0x%10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate
{
virtualAddress, ItemPtr -- 10
}
#typev loader_c533 46 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid parameter. Image or ImageInfo is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate$fin$0
{
}
#typev loader_c596 48 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Unable to map ELF header and hash segment memory at the requested address of: %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate$fin$0
{
pphysical_address, ItemPtr -- 10
}
#typev loader_c630 50 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: memcpy_s failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate$fin$0
{
}
#typev loader_c617 49 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: memcpy_s failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate$fin$0
{
}
#typev loader_c587 47 "%0 [%!LEVEL!] loader.c::%!FUNC!::Memory mapped for the hash segment and ELF headers, virtual: 0x%10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_allocate$fin$0
{
virtualAddress, ItemPtr -- 10
}
#typev loader_c676 54 "%0 [%!LEVEL!] loader.c::%!FUNC!::elf_loader_ram_deallocate Exit" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate
{
}
#typev loader_c667 53 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unmapping the hash segment for image file: %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c657 52 "%0 [%!LEVEL!] loader.c::%!FUNC!::imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate
{
}
#typev loader_c653 51 "%0 [%!LEVEL!] loader.c::%!FUNC!::elf_loader_ram_deallocate Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate
{
}
#typev loader_c676 54 "%0 [%!LEVEL!] loader.c::%!FUNC!::elf_loader_ram_deallocate Exit" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate$fin$0
{
}
#typev loader_c667 53 "%0 [%!LEVEL!] loader.c::%!FUNC!::Unmapping the hash segment for image file: %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate$fin$0
{
ImageInfo->AnsiElfImageFileName.Buffer, ItemString -- 10
}
#typev loader_c657 52 "%0 [%!LEVEL!] loader.c::%!FUNC!::imageInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate$fin$0
{
}
#typev loader_c653 51 "%0 [%!LEVEL!] loader.c::%!FUNC!::elf_loader_ram_deallocate Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=ElfParserInfo FUNC=elf_loader_ram_deallocate$fin$0
{
}
#typev loader_c723 58 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c714 57 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c707 56 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: sizeof(Elf32_Ehdr) is not equal to bytes_read." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c695 55 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header
{
}
#typev loader_c723 58 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c714 57 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image is NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c707 56 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: sizeof(Elf32_Ehdr) is not equal to bytes_read." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c695 55 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_elf_header$fin$0
{
}
#typev loader_c844 68 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c812 67 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c804 66 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c796 65 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c788 64 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c778 63 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c770 62 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c762 61 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c743 60 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Image, cannot read program headers." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c736 59 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers
{
}
#typev loader_c844 68 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c812 67 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c804 66 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c796 65 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_READ failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c788 64 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: EFS_SEEK failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c778 63 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c770 62 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c762 61 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory allocation failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c743 60 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid Image, cannot read program headers." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c736 59 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_loader_read_program_headers()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_loader_read_program_headers$fin$0
{
}
#typev loader_c1640 116 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid type for program header detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_type, ItemLong -- 10
}
#typev loader_c1625 115 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: The file size of the program segment (%10!d!) was greater than the size in memory (%11!d!)." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_filesz, ItemLong -- 10
phdr->p_memsz, ItemLong -- 11
}
#typev loader_c1611 114 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address not zero for relocatable segment. An invalid program segment              physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c1596 113 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address zero for fixed segment. An invalid program segment                  physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c1640 116 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid type for program header detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_type, ItemLong -- 10
}
#typev loader_c1625 115 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: The file size of the program segment (%10!d!) was greater than the size in memory (%11!d!)." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_filesz, ItemLong -- 10
phdr->p_memsz, ItemLong -- 11
}
#typev loader_c1611 114 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address not zero for relocatable segment. An invalid program segment              physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c1596 113 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Physical address zero for fixed segment. An invalid program segment                  physical address of 0x%10!X! was detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_loader_validate_program_header$fin$0
{
phdr->p_paddr, ItemLong -- 10
}
#typev loader_c97 17 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_parser_ddr_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c45 12 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image path string not provided by caller" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c84 16 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_and_map_image() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c75 15 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_open_image_read_headers() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c66 14 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: LoadelfImageRawFile() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c53 13 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory not available." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c36 11 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: parsedImageInfo is NULL!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c29 10 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_parser_ddr_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image
{
}
#typev loader_c97 17 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: elf_parser_ddr_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c45 12 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Image path string not provided by caller" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c84 16 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_load_and_map_image() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c75 15 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: elf_loader_open_image_read_headers() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c66 14 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: LoadelfImageRawFile() failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c53 13 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Memory not available." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c36 11 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: parsedImageInfo is NULL!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c29 10 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: elf_parser_ddr_load_image()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=elf_parser_ddr_load_image$fin$0
{
}
#typev loader_c1570 112 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header
{
}
#typev loader_c1525 108 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF header magic bytes detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
}
#typev loader_c1559 111 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF file version detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
ehdr->e_ident[EI_VERSION], ItemLong -- 10
}
#typev loader_c1548 110 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF data encoding detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
ehdr->e_ident[EI_DATA], ItemLong -- 10
}
#typev loader_c1535 109 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF class detected (must be 32 bit): %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header
{
ehdr->e_ident[EI_CLASS], ItemLong -- 10
}
#typev loader_c1512 107 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header
{
}
#typev loader_c1570 112 "%0 [%!LEVEL!] loader.c::%!FUNC!::Exit: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
}
#typev loader_c1525 108 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF header magic bytes detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
}
#typev loader_c1559 111 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF file version detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
ehdr->e_ident[EI_VERSION], ItemLong -- 10
}
#typev loader_c1548 110 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF data encoding detected: %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
ehdr->e_ident[EI_DATA], ItemLong -- 10
}
#typev loader_c1535 109 "%0 [%!LEVEL!] loader.c::%!FUNC!::Error: Invalid ELF class detected (must be 32 bit): %10!d!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
ehdr->e_ident[EI_CLASS], ItemLong -- 10
}
#typev loader_c1512 107 "%0 [%!LEVEL!] loader.c::%!FUNC!::Entry: validate_elf_header()" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ElfParserInfo FUNC=validate_elf_header$fin$0
{
}
