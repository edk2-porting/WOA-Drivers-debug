// PDB:  qcdiagrouter850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
05f3acb6-301e-3119-4f9d-7c6b7bbcbfa0 QCDiagRouter // SRC=DiagProtocol.c MJ= MN=
#typev DiagProtocol_c901 21 "%0%!FUNC!: Enable HDLC" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Protocol FUNC=diag_enable_hdlc
{
}
#typev DiagProtocol_c893 20 "%0%!FUNC!: Failed to acquire lock DiagRouter_HDLC_Protocol_Update_Lock" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Protocol FUNC=diag_enable_hdlc
{
}
#typev DiagProtocol_c555 16 "%0diag_get_rx_pkt: hdlc decode returned without packet boundary " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Protocol FUNC=diag_get_rx_pkt
{
}
#typev DiagProtocol_c540 14 "%0%!FUNC!: Start DiagErrorRecoveryTimer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Protocol FUNC=diag_get_rx_pkt
{
}
#typev DiagProtocol_c526 13 "%0 %!FUNC!:Enable HDLC" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Protocol FUNC=diag_get_rx_pkt
{
}
#typev DiagProtocol_c517 12 "%0 %!FUNC!:Max bad bytes received are %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Protocol FUNC=diag_get_rx_pkt
{
pDevContext->DiagTransport.MaxBadBytesReceived, ItemLong -- 10
}
#typev DiagProtocol_c510 18 "%0%!FUNC!:Incorrect Non-HDLC header" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Protocol FUNC=diag_get_rx_pkt
{
}
#typev DiagProtocol_c549 15 "%0 %!FUNC!:Received good packet. cancel error recovery" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Protocol FUNC=diag_get_rx_pkt
{
}
#typev DiagProtocol_c510 19 "%0%!FUNC!:Incorrect end byte" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Protocol FUNC=diag_get_rx_pkt
{
}
#typev DiagProtocol_c502 10 "%0DIAGROUTER: Bad RX CRC " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Protocol FUNC=diag_get_rx_pkt
{
}
#typev DiagProtocol_c492 11 "%0%!FUNC!: Failed to acquire lock DiagRouter_HDLC_Protocol_Update_Lock" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Protocol FUNC=diag_get_rx_pkt
{
}
#typev DiagProtocol_c634 17 "%0diag_hdlc_encode: Error in special case. Need memcpy!!! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Protocol FUNC=diag_hdlc_encode
{
}
