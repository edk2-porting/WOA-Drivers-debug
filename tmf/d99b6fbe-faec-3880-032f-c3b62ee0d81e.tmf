// PDB:  qcqdss7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
d99b6fbe-faec-3880-032f-c3b62ee0d81e tgu // SRC=tgu.c MJ= MN=
#typev tgu_c642 38 "%0TGU block is not probed yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_enable_qtf_set_flag
{
}
#typev tgu_c635 37 "%0TGU block context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_enable_qtf_set_flag
{
}
#typev tgu_c642 38 "%0TGU block is not probed yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_enable_qtf_set_flag$fin$0
{
}
#typev tgu_c635 37 "%0TGU block context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_enable_qtf_set_flag$fin$0
{
}
#typev tgu_c603 36 "%0TGU block is not probed yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_enable_reg_set_flag
{
}
#typev tgu_c596 35 "%0TGU block context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_enable_reg_set_flag
{
}
#typev tgu_c603 36 "%0TGU block is not probed yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_enable_reg_set_flag$fin$0
{
}
#typev tgu_c596 35 "%0TGU block context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_enable_reg_set_flag$fin$0
{
}
#typev tgu_c245 19 "%0Invalid TGU condition decode data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_condition_decode
{
}
#typev tgu_c235 18 "%0Failed: Requested TGU condition decode data is not valid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_condition_decode
{
}
#typev tgu_c216 17 "%0!FUNC!: Invalid pUlValue parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_condition_decode
{
}
#typev tgu_c245 19 "%0Invalid TGU condition decode data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_condition_decode$fin$0
{
}
#typev tgu_c235 18 "%0Failed: Requested TGU condition decode data is not valid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_condition_decode$fin$0
{
}
#typev tgu_c216 17 "%0!FUNC!: Invalid pUlValue parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_condition_decode$fin$0
{
}
#typev tgu_c352 24 "%0Invalid TGU conditon select data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_condition_select
{
}
#typev tgu_c342 23 "%0Failed: Requested TGU condition select data is not valid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_condition_select
{
}
#typev tgu_c323 22 "%0!FUNC!: Invalid pUlValue parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_condition_select
{
}
#typev tgu_c352 24 "%0Invalid TGU conditon select data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_condition_select$fin$0
{
}
#typev tgu_c342 23 "%0Failed: Requested TGU condition select data is not valid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_condition_select$fin$0
{
}
#typev tgu_c323 22 "%0!FUNC!: Invalid pUlValue parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_condition_select$fin$0
{
}
#typev tgu_c567 34 "%0Invalid TGU counter data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_counters
{
}
#typev tgu_c557 33 "%0Failed: Requested TGU counter data is not valid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_counters
{
}
#typev tgu_c538 32 "%0!FUNC!: Invalid pUlValue parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_counters
{
}
#typev tgu_c567 34 "%0Invalid TGU counter data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_counters$fin$0
{
}
#typev tgu_c557 33 "%0Failed: Requested TGU counter data is not valid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_counters$fin$0
{
}
#typev tgu_c538 32 "%0!FUNC!: Invalid pUlValue parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_counters$fin$0
{
}
#typev tgu_c138 14 "%0Invalid TGU group data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_group
{
}
#typev tgu_c128 13 "%0Failed: Requested TGU group data is not valid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_group
{
}
#typev tgu_c109 12 "%0!FUNC!: Invalid pUlValue parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_group
{
}
#typev tgu_c138 14 "%0Invalid TGU group data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_group$fin$0
{
}
#typev tgu_c128 13 "%0Failed: Requested TGU group data is not valid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_group$fin$0
{
}
#typev tgu_c109 12 "%0!FUNC!: Invalid pUlValue parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_group$fin$0
{
}
#typev tgu_c460 29 "%0Invalid TGU timer data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_timers
{
}
#typev tgu_c450 28 "%0Failed: Requested timer data is not valid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_timers
{
}
#typev tgu_c431 27 "%0!FUNC!: Invalid pUlValue parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_timers
{
}
#typev tgu_c460 29 "%0Invalid TGU timer data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_timers$fin$0
{
}
#typev tgu_c450 28 "%0Failed: Requested timer data is not valid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_timers$fin$0
{
}
#typev tgu_c431 27 "%0!FUNC!: Invalid pUlValue parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_get_timers$fin$0
{
}
#typev tgu_c866 45 "%0Unable to assign memmory for TGU counter_data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_probe
{
}
#typev tgu_c851 44 "%0Unable to assign memmory for TGU timer_data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_probe
{
}
#typev tgu_c836 43 "%0Unable to assign memmory for TGU condition_select_data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_probe
{
}
#typev tgu_c821 42 "%0Unable to assign memmory for TGU condition_decode_data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_probe
{
}
#typev tgu_c806 41 "%0Unable to assign memmory for TGU Group_data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_probe
{
}
#typev tgu_c789 40 "%0Unable to map TguBaseVirtualAddress" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_probe
{
}
#typev tgu_c779 39 "%0TGU block context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_probe
{
}
#typev tgu_c866 45 "%0Unable to assign memmory for TGU counter_data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_probe$fin$0
{
}
#typev tgu_c851 44 "%0Unable to assign memmory for TGU timer_data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_probe$fin$0
{
}
#typev tgu_c836 43 "%0Unable to assign memmory for TGU condition_select_data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_probe$fin$0
{
}
#typev tgu_c821 42 "%0Unable to assign memmory for TGU condition_decode_data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_probe$fin$0
{
}
#typev tgu_c806 41 "%0Unable to assign memmory for TGU Group_data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_probe$fin$0
{
}
#typev tgu_c789 40 "%0Unable to map TguBaseVirtualAddress" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_probe$fin$0
{
}
#typev tgu_c779 39 "%0TGU block context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_probe$fin$0
{
}
#typev tgu_c182 16 "%0Invalid TGU condition decode data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_condition_decode
{
}
#typev tgu_c168 15 "%0Too many conditions are being configured" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_condition_decode
{
}
#typev tgu_c182 16 "%0Invalid TGU condition decode data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_condition_decode$fin$0
{
}
#typev tgu_c168 15 "%0Too many conditions are being configured" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_condition_decode$fin$0
{
}
#typev tgu_c289 21 "%0Invalid TGU select decode data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_condition_select
{
}
#typev tgu_c275 20 "%0Too many selects are being configured" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_condition_select
{
}
#typev tgu_c289 21 "%0Invalid TGU select decode data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_condition_select$fin$0
{
}
#typev tgu_c275 20 "%0Too many selects are being configured" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_condition_select$fin$0
{
}
#typev tgu_c504 31 "%0Invalid TGU counter decode data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_counters
{
}
#typev tgu_c490 30 "%0Too many counters are being configured" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_counters
{
}
#typev tgu_c504 31 "%0Invalid TGU counter decode data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_counters$fin$0
{
}
#typev tgu_c490 30 "%0Too many counters are being configured" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_counters$fin$0
{
}
#typev tgu_c73 11 "%0Invalid group data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_group
{
}
#typev tgu_c60 10 "%0Too many groups are being configured" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_group
{
}
#typev tgu_c73 11 "%0Invalid group data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_group$fin$0
{
}
#typev tgu_c60 10 "%0Too many groups are being configured" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_group$fin$0
{
}
#typev tgu_c397 26 "%0Invalid TGU timer decode data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_timers
{
}
#typev tgu_c383 25 "%0Too many timers are being configured" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_timers
{
}
#typev tgu_c397 26 "%0Invalid TGU timer decode data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_timers$fin$0
{
}
#typev tgu_c383 25 "%0Too many timers are being configured" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=tgu_set_timers$fin$0
{
}
