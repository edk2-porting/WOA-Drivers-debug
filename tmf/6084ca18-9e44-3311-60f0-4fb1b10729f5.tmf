// PDB:  QcLteCoexMgr7180.pdb
// PDB:  Last Updated :2021-10-17:21:55:10:841 (UTC) [tracepdb]
6084ca18-9e44-3311-60f0-4fb1b10729f5 kmdf // SRC=driver.c MJ= MN=
#typev driver_c58 12 "WLAG_VERBOSE:: driver.c :: %!FUNC! ::--Function Exit--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=WLAG FUNC=DriverEntry
{
}
#typev driver_c55 11 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfWaitLockCreate Failed. status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=DriverEntry
{
status, ItemLong -- 10
}
#typev driver_c47 10 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfDriverCreate returned with status %10!u!l" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=DriverEntry
{
status, ItemLong -- 10
}
// PDB:  QcLteCoexMgr7180.pdb
// PDB:  Last Updated :2021-10-17:21:55:10:841 (UTC) [tracepdb]
#typev driver_c121 16 "WLAG_ERROR:: driver.c :: %!FUNC! ::Invalid Parameters" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagCopyParamFromCollection
{
}
#typev driver_c134 18 "WLAG_ERROR:: driver.c :: %!FUNC! ::Invalid Parameters" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagCopyParamFromCollection
{
}
#typev driver_c153 20 "WLAG_ERROR:: driver.c :: %!FUNC! ::WlagCopyParamFromCollection returned with status %10!u!l" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagCopyParamFromCollection
{
status, ItemLong -- 10
}
#typev driver_c142 19 "WLAG_ERROR:: driver.c :: %!FUNC! ::Invalid Parameters" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagCopyParamFromCollection
{
}
#typev driver_c128 17 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfRequestRetrieveOutputMemory return 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagCopyParamFromCollection
{
status, ItemLong -- 10
}
#typev driver_c492 46 "WLAG_VERBOSE:: driver.c :: %!FUNC! ::--Function Exit--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=WLAG FUNC=WlagEvtD0Exit
{
}
#typev driver_c486 45 "WLAG_ERROR:: driver.c :: %!FUNC! ::gWlagDevice is NULL or wrong gWlagDevice !!!!!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtD0Exit
{
}
#typev driver_c481 44 "WLAG_INFO:: driver.c :: %!FUNC! ::clear gWlagDevice !!!!!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtD0Exit
{
}
#typev driver_c458 43 "WLAG_INFO:: driver.c :: %!FUNC! ::D3 final state transition made - cancel all wlag outstanding Requests" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtD0Exit
{
}
#typev driver_c452 42 "WLAG_INFO:: driver.c :: %!FUNC! ::Wlag Device enters power state %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtD0Exit
{
TargetState, ItemLong -- 10
}
#typev driver_c450 41 "WLAG_VERBOSE:: driver.c :: %!FUNC! ::--Function Enter--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=WLAG FUNC=WlagEvtD0Exit
{
}
#typev driver_c208 23 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfFdoInitQueryPropertyEx failed with status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
status, ItemLong -- 10
}
#typev driver_c265 28 "WLAG_ERROR:: driver.c :: %!FUNC! ::Unsupported device: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
BiosDevName, ItemWString -- 10
}
#typev driver_c425 40 "WLAG_VERBOSE:: driver.c :: %!FUNC! ::--Function Exit--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
}
#typev driver_c416 39 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfDeviceCreateDeviceInterface returned with status %10!u!l" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
status, ItemLong -- 10
}
#typev driver_c388 37 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfWaitLockCreate Failed. status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
status, ItemLong -- 10
}
#typev driver_c378 36 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfCollectionCreate Failed. status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
status, ItemLong -- 10
}
#typev driver_c368 35 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfWorkItemCreate returned with status %10!u!l" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
status, ItemLong -- 10
}
#typev driver_c357 34 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfWaitLockCreate Failed. status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
status, ItemLong -- 10
}
#typev driver_c347 33 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfIoQueueCreate returned with status %10!u!l" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
status, ItemLong -- 10
}
#typev driver_c335 32 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfIoQueueCreate returned with status %10!u!l" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
status, ItemLong -- 10
}
#typev driver_c308 31 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfDeviceCreate returned with status %10!u!l" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
status, ItemLong -- 10
}
#typev driver_c292 30 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfDeviceInitAssignSDDLString returned with status %10!u!l" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
status, ItemLong -- 10
}
#typev driver_c283 29 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfDeviceInitAssignName returned with status %10!u!l" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
status, ItemLong -- 10
}
#typev driver_c258 27 "WLAG_ERROR:: driver.c :: %!FUNC! ::gWlagDevice is not NULL !!!!!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
}
#typev driver_c244 26 "WLAG_INFO:: driver.c :: %!FUNC! ::%10!s! is agent device of wlan thermal mitigation" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
BiosDevName, ItemWString -- 10
}
#typev driver_c230 25 "WLAG_ERROR:: driver.c :: %!FUNC! ::gWcnDevice is not NULL !!!!!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
}
#typev driver_c216 24 "WLAG_INFO:: driver.c :: %!FUNC! ::%10!s! is Wcn thermal sensor device" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
BiosDevName, ItemWString -- 10
}
#typev driver_c204 22 "WLAG_INFO:: driver.c :: %!FUNC! ::bios device name:%10!s!, length:0x%11!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
BiosDevName, ItemWString -- 10
returnSize, ItemLong -- 11
}
#typev driver_c191 21 "WLAG_VERBOSE:: driver.c :: %!FUNC! ::--Function Enter--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=WLAG FUNC=WlagEvtDeviceAdd
{
}
#typev driver_c570 53 "WLAG_VERBOSE:: driver.c :: %!FUNC! ::--Function Exit--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=WLAG FUNC=WlagEvtDeviceFileCreate
{
}
#typev driver_c564 52 "WLAG_ERROR:: driver.c :: %!FUNC! ::Unsupported client !!!!!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtDeviceFileCreate
{
}
#typev driver_c554 51 "WLAG_INFO:: driver.c :: %!FUNC! ::Wlag Target was opened by Wlan" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtDeviceFileCreate
{
}
#typev driver_c544 50 "WLAG_VERBOSE:: driver.c :: %!FUNC! ::--Function Enter--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=WLAG FUNC=WlagEvtDeviceFileCreate
{
}
#typev driver_c592 56 "WLAG_VERBOSE:: driver.c :: %!FUNC! ::--Function Exit--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=WLAG FUNC=WlagEvtFileCleanup
{
}
#typev driver_c588 55 "WLAG_INFO:: driver.c :: %!FUNC! ::Wlag Target was closed by Wlan" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtFileCleanup
{
}
#typev driver_c581 54 "WLAG_VERBOSE:: driver.c :: %!FUNC! ::--Function Enter--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=WLAG FUNC=WlagEvtFileCleanup
{
}
#typev driver_c622 57 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfRequestRetriveInputBuffer failed with status %10!u!l" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
status, ItemLong -- 10
}
#typev driver_c778 77 "WLAG_ERROR:: driver.c :: %!FUNC! ::Invalid IOCTL %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
IoControlCode, ItemLong -- 10
}
#typev driver_c681 63 "WLAG_ERROR:: driver.c :: %!FUNC! ::Invalid Parameter for wlan pending read" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
}
#typev driver_c675 62 "WLAG_ERROR:: driver.c :: %!FUNC! ::Invalid Parameter for wlan pending read" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
}
#typev driver_c669 61 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfRequestForwardToIoQueue returned with status %10!u!l" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
status, ItemLong -- 10
}
#typev driver_c664 60 "WLAG_INFO:: driver.c :: %!FUNC! ::read request queued" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
}
#typev driver_c653 59 "WLAG_ERROR:: driver.c :: %!FUNC! ::WlagCopyParamFromCollection returned with status %10!u!l" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
status, ItemLong -- 10
}
#typev driver_c647 58 "WLAG_INFO:: driver.c :: %!FUNC! ::Completing read request with Param copy size =  %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
(int)retlen, ItemLong -- 10
}
#typev driver_c704 66 "WLAG_ERROR:: driver.c :: %!FUNC! ::Invalid Parameter for WcnSensor Temperature Event" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
}
#typev driver_c697 65 "WLAG_ERROR:: driver.c :: %!FUNC! ::Wcn Sensor Device is not ready" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
}
#typev driver_c692 64 "WLAG_INFO:: driver.c :: %!FUNC! ::Got Wcn Temperature Event from wlan driver" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
}
#typev driver_c723 69 "WLAG_ERROR:: driver.c :: %!FUNC! ::Invalid Parameter for Firmware Assert Event" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
}
#typev driver_c718 68 "WLAG_INFO:: driver.c :: %!FUNC! ::Got Firmware Assert Event from wlan driver" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
}
#typev driver_c715 67 "WLAG_INFO:: driver.c :: %!FUNC! ::Setting Wlag PState to P0 state due to Firmware Assert" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
}
#typev driver_c751 73 "WLAG_ERROR:: driver.c :: %!FUNC! ::Invalid Parameter for WOW Event" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
}
#typev driver_c745 72 "WLAG_INFO:: driver.c :: %!FUNC! ::Wrong state for WOW Event from wlan driver" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
}
#typev driver_c740 71 "WLAG_INFO:: driver.c :: %!FUNC! ::Setting Wlag PState to P1 state due to WOW" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
}
#typev driver_c735 70 "WLAG_INFO:: driver.c :: %!FUNC! ::Setting Wlag PState to P0 state due to WOW" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
}
#typev driver_c765 75 "WLAG_ERROR:: driver.c :: %!FUNC! ::Invalid Parameter for WOW Event" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
}
#typev driver_c761 74 "WLAG_ERROR:: driver.c :: %!FUNC! ::Request PStatus %10!d!, result 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
pWlagParam->PStatus, ItemLong -- 10
status, ItemLong -- 11
}
#typev driver_c771 76 "WLAG_ERROR:: driver.c :: %!FUNC! ::Unsupport Parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtIoDeviceControl
{
}
#typev driver_c528 49 "WLAG_VERBOSE:: driver.c :: %!FUNC! ::--Function Exit--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=WLAG FUNC=WlagEvtPrepareHardware
{
}
#typev driver_c518 48 "WLAG_ERROR:: driver.c :: %!FUNC! ::WdfDeviceWdmAssignPowerFrameworkSettings return 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtPrepareHardware
{
status, ItemLong -- 10
}
#typev driver_c509 47 "WLAG_VERBOSE:: driver.c :: %!FUNC! ::--Function Enter--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=WLAG FUNC=WlagEvtPrepareHardware
{
}
#typev driver_c97 15 "WLAG_INFO:: driver.c :: %!FUNC! ::All requests are serviced" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtReadRequestWICB
{
}
#typev driver_c89 14 "WLAG_ERROR:: driver.c :: %!FUNC! ::WlagCopyParamFromCollection returned with status %10!u!l" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=WLAG FUNC=WlagEvtReadRequestWICB
{
status, ItemLong -- 10
}
#typev driver_c85 13 "WLAG_INFO:: driver.c :: %!FUNC! ::Completing queued read request with copy size = %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=WLAG FUNC=WlagEvtReadRequestWICB
{
(ULONG)retlen, ItemLong -- 10
}
