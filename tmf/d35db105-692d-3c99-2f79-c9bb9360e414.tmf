// PDB:  qcpep850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
d35db105-692d-3c99-2f79-c9bb9360e414 Tsens // SRC=TsensDevice.c MJ= MN=
#typev TsensDevice_c1227 69 "%0TsensDevice.c::%!FUNC! sensor %10!u! is calibrated" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=Tsens_CheckCalibration
{
uSensor, ItemLong -- 10
}
#typev TsensDevice_c1223 68 "%0TsensDevice.c::%!FUNC! sensor is dead" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_CheckCalibration
{
}
#typev TsensDevice_c1214 67 "%0TsensDevice.c::%!FUNC! invalid parameter uSensor" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_CheckCalibration
{
}
#typev TsensDevice_c1208 66 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_CheckCalibration
{
}
#typev TsensDevice_c1204 65 "%0TsensDevice.c::%!FUNC! sensor %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=Tsens_CheckCalibration
{
uSensor, ItemLong -- 10
}
#typev TsensDevice_c1149 60 "%0TsensDevice.c::%!FUNC! num sensors: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=Tsens_GetNumSensors
{
*puNumSensors, ItemLong -- 10
}
#typev TsensDevice_c1143 59 "%0TsensDevice.c::%!FUNC! invalid parameter pnNumSensors" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_GetNumSensors
{
}
#typev TsensDevice_c1137 58 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_GetNumSensors
{
}
#typev TsensDevice_c1133 57 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=Tsens_GetNumSensors
{
}
#typev TsensDevice_c861 38 "%0TsensDevice.c::%!FUNC! sensor %10!u! reports temp %11!d! deci deg C" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=Tsens_GetTemp
{
uSensor, ItemLong -- 10
*pnDeciDegC, ItemLong -- 11
}
#typev TsensDevice_c855 37 "%0TsensDevice.c::%!FUNC! sensor is dead" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_GetTemp
{
}
#typev TsensDevice_c836 36 "%0TsensDevice.c::%!FUNC! invalid parameter pnDeciDegC" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_GetTemp
{
}
#typev TsensDevice_c830 35 "%0TsensDevice.c::%!FUNC! invalid parameter uSensor" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_GetTemp
{
}
#typev TsensDevice_c824 34 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_GetTemp
{
}
#typev TsensDevice_c820 33 "%0TsensDevice.c::%!FUNC! sensor: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=Tsens_GetTemp
{
uSensor, ItemLong -- 10
}
#typev TsensDevice_c534 20 "%0TsensDevice.c::%!FUNC! controller %10!u!, channel %11!u!, temp %12!d! deci deg C" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=Tsens_GetTempInternal
{
uController, ItemLong -- 10
uChannel, ItemLong -- 11
*pnDeciDegC, ItemLong -- 12
}
#typev TsensDevice_c954 48 "%0TsensDevice.c::%!FUNC! sensor %10!u!, min temp %11!d! deci deg C, max temp %12!d! deci deg C" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=Tsens_GetTempRange
{
uSensor, ItemLong -- 10
*pnMinDeciDegC, ItemLong -- 11
*pnMaxDeciDegC, ItemLong -- 12
}
#typev TsensDevice_c947 47 "%0TsensDevice.c::%!FUNC! sensor is dead" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_GetTempRange
{
}
#typev TsensDevice_c938 46 "%0TsensDevice.c::%!FUNC! invalid parameter pnMaxDeciDegC" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_GetTempRange
{
}
#typev TsensDevice_c932 45 "%0TsensDevice.c::%!FUNC! invalid parameter pnMinDeciDegC" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_GetTempRange
{
}
#typev TsensDevice_c926 44 "%0TsensDevice.c::%!FUNC! invalid parameter uSensor" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_GetTempRange
{
}
#typev TsensDevice_c920 43 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_GetTempRange
{
}
#typev TsensDevice_c916 42 "%0TsensDevice.c::%!FUNC! sensor: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=Tsens_GetTempRange
{
uSensor, ItemLong -- 10
}
#typev TsensDevice_c1011 51 "%0TsensDevice.c::%!FUNC! failed to map memory for Tsens SROT registers: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_Init
{
status, ItemNTSTATUS -- 10
}
#typev TsensDevice_c1008 10 "%0TsensDevice.c::%!FUNC! invalid parameter virtAddress" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_Init
{
}
#typev TsensDevice_c1018 52 "%0TsensDevice.c::%!FUNC! failed to map memory for Tsens TM registers: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_Init
{
status, ItemNTSTATUS -- 10
}
#typev TsensDevice_c1015 10 "%0TsensDevice.c::%!FUNC! invalid parameter virtAddress" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_Init
{
}
#typev TsensDevice_c1043 54 "%0TsensDevice.c::%!FUNC! failed to create Tsens INT spin lock: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_Init
{
status, ItemNTSTATUS -- 10
}
#typev TsensDevice_c1033 53 "%0TsensDevice.c::%!FUNC! failed to create Tsens spin lock: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_Init
{
status, ItemNTSTATUS -- 10
}
#typev TsensDevice_c989 50 "%0TsensDevice.c::%!FUNC! WDFDEVICE is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_Init
{
}
#typev TsensDevice_c976 49 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=Tsens_Init
{
}
#typev TsensDevice_c277 11 "%0TsensDevice.c::%!FUNC! failed to create Tsens low high interrupt: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_InitControllers
{
status, ItemNTSTATUS -- 10
}
#typev TsensDevice_c348 18 "%0TsensDevice.c::%!FUNC! TSENS: Start of TM dump for controller %10!u!, iteration %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_LogDump
{
uController, ItemLong -- 10
i, ItemLong -- 11
}
#typev TsensDevice_c340 17 "%0TsensDevice.c::%!FUNC! TSENS: Start of SROT dump for controller %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_LogDump
{
uController, ItemLong -- 10
}
#typev TsensDevice_c333 16 "%0TsensDevice.c::%!FUNC! TSENS: ctrl: %10!u!, bus-id: %11!u!, value: 0x%12!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_LogDump
{
uController, ItemLong -- 10
i, ItemLong -- 11
uVal, ItemLong -- 12
}
#typev TsensDevice_c325 15 "%0TsensDevice.c::%!FUNC! TSENS: Log dump for controller %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_LogDump
{
uController, ItemLong -- 10
}
#typev TsensDevice_c323 14 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=Tsens_LogDump
{
}
#typev TsensDevice_c310 13 "%0TsensDevice.c::%!FUNC! TSENS: ctrl: %10!u! 0x%11!08x! | 0x%12!08x! 0x%13!08x! 0x%14!08x! 0x%15!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_LogRegisters
{
uController, ItemLong -- 10
uStartOffset, ItemLong -- 11
a, ItemLong -- 12
b, ItemLong -- 13
c, ItemLong -- 14
d, ItemLong -- 15
}
#typev TsensDevice_c296 12 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=Tsens_LogRegisters
{
}
#typev TsensDevice_c1107 56 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=Tsens_ReInit
{
}
#typev TsensDevice_c1175 64 "%0TsensDevice.c::%!FUNC! invalid parameter bClientEnabled" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_SetEnableThresholds
{
}
#typev TsensDevice_c1163 62 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_SetEnableThresholds
{
}
#typev TsensDevice_c1159 61 "%0TsensDevice.c::%!FUNC! eClient=%10!d!, bClientEnabled=%11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=Tsens_SetEnableThresholds
{
(INT32)eClient, ItemLong -- 10
(UINT32)bClientEnabled, ItemLong -- 11
}
#typev TsensDevice_c745 28 "%0TsensDevice.c::%!FUNC! invalid parameter eClient" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_SetThreshold
{
}
#typev TsensDevice_c757 30 "%0TsensDevice.c::%!FUNC! invalid parameter eThreshold" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_SetThreshold
{
}
#typev TsensDevice_c772 32 "%0TsensDevice.c::%!FUNC! sensor is dead" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_SetThreshold
{
}
#typev TsensDevice_c763 31 "%0TsensDevice.c::%!FUNC! invalid parameter nDeciDegC" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_SetThreshold
{
}
#typev TsensDevice_c751 29 "%0TsensDevice.c::%!FUNC! invalid parameter uSensor" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_SetThreshold
{
}
#typev TsensDevice_c739 27 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=Tsens_SetThreshold
{
}
#typev TsensDevice_c731 26 "%0TsensDevice.c::%!FUNC! client %10!u!, sensor %11!u!, threshold %12!u!, temp %13!d! deci deg C" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=Tsens_SetThreshold
{
(UINT32)eClient, ItemLong -- 10
uSensor, ItemLong -- 11
(UINT32)eThreshold, ItemLong -- 12
nDeciDegC, ItemLong -- 13
}
#typev TsensDevice_c680 25 "%0TsensDevice.c::%!FUNC! upper threshold, client %10!u!, sensor %11!u!, sensor temp %12!d! deci deg C, threshold temp %13!d! deci deg C" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=Tsens_ThresholdInterruptDpc
{
uClient, ItemLong -- 10
uSensor, ItemLong -- 11
nDeciDegC, ItemLong -- 12
pThreshold->nThresholdDeciDegC, ItemLong -- 13
}
#typev TsensDevice_c660 24 "%0TsensDevice.c::%!FUNC! upper threshold, client %10!u!, sensor %11!u!, sensor temp %12!d! deci deg C, threshold temp %13!d! deci deg C" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=Tsens_ThresholdInterruptDpc
{
uClient, ItemLong -- 10
uSensor, ItemLong -- 11
nDeciDegC, ItemLong -- 12
pThreshold->nThresholdDeciDegC, ItemLong -- 13
}
#typev TsensDevice_c638 23 "%0TsensDevice.c::%!FUNC! upper threshold, client %10!u!, sensor %11!u!, sensor temp %12!d! deci deg C, threshold temp %13!d! deci deg C" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=Tsens_ThresholdInterruptDpc
{
uClient, ItemLong -- 10
uSensor, ItemLong -- 11
nDeciDegC, ItemLong -- 12
pThreshold->nThresholdDeciDegC, ItemLong -- 13
}
#typev TsensDevice_c598 22 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=Tsens_ThresholdInterruptDpc
{
}
#typev TsensDevice_c553 21 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=Tsens_ThresholdInterruptIsr
{
}
#typev TsensDevice_c371 19 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=Tsens_UpdateThresholds
{
}
// PDB:  qcpep850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev PEPTsensTest_c237 60 "%0TsensDevice.c::%!FUNC! num sensors: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=TSensTest_CheckCalibration
{
*puNumSensors, ItemLong -- 10
}
#typev PEPTsensTest_c237 58 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_CheckCalibration
{
}
#typev PEPTsensTest_c237 57 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=TSensTest_CheckCalibration
{
}
#typev PEPTsensTest_c525 60 "%0TsensDevice.c::%!FUNC! num sensors: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=TSensTest_EnableDisableThreshold
{
*puNumSensors, ItemLong -- 10
}
#typev PEPTsensTest_c525 58 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_EnableDisableThreshold
{
}
#typev PEPTsensTest_c525 57 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=TSensTest_EnableDisableThreshold
{
}
#typev PEPTsensTest_c961 60 "%0TsensDevice.c::%!FUNC! num sensors: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=TSensTest_EnableDisablesetThreshold
{
*puNumSensors, ItemLong -- 10
}
#typev PEPTsensTest_c961 58 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_EnableDisablesetThreshold
{
}
#typev PEPTsensTest_c961 57 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=TSensTest_EnableDisablesetThreshold
{
}
#typev PEPTsensTest_c195 60 "%0TsensDevice.c::%!FUNC! num sensors: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=TSensTest_GetNumSensors
{
*puNumSensors, ItemLong -- 10
}
#typev PEPTsensTest_c195 58 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_GetNumSensors
{
}
#typev PEPTsensTest_c195 57 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=TSensTest_GetNumSensors
{
}
#typev PEPTsensTest_c409 60 "%0TsensDevice.c::%!FUNC! num sensors: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=TSensTest_GetTemp
{
*puNumSensors, ItemLong -- 10
}
#typev PEPTsensTest_c409 58 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_GetTemp
{
}
#typev PEPTsensTest_c409 57 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=TSensTest_GetTemp
{
}
#typev PEPTsensTest_c1128 60 "%0TsensDevice.c::%!FUNC! num sensors: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=TSensTest_GetTempAdversarial
{
*puNumSensors, ItemLong -- 10
}
#typev PEPTsensTest_c1128 58 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_GetTempAdversarial
{
}
#typev PEPTsensTest_c1128 57 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=TSensTest_GetTempAdversarial
{
}
#typev PEPTsensTest_c300 60 "%0TsensDevice.c::%!FUNC! num sensors: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=TSensTest_GetTempRange
{
*puNumSensors, ItemLong -- 10
}
#typev PEPTsensTest_c300 58 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_GetTempRange
{
}
#typev PEPTsensTest_c300 57 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=TSensTest_GetTempRange
{
}
#typev PEPTsensTest_c1324 46 "%0TsensDevice.c::%!FUNC! invalid parameter pnMaxDeciDegC" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_GetTempRangeAdversarial
{
}
#typev PEPTsensTest_c1324 44 "%0TsensDevice.c::%!FUNC! invalid parameter uSensor" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_GetTempRangeAdversarial
{
}
#typev PEPTsensTest_c1307 45 "%0TsensDevice.c::%!FUNC! invalid parameter pnMinDeciDegC" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_GetTempRangeAdversarial
{
}
#typev PEPTsensTest_c1307 44 "%0TsensDevice.c::%!FUNC! invalid parameter uSensor" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_GetTempRangeAdversarial
{
}
#typev PEPTsensTest_c1324 43 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_GetTempRangeAdversarial
{
}
#typev PEPTsensTest_c1324 42 "%0TsensDevice.c::%!FUNC! sensor: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=TSensTest_GetTempRangeAdversarial
{
uSensor, ItemLong -- 10
}
#typev PEPTsensTest_c1307 43 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_GetTempRangeAdversarial
{
}
#typev PEPTsensTest_c1307 42 "%0TsensDevice.c::%!FUNC! sensor: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=TSensTest_GetTempRangeAdversarial
{
uSensor, ItemLong -- 10
}
#typev PEPTsensTest_c1246 60 "%0TsensDevice.c::%!FUNC! num sensors: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=TSensTest_GetTempRangeAdversarial
{
*puNumSensors, ItemLong -- 10
}
#typev PEPTsensTest_c1246 58 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_GetTempRangeAdversarial
{
}
#typev PEPTsensTest_c1246 57 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=TSensTest_GetTempRangeAdversarial
{
}
#typev PEPTsensTest_c750 60 "%0TsensDevice.c::%!FUNC! num sensors: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=TSensTest_SetHighThreshold0
{
*puNumSensors, ItemLong -- 10
}
#typev PEPTsensTest_c750 58 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_SetHighThreshold0
{
}
#typev PEPTsensTest_c750 57 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=TSensTest_SetHighThreshold0
{
}
#typev PEPTsensTest_c606 60 "%0TsensDevice.c::%!FUNC! num sensors: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_LOG FUNC=TSensTest_SetLowThreshold0
{
*puNumSensors, ItemLong -- 10
}
#typev PEPTsensTest_c606 58 "%0TsensDevice.c::%!FUNC! Tsens is not initialized" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TSENS_LOG FUNC=TSensTest_SetLowThreshold0
{
}
#typev PEPTsensTest_c606 57 "%0TsensDevice.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TSENS_ENTRY_EXIT FUNC=TSensTest_SetLowThreshold0
{
}
