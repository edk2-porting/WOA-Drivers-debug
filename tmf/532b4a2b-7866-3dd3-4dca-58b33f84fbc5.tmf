// PDB:  qcrmnetbridge850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
532b4a2b-7866-3dd3-4dca-58b33f84fbc5 10.4 // SRC=rmnbrgglink.c MJ= MN=
#typev rmnbrgdevice_c117 10 "%0rmnbrgglink.c::%!FUNC! Error registering PluPlayNotification for USB RMNET interface" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgEvtDeviceSelfManagedIoInit
{
}
// PDB:  qcrmnetbridge850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev rmnbrgdevice_c219 19 "%0rmnbrgglink.c::%!FUNC! Error in device context %10!p! and/or cntl Iface" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgNotifyInterfaceUp
{
deviceContext, ItemPtr -- 10
}
#typev rmnbrgdevice_c219 20 "%0rmnbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgNotifyInterfaceUp
{
}
#typev rmnbrgdevice_c219 18 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgNotifyInterfaceUp
{
}
// PDB:  qcrmnetbridge850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev rmnbrgglink_c1491 137 "%0rmnbrgglink.c::%!FUNC! pGlinkRxRequest=%10!p! or pDeviceContext=%11!p! is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkCntlRxReturnBuffer
{
pGlinkRxRequest, ItemPtr -- 10
pDeviceContext, ItemPtr -- 11
}
#typev rmnbrgglink_c1510 139 "%0rmnbrgglink.c::%!FUNC! GLinkRxDone failed. Modem not up" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkCntlRxReturnBuffer
{
}
#typev rmnbrgglink_c1504 138 "%0rmnbrgglink.c::%!FUNC! GLinkRxDone failed with err %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkCntlRxReturnBuffer
{
pGlinkRequestStatus, ItemLong -- 10
}
#typev rmnbrgglink_c826 77 "%0rmnbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkCntlTxRecycleRequest
{
}
#typev rmnbrgglink_c797 74 "%0rmnbrgglink.c::%!FUNC!-- Error: Invalid Device Context %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkCntlTxRecycleRequest
{
pDeviceContext, ItemPtr -- 10
}
#typev rmnbrgglink_c821 76 "%0rmnbrgglink.c::%!FUNC! Fail: WdfCollectionAdd status=0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkCntlTxRecycleRequest
{
ntStatus, ItemLong -- 10
}
#typev rmnbrgglink_c812 75 "%0rmnbrgglink.c::%!FUNC! Fail: WdfRequestReuse status=0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkCntlTxRecycleRequest
{
ntStatus, ItemLong -- 10
}
#typev rmnbrgglink_c793 73 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkCntlTxRecycleRequest
{
}
#typev rmnbrgglink_c1450 130 "%0rmnbrgglink.c::%!FUNC!:=> Control line state changed but DTR/DSR/RTS/CTS did not change. prev state=0x%10!x!, curr state=0x%11!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkControlLineChange
{
prevState, ItemLong -- 10
currState, ItemLong -- 11
}
#typev rmnbrgglink_c1434 129 "%0rmnbrgglink.c::%!FUNC!:=> Control line state changed RTS-CTS change. prev state=0x%10!x!, curr state=0x%11!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkControlLineChange
{
prevState, ItemLong -- 10
currState, ItemLong -- 11
}
#typev rmnbrgglink_c1417 128 "%0rmnbrgglink.c::%!FUNC!:=> Control line state changed DTR-DSR change. prev state=0x%10!x!, curr state=0x%11!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkControlLineChange
{
prevState, ItemLong -- 10
currState, ItemLong -- 11
}
#typev rmnbrgglink_c1410 127 "%0rmnbrgglink.c::%!FUNC! :=> Failed to get remote signal state err=%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkControlLineChange
{
glinkRequestStatus, ItemLong -- 10
}
#typev rmnbrgglink_c1399 126 "%0rmnbrgglink.c::%!FUNC!:=> Error: device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkControlLineChange
{
}
#typev rmnbrgglink_c1177 105 "%0rmnbrgglink.c::%!FUNC! Error in device context %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkCtrlLinkStateNotifCb
{
deviceContext, ItemPtr -- 10
}
#typev rmnbrgglink_c1193 108 "%0rmnbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkCtrlLinkStateNotifCb
{
}
#typev rmnbrgglink_c1189 107 "%0rmnbrgglink.c::%!FUNC!:=> Glink transport state down" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkCtrlLinkStateNotifCb
{
}
#typev rmnbrgglink_c1184 106 "%0rmnbrgglink.c::%!FUNC!:=> Glink transport state up." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkCtrlLinkStateNotifCb
{
}
#typev rmnbrgglink_c1168 104 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkCtrlLinkStateNotifCb
{
}
#typev rmnbrgglink_c1465 133 "%0rmnbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkRemoteReceiveIntentNotify
{
}
#typev rmnbrgglink_c1464 132 "%0rmnbrgglink.c::%!FUNC!:=> Remote end queued an intent of size=%10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkRemoteReceiveIntentNotify
{
(int)size, ItemLong -- 10
}
#typev rmnbrgglink_c1463 131 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkRemoteReceiveIntentNotify
{
}
#typev rmnbrgglink_c1479 136 "%0rmnbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkRemoteReceiveIntentRequestNotify
{
}
#typev rmnbrgglink_c1478 135 "%0rmnbrgglink.c::%!FUNC!:=> Remote end requested to queue an intent of size=%10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkRemoteReceiveIntentRequestNotify
{
(int)size, ItemLong -- 10
}
#typev rmnbrgglink_c1477 134 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=GlinkRemoteReceiveIntentRequestNotify
{
}
#typev rmnbrgglink_c1217 110 "%0rmnbrgglink.c::%!FUNC! Error in device context %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlChnlStateChange
{
deviceContext, ItemPtr -- 10
}
#typev rmnbrgglink_c1241 115 "%0rmnbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlChnlStateChange
{
}
#typev rmnbrgglink_c1238 114 "%0rmnbrgglink.c::%!FUNC!:=> Unknown Glink channel state change event=%10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlChnlStateChange
{
chnlEvent, ItemLong -- 10
}
#typev rmnbrgglink_c1234 113 "%0rmnbrgglink.c::%!FUNC!:=> Glink local end disconnected. glink_close() called" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlChnlStateChange
{
}
#typev rmnbrgglink_c1229 112 "%0rmnbrgglink.c::%!FUNC!:=> Glink remote end modem connected" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlChnlStateChange
{
}
#typev rmnbrgglink_c1224 111 "%0rmnbrgglink.c::%!FUNC!:=> Glink remote end modem disconnected" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlChnlStateChange
{
}
#typev rmnbrgglink_c1208 109 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlChnlStateChange
{
}
#typev rmnbrgglink_c545 53 "%0rmnbrgglink.c::%!FUNC! pkt_priv %10!p! or priv %11!p! contains invalid data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxComplete
{
pkt_priv, ItemPtr -- 10
priv, ItemPtr -- 11
}
#typev rmnbrgglink_c627 60 "%0rmnbrgglink.c::%!FUNC! Wrote to Usb %10!d! bytes" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxComplete
{
(int)size, ItemLong -- 10
}
#typev rmnbrgglink_c623 59 "%0rmnbrgglink.c::%!FUNC! Cannot write to USB.  Failed with status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxComplete
{
WdfRequestGetStatus(Request), ItemLong -- 10
}
#typev rmnbrgglink_c616 58 "%0rmnbrgglink.c::%!FUNC! Format Request for IOCTL_USB_SEND_RESPONSE failed with status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxComplete
{
status, ItemLong -- 10
}
#typev rmnbrgglink_c597 57 "%0rmnbrgglink.c::%!FUNC! WdfRequestReuse failed with status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxComplete
{
status, ItemLong -- 10
}
#typev rmnbrgglink_c575 56 "%0rmnbrgglink.c::%!FUNC! copy failed with err: %10!d!, size: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxComplete
{
err, ItemLong -- 10
(int)size, ItemLong -- 11
}
#typev rmnbrgglink_c566 55 "%0rmnbrgglink.c::%!FUNC! Invalid data from Glink" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxComplete
{
}
#typev rmnbrgglink_c636 61 "%0rmnbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxComplete
{
}
#typev rmnbrgglink_c557 54 "%0rmnbrgglink.c::%!FUNC! Dropping QMI data from GLink" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxComplete
{
}
#typev rmnbrgglink_c541 52 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxComplete
{
}
#typev rmnbrgglink_c461 46 "%0rmnbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxInitializeRequests
{
}
#typev rmnbrgglink_c398 42 "%0rmnbrgglink.c::%!FUNC! Error in device context %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxInitializeRequests
{
deviceContext, ItemPtr -- 10
}
#typev rmnbrgglink_c413 43 "%0rmnbrgglink.c::%!FUNC! Failed to retrieve request 0x%10!x!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxInitializeRequests
{
status, ItemLong -- 10
}
#typev rmnbrgglink_c441 45 "%0rmnbrgglink.c::%!FUNC! :=> Rx request creation failed. Insufficient memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxInitializeRequests
{
}
#typev rmnbrgglink_c433 44 "%0rmnbrgglink.c::%!FUNC! creating WdfMemory failed with status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxInitializeRequests
{
status, ItemLong -- 10
}
#typev rmnbrgglink_c394 41 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxInitializeRequests
{
}
#typev rmnbrgglink_c1320 121 "%0rmnbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxQueueIntents
{
}
#typev rmnbrgglink_c1304 119 "%0rmnbrgglink.c::%!FUNC!:=> List is empty. No Rx request available" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxQueueIntents
{
}
#typev rmnbrgglink_c1314 120 "%0rmnbrgglink.c::%!FUNC! :=> Failed to queue receive intent status:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxQueueIntents
{
glinkRequeststatus, ItemLong -- 10
}
#typev rmnbrgglink_c1291 118 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxQueueIntents
{
}
#typev rmnbrgglink_c1022 92 "%0rmnbrgglink.c::%!FUNC! Error in device context %10!p! or cntl iface" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxRemoveRequests
{
pDeviceContext, ItemPtr -- 10
}
#typev rmnbrgglink_c1046 93 "%0rmnbrgglink.c::%!FUNC! Purge RmnbrgRxGlinkList. numUsbCntlRxReq=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlRxRemoveRequests
{
numUsbCntlRxReq, ItemLong -- 10
}
#typev rmnbrgglink_c1372 125 "%0rmnbrgglink.c::%!FUNC!:=> Failed to set local signal state err=%10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlSetSignalState
{
status, ItemLong -- 10
}
#typev rmnbrgglink_c1368 124 "%0rmnbrgglink.c::%!FUNC! :=> Wrote to GLINK signal = 0x%10!x!, state = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlSetSignalState
{
signalValue, ItemLong -- 10
bState, ItemLong -- 11
}
#typev rmnbrgglink_c1352 123 "%0rmnbrgglink.c::%!FUNC! :=> Get local GLINK signal = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlSetSignalState
{
signalValue, ItemLong -- 10
}
#typev rmnbrgglink_c1347 122 "%0rmnbrgglink.c::%!FUNC!:=> Failed to get local signal state err=%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlSetSignalState
{
status, ItemLong -- 10
}
#typev rmnbrgglink_c684 65 "%0rmnbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxComplete
{
}
#typev rmnbrgglink_c665 64 "%0rmnbrgglink.c::%!FUNC! Wrote to Glink %10!d! bytes" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxComplete
{
(int)size, ItemLong -- 10
}
#typev rmnbrgglink_c661 63 "%0rmnbrgglink.c::%!FUNC! pkt_priv contains invalid data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxComplete
{
}
#typev rmnbrgglink_c657 62 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxComplete
{
}
#typev rmnbrgglink_c1076 95 "%0rmnbrgglink.c::%!FUNC!-- Error: Invalid Device Context %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxHandleRequest
{
deviceContext, ItemPtr -- 10
}
#typev rmnbrgglink_c1158 103 "%0rmnbrgglink.c::%!FUNC!-- status=%10!d!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxHandleRequest
{
glinkRequestStatus, ItemLong -- 10
}
#typev rmnbrgglink_c1154 102 "%0rmnbrgglink.c::%!FUNC!-- Error: GLinkTx failed. Modem not up" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxHandleRequest
{
}
#typev rmnbrgglink_c1149 101 "%0rmnbrgglink.c::%!FUNC!-- Error: GlinkTx failed status=%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxHandleRequest
{
glinkRequestStatus, ItemLong -- 10
}
#typev rmnbrgglink_c1127 100 "%0rmnbrgglink.c::%!FUNC!-- Fail: Enable DataIf pipes status=0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxHandleRequest
{
status, ItemLong -- 10
}
#typev rmnbrgglink_c1117 99 "%0rmnbrgglink.c::%!FUNC!-- Error: Drop pkt. DPM not ready" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxHandleRequest
{
}
#typev rmnbrgglink_c1110 98 "%0rmnbrgglink.c::%!FUNC!-- Error: Bad Request" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxHandleRequest
{
}
#typev rmnbrgglink_c1092 97 "%0rmnbrgglink.c::%!FUNC! Request status = 0x%10!x!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxHandleRequest
{
status, ItemLong -- 10
}
#typev rmnbrgglink_c1087 96 "%0rmnbrgglink.c::%!FUNC!-- Error: Drop pkt. Modem unavailable" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxHandleRequest
{
}
#typev rmnbrgglink_c1070 94 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxHandleRequest
{
}
#typev rmnbrgglink_c378 40 "%0rmnbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxInitializeRequests
{
}
#typev rmnbrgglink_c311 35 "%0rmnbrgglink.c::%!FUNC! Error in device context %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxInitializeRequests
{
deviceContext, ItemPtr -- 10
}
#typev rmnbrgglink_c363 39 "%0rmnbrgglink.c::%!FUNC! :=> Tx request creation failed. Insufficient memory" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxInitializeRequests
{
}
#typev rmnbrgglink_c354 38 "%0rmnbrgglink.c::%!FUNC! WdfCollectionAdd failed with status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxInitializeRequests
{
status, ItemLong -- 10
}
#typev rmnbrgglink_c346 37 "%0rmnbrgglink.c::%!FUNC! creating WdfMemory failed with status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxInitializeRequests
{
status, ItemLong -- 10
}
#typev rmnbrgglink_c328 36 "%0rmnbrgglink.c::%!FUNC! Failed to create WdfRequest with status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxInitializeRequests
{
status, ItemLong -- 10
}
#typev rmnbrgglink_c307 34 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxInitializeRequests
{
}
#typev rmnbrgglink_c983 90 "%0rmnbrgglink.c::%!FUNC! Error in device context %10!p! or cntl iface" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxRemoveRequests
{
pDeviceContext, ItemPtr -- 10
}
#typev rmnbrgglink_c1006 91 "%0rmnbrgglink.c::%!FUNC! Purge RmnbrgCntlTxCollection. numUsbCntlTxReq=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkCntlTxRemoveRequests
{
numUsbCntlTxReq, ItemLong -- 10
}
#typev rmnbrgglink_c252 30 "%0rmnbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkIfNotificationCb
{
}
#typev rmnbrgglink_c247 29 "%0rmnbrgglink.c::%!FUNC! RegisterPnPNotifiction Remove" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkIfNotificationCb
{
}
#typev rmnbrgglink_c228 28 "%0rmnbrgglink.c::%!FUNC! Invalid device context" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkIfNotificationCb
{
}
#typev rmnbrgglink_c224 27 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkIfNotificationCb
{
}
#typev rmnbrgglink_c107 17 "%0rmnbrgglink.c::%!FUNC! Error creating LockRmnbrgCntlRxList Spinlock" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkInitialize
{
}
#typev rmnbrgglink_c101 16 "%0rmnbrgglink.c::%!FUNC! Error creating LockRmnbrgCntlTxCollection Spinlock" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkInitialize
{
}
#typev rmnbrgglink_c92 15 "%0rmnbrgglink.c::%!FUNC! Error RmnbrgCntlTxCollection" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkInitialize
{
}
#typev rmnbrgglink_c86 14 "%0rmnbrgglink.c::%!FUNC! Error creating CntlIface IO Target" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkInitialize
{
}
#typev rmnbrgglink_c74 13 "%0rmnbrgglink.c::%!FUNC! Error initializing Qmi context" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkInitialize
{
}
// PDB:  qcrmnetbridge850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev rmnbrgglink_c63 12 "%0rmnbrgglink.c::%!FUNC! Error creating cntl iface %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkInitialize
{
pCntlIface, ItemPtr -- 10
}
#typev rmnbrgglink_c55 11 "%0rmnbrgglink.c::%!FUNC! Error in device context %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkInitialize
{
pDeviceContext, ItemPtr -- 10
}
#typev rmnbrgglink_c167 22 "%0rmnbrgglink.c::%!FUNC! Error in device context %10!p! and/or cntl Iface" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemActivate
{
deviceContext, ItemPtr -- 10
}
#typev rmnbrgglink_c208 26 "%0rmnbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemActivate
{
}
#typev rmnbrgglink_c204 25 "%0rmnbrgglink.c::%!FUNC! CreateSystemThread failed with status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemActivate
{
status, ItemLong -- 10
}
#typev rmnbrgglink_c187 24 "%0rmnbrgglink.c::%!FUNC! Fail: Queue Rx intents to Glink. err=0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemActivate
{
pGlinkRequestStatus, ItemLong -- 10
}
#typev rmnbrgglink_c181 23 "%0rmnbrgglink.c::%!FUNC! Modem online. bIsModemUp=%10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemActivate
{
RmnbrgGlinkIsModemUp(deviceContext), ItemLong -- 10
}
#typev rmnbrgglink_c163 21 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemActivate
{
}
#typev rmnbrgglink_c853 79 "%0rmnbrgglink.c::%!FUNC! Error in device context %10!p! and/or cntl Iface %11!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemEventHandler
{
deviceContext, ItemPtr -- 10
deviceContext->pRmnbrgCntlIface, ItemPtr -- 11
}
#typev rmnbrgglink_c968 89 "%0rmnbrgglink.c::%!FUNC! Unknown event 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemEventHandler
{
status, ItemLong -- 10
}
#typev rmnbrgglink_c962 88 "%0rmnbrgglink.c::%!FUNC! Glink open failed err=0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemEventHandler
{
pGlinkRequestStatus, ItemLong -- 10
}
#typev rmnbrgglink_c955 87 "%0rmnbrgglink.c::%!FUNC! Glink link up event received" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemEventHandler
{
}
#typev rmnbrgglink_c947 86 "%0rmnbrgglink.c::%!FUNC! Glink link down event received. Link already down" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemEventHandler
{
}
#typev rmnbrgglink_c937 85 "%0rmnbrgglink.c::%!FUNC! Glink close channel failed err=0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemEventHandler
{
pGlinkRequestStatus, ItemLong -- 10
}
#typev rmnbrgglink_c899 70 "%0rmnbrgglink.c::%!FUNC! Error in device context %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemEventHandler
{
pDeviceContext, ItemPtr -- 10
}
#typev rmnbrgglink_c919 84 "%0rmnbrgglink.c::%!FUNC! Set DTR Signal with last GlinkUsbState: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemEventHandler
{
pCntlIface->GlinkUsbState, ItemLong -- 10
}
#typev rmnbrgglink_c913 83 "%0rmnbrgglink.c::%!FUNC! Modem connect event done, is modem up:%10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemEventHandler
{
RmnbrgGlinkIsModemUp(deviceContext), ItemLong -- 10
}
// PDB:  qcrmnetbridge850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev rmnbrgglink_c899 72 "%0rmnbrgglink.c::%!FUNC! flush out Cntl Rx collection" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemEventHandler
{
}
#typev rmnbrgglink_c899 71 "%0rmnbrgglink.c::%!FUNC! Flush out Cntl Tx collection" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemEventHandler
{
}
#typev rmnbrgglink_c892 82 "%0rmnbrgglink.c::%!FUNC! modem Up event" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemEventHandler
{
}
#typev rmnbrgglink_c888 81 "%0rmnbrgglink.c::%!FUNC! modem disconnect event, is modem link up:%10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemEventHandler
{
RmnbrgGlinkIsModemUp(deviceContext), ItemLong -- 10
}
#typev rmnbrgglink_c883 80 "%0rmnbrgglink.c::%!FUNC! modem event received" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemEventHandler
{
}
#typev rmnbrgglink_c849 78 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkModemEventHandler
{
}
#typev rmnbrgglink_c290 33 "%0rmnbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkOpenTarget
{
}
#typev rmnbrgglink_c286 32 "%0rmnbrgglink.c::%!FUNC! :=> Glink interface query failed with status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkOpenTarget
{
status, ItemLong -- 10
}
#typev rmnbrgglink_c265 31 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkOpenTarget
{
}
#typev rmnbrgglink_c514 51 "%0rmnbrgglink.c::%!FUNC!-- status = 0x%10!x!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkSendPortOpenRequest
{
status, ItemLong -- 10
}
#typev rmnbrgglink_c478 48 "%0rmnbrgglink.c::%!FUNC! Error in device context %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkSendPortOpenRequest
{
deviceContext, ItemPtr -- 10
}
#typev rmnbrgglink_c508 50 "%0rmnbrgglink.c::%!FUNC! :=> Glink open failed with status %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkSendPortOpenRequest
{
glinkRequestStatus, ItemLong -- 10
}
#typev rmnbrgglink_c505 117 "%0rmnbrgglink.c::%!FUNC!--" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkSendPortOpenRequest
{
}
#typev rmnbrgglink_c505 116 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkSendPortOpenRequest
{
}
#typev rmnbrgglink_c494 49 "%0rmnbrgglink.c::%!FUNC! :=> GLinkRegisterLinkStateCb failed with status %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkSendPortOpenRequest
{
glinkRequestStatus, ItemLong -- 10
}
#typev rmnbrgglink_c474 47 "%0rmnbrgglink.c::%!FUNC!++" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkSendPortOpenRequest
{
}
#typev rmnbrgglink_c753 69 "%0rmnbrgglink.c::%!FUNC! GlinkUsbState: %10!d!, is modem Up: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=RMNBRG_WPP_TRACE FUNC=RmnbrgGlinkSetDtrSignal
{
DeviceContext->pRmnbrgCntlIface->GlinkUsbState, ItemLong -- 10
RmnbrgGlinkIsModemUp(DeviceContext), ItemLong -- 11
}
