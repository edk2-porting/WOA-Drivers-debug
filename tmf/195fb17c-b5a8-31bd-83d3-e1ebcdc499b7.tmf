// PDB:  qcauddev7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:34:218 (UTC) [tracepdb]
195fb17c-b5a8-31bd-83d3-e1ebcdc499b7 vcxproj // SRC=bongo_hal.c MJ= MN=
#typev cdc_slave_device_handler_c611 38 "%0=WSA:<wsa_deinit>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=cdc_slave_device_deinit
{
}
// PDB:  qcauddev7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:34:218 (UTC) [tracepdb]
#typev cdc_slave_device_handler_c1196 37 "%0=WSA:<wsa_init>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=cdc_slave_device_init
{
}
// PDB:  qcauddev7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:34:218 (UTC) [tracepdb]
#typev bongo_hal_c307 25 "%0-WSA:<wsa_HW_reset, return_code=(0x%10!x!)> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_HW_reset
{
rc, ItemLong -- 10
}
#typev bongo_hal_c270 24 "%0=CDC: <wsa_HW_reset: swr_bus_clock_start_or_resume failed, Exiting return_code=(0x%10!x!)> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_HW_reset
{
rc, ItemLong -- 10
}
#typev bongo_hal_c265 23 "%0+WSA:<wsa_HW_reset>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_HW_reset
{
}
#typev bongo_hal_c182 18 "%0=WSA:<valid WCD slave found>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c179 17 "%0=WSA:<slave varian unknown>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c175 16 "%0=WSA:<slave not initialized, ignoring>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c171 15 "%0=WSA:<slave not present, ignoring>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c167 14 "%0=WSA:<slave ID was not recognized>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c163 13 "%0=WSA:<slave pointer is null>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c159 12 "%0=WSA:<bongo hal not initialized>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c154 11 "%0=WSA:<processing broadcast>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c151 10 "%0=WSA:<verifying cdc_slave info>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c1022 63 "%0-WSA:<wsa_cleanup_slave>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_cleanup_slave
{
}
#typev bongo_hal_c1008 62 "%0-WSA:<slave is not WSA881x type>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_cleanup_slave
{
}
#typev bongo_hal_c1003 61 "%0-WSA:<invalid parameter>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_cleanup_slave
{
}
#typev bongo_hal_c1000 60 "%0+WSA:<wsa_cleanup_slave>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_cleanup_slave
{
}
#typev bongo_hal_c1101 68 "%0=WSA:<wsa_configure returned: %10!d!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_configure
{
rc, ItemLong -- 10
}
#typev bongo_hal_c429 27 "%0=WSA:<wsa_disable_bandgap>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_disable_bandgap
{
}
#typev bongo_hal_c637 35 "%0=WSA:<wsa_enable_RDAC>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_enable_RDAC
{
}
#typev bongo_hal_c413 26 "%0=WSA:<wsa_enable_bandgap>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_enable_bandgap
{
}
#typev bongo_hal_c987 59 "%0-WSA:<wsa_identify_slave>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c984 58 "%0=WSA:<wsa881x identified as right>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c981 57 "%0=WSA:<wsa881x identified as left>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c963 54 "%0=WSA:<wsa881x v1.1>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c959 53 "%0=WSA:<wsa881x v1>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c968 55 "%0=WSA:<wsa881x v2>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c972 56 "%0=WSA:<wsa881x version unknown!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c949 52 "%0=WSA:<found WSA8815 variant>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c944 51 "%0=WSA:<found WSA8810 variant>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c933 50 "%0=WSA:<reading WSA881x chip id.>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c922 49 "%0-WSA:<out of memory!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c904 45 "%0=WSA:<slave was not recognized as WSA881x>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c914 48 "%0-WSA:<out of memory!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c908 47 "%0=WSA:<Adding slave to soundwire group 1>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c907 46 "%0=WSA:<slave was recognized as WSA881x>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c891 44 "%0=WSA:<using soundwire slave address to indentify type of slave>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c886 43 "%0-WSA:<slave already identified as not WSA881x>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c883 42 "%0-WSA:<slave already identified as WSA881x>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c877 41 "%0-WSA:<slave not present>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c872 40 "%0-WSA:<entry is a null pointer>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c869 39 "%0+WSA:<wsa_identify_slave>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c1054 65 "%0=WSA:<Received OCP IRQ, ignoring!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_process_slave_irq
{
}
#typev bongo_hal_c1041 64 "%0=WSA:<wsa_process_slave_irq>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_process_slave_irq
{
}
#typev bongo_hal_c1298 74 "%0=CDC: <wsa_read_temp_sensor: swr_bus_clock_start_or_resume failed, Exiting return_code=(0x%10!x!)> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_read_temp_sensor
{
rc, ItemLong -- 10
}
#typev bongo_hal_c231 21 "%0=WSA:<register 0x%10!x! is out of range>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_register_read
{
reg, ItemLong -- 10
}
#typev bongo_hal_c255 22 "%0=WSA:<wsa_register_read: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_register_read
{
reg, ItemLong -- 10
*value, ItemLong -- 11
}
#typev bongo_hal_c195 19 "%0=WSA:<register 0x%10!x! is out of range>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_register_write
{
reg, ItemLong -- 10
}
#typev bongo_hal_c199 20 "%0=WSA:<wsa_register_write: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_register_write
{
reg, ItemLong -- 10
value, ItemLong -- 11
}
#typev bongo_hal_c1082 67 "%0=WSA:<wsa_reset>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_reset
{
}
#typev bongo_hal_c1074 66 "%0=WSA:<wsa_reset returned: %10!d!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_reset
{
rc, ItemLong -- 10
}
#typev bongo_hal_c1219 73 "%0-WSA:<wsa_spkr_disable>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_disable
{
}
#typev bongo_hal_c1203 36 "%0=WSA:<wsa_disable_RDAC>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_disable
{
}
#typev bongo_hal_c1196 72 "%0+WSA:<wsa_spkr_disable>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_disable
{
}
#typev bongo_hal_c1186 71 "%0-WSA:<wsa_spkr_enable return_code=(0x%10!x!)> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_enable
{
rc, ItemLong -- 10
}
#typev bongo_hal_c1161 70 "%0=CDC: <wsa_spkr_enable: swr_bus_clock_start_or_resume failed, Exiting return_code=(0x%10!x!)> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_spkr_enable
{
rc, ItemLong -- 10
}
#typev bongo_hal_c1144 69 "%0+WSA:<wsa_spkr_enable>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_enable
{
}
#typev bongo_hal_c623 34 "%0-WSA:<wsa_spkr_smart_boost_disable>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_smart_boost_disable
{
}
#typev bongo_hal_c614 33 "%0=WSA:<wsa_spkr_smart_boost_disable returned %10!d!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_spkr_smart_boost_disable
{
rc, ItemLong -- 10
}
#typev bongo_hal_c611 32 "%0+WSA:<wsa_spkr_smart_boost_disable>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_smart_boost_disable
{
}
#typev bongo_hal_c532 31 "%0=WSA:<using WSA8810, boost_level bigger than max>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_smart_boost_enable
{
}
#typev bongo_hal_c447 29 "%0=WSA:<wsa_spkr_smart_boost_enable returned: %10!d!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_spkr_smart_boost_enable
{
rc, ItemLong -- 10
}
#typev bongo_hal_c444 28 "%0=WSA:<wsa_spkr_smart_boost_enable>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_smart_boost_enable
{
}
