// PDB:  qcbattmngr850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
5dafae2b-4ddc-3621-411b-62c3939d8796 BattMngr // SRC=BattMngrTech_ChgTblMgmt_R1.c MJ= MN=
#typev BattMngrPlat_SMChg_FGGge_R3_c559 24 "%0BattMngrTech_ChgTableMgmt_UpdateRegistryData_for_charge_table_config::Invalid table index (%10!d!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrPlat_SMChg_FGGge_R3_Init
{
tbl_index, ItemLong -- 10
}
// PDB:  qcbattmngr850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev BattMngrPlat_SMChg_FGGge_R3_c471 10 "%0BattMngrTech_ChgTableMgmt_init::++" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrPlat_SMChg_FGGge_R3_Init
{
}
// PDB:  qcbattmngr850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev BattMngrTech_ChgTblMgmt_R1_c414 15 "%0qcbattmngr::ERROR::Invalid ACPI argument 0xFFFFFFFF" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=BattMngrWPP_SelfHost FUNC=BattMngrTech_ChgTableMgmt_ParseAndFill_AcpiData
{
}
#typev BattMngrTech_ChgTblMgmt_R1_c402 14 "%0qcbattmngr::ERROR::Incorrect number of acpi entries for charge tables, expected >= %10!d!, received=%11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=BattMngrWPP_acpi FUNC=BattMngrTech_ChgTableMgmt_ParseAndFill_AcpiData
{
BATTMNGR_ACPI_CHGTBL_ARGS, ItemLong -- 10
numberOfConfigItems, ItemLong -- 11
}
#typev BattMngrTech_ChgTblMgmt_R1_c363 13 "%0qcbattmngr::ERROR::Invalid ACPI argument 0xFFFFFFFF" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=BattMngrWPP_SelfHost FUNC=BattMngrTech_ChgTableMgmt_ParseAndFill_AcpiData
{
}
#typev BattMngrTech_ChgTblMgmt_R1_c353 12 "%0qcbattmngr::ERROR::Incorrect number of acpi entries for charge table management, expected=%10!d!,received=%11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=BattMngrWPP_acpi FUNC=BattMngrTech_ChgTableMgmt_ParseAndFill_AcpiData
{
BATTMNGR_ACPI_CHGTBLMGMT_ARGS, ItemLong -- 10
numberOfConfigItems, ItemLong -- 11
}
#typev BattMngrTech_ChgTblMgmt_R1_c345 11 "%0BattMngrTech_ChgTableMgmt_ParseAndFill_AcpiData::++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_acpi FUNC=BattMngrTech_ChgTableMgmt_ParseAndFill_AcpiData
{
}
#typev BattMngrTech_ChgTblMgmt_R1_c547 23 "%0BattMngrTech_ChgTableMgmt_UpdateRegistryData::Registry for BATTMNGRTECH_CHGTBLMGMT_CHG_TABLE_NO_MAX is invalid (%10!d!) and will not be applied" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_ChgTableMgmt_UpdateRegistryData
{
regData, ItemLong -- 10
}
#typev BattMngrTech_ChgTblMgmt_R1_c541 22 "%0BattMngrTech_ChgTableMgmt_UpdateRegistryData::Registry for BATTMNGRTECH_CHGTBLMGMT_CHG_TABLE_NO_MAX is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_ChgTableMgmt_UpdateRegistryData
{
sBattMngrTech_ChgTblMgmt_Context.tbls.size, ItemLong -- 10
}
#typev BattMngrTech_ChgTblMgmt_R1_c529 21 "%0BattMngrTech_ChgTableMgmt_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_CHGTBLMGMT_SMART_BATTID_MAX is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_ChgTableMgmt_UpdateRegistryData
{
sBattMngrTech_ChgTblMgmt_Context.battcat_map.smart_batt_id_max, ItemLong -- 10
}
#typev BattMngrTech_ChgTblMgmt_R1_c519 20 "%0BattMngrTech_ChgTableMgmt_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_CHGTBLMGMT_SMART_BATTID_MIN is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_ChgTableMgmt_UpdateRegistryData
{
sBattMngrTech_ChgTblMgmt_Context.battcat_map.smart_batt_id_min, ItemLong -- 10
}
#typev BattMngrTech_ChgTblMgmt_R1_c509 19 "%0BattMngrTech_ChgTableMgmt_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_CHGTBLMGMT_NORMAL_BATTID_MAX is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_ChgTableMgmt_UpdateRegistryData
{
sBattMngrTech_ChgTblMgmt_Context.battcat_map.normal_batt_id_max, ItemLong -- 10
}
#typev BattMngrTech_ChgTblMgmt_R1_c499 18 "%0BattMngrTech_ChgTableMgmt_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_CHGTBLMGMT_NORMAL_BATTID_MIN is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_ChgTableMgmt_UpdateRegistryData
{
sBattMngrTech_ChgTblMgmt_Context.battcat_map.normal_batt_id_min, ItemLong -- 10
}
#typev BattMngrTech_ChgTblMgmt_R1_c489 17 "%0BattMngrTech_ChgTableMgmt_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_CHGTBLMGMT_DEBUG_BATTID_MAX is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_ChgTableMgmt_UpdateRegistryData
{
sBattMngrTech_ChgTblMgmt_Context.battcat_map.debug_batt_id_max, ItemLong -- 10
}
#typev BattMngrTech_ChgTblMgmt_R1_c479 16 "%0BattMngrTech_ChgTableMgmt_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_CHGTBLMGMT_DEBUG_BATTID_MIN is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_ChgTableMgmt_UpdateRegistryData
{
sBattMngrTech_ChgTblMgmt_Context.battcat_map.debug_batt_id_min, ItemLong -- 10
}
#typev BattMngrTech_ChgTblMgmt_R1_c681 28 "%0BattMngrTech_ChgTableMgmt_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_CHGTBLMGMT_CHARGE_TABLE_BATT_CATEGORY is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_ChgTableMgmt_UpdateRegistryData_for_charge_table_info
{
sBattMngrTech_ChgTblMgmt_Context.tbls.list[tbl_index].op_temp_range_max, ItemLong -- 10
}
#typev BattMngrTech_ChgTblMgmt_R1_c671 27 "%0BattMngrTech_ChgTableMgmt_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_CHGTBLMGMT_CHARGE_TABLE_BATT_CATEGORY is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_ChgTableMgmt_UpdateRegistryData_for_charge_table_info
{
sBattMngrTech_ChgTblMgmt_Context.tbls.list[tbl_index].op_temp_range_min, ItemLong -- 10
}
#typev BattMngrTech_ChgTblMgmt_R1_c661 26 "%0BattMngrTech_ChgTableMgmt_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_CHGTBLMGMT_CHARGE_TABLE_BATT_CATEGORY is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_ChgTableMgmt_UpdateRegistryData_for_charge_table_info
{
sBattMngrTech_ChgTblMgmt_Context.tbls.list[tbl_index].batt_category, ItemLong -- 10
}
#typev BattMngrTech_ChgTblMgmt_R1_c641 25 "%0BattMngrTech_ChgTableMgmt_UpdateRegistryData_for_charge_table_info::Invalid table index (%10!d!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_ChgTableMgmt_UpdateRegistryData_for_charge_table_info
{
tbl_index, ItemLong -- 10
}
