// PDB:  qcsubsys7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:20:588 (UTC) [tracepdb]
ca854d5e-88f3-326e-96d6-3a11762cd633 subsys // SRC=service_manager.c MJ= MN=
#typev service_manager_c794 55 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_CleanupDevice
{
}
#typev service_manager_c775 54 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::KeWaitForsingleObject failed, status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_CleanupDevice
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c745 53 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get driverContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_CleanupDevice
{
}
#typev service_manager_c738 52 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_CleanupDevice
{
}
#typev service_manager_c731 51 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_CleanupDevice
{
}
#typev service_manager_c794 55 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_CleanupDevice$fin$0
{
}
#typev service_manager_c775 54 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::KeWaitForsingleObject failed, status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_CleanupDevice$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c745 53 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get driverContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_CleanupDevice$fin$0
{
}
#typev service_manager_c738 52 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_CleanupDevice$fin$0
{
}
#typev service_manager_c731 51 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_CleanupDevice$fin$0
{
}
#typev service_manager_c1467 98 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC!" //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ClosePilIoTarget
{
}
#typev service_manager_c1457 97 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ClosePilIoTarget
{
}
#typev service_manager_c1452 96 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ClosePilIoTarget
{
}
#typev service_manager_c1291 86 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::invalid parameter" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_GetMemoryInfo
{
}
#typev service_manager_c1312 88 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::wdfMemMemRegions is NULL" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_GetMemoryInfo
{
}
#typev service_manager_c1345 89 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_GetMemoryInfo
{
}
#typev service_manager_c1301 87 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_GetMemoryInfo
{
}
#typev service_manager_c1286 85 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_GetMemoryInfo
{
}
#typev service_manager_c1291 86 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::invalid parameter" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_GetMemoryInfo$fin$0
{
}
#typev service_manager_c1312 88 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::wdfMemMemRegions is NULL" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_GetMemoryInfo$fin$0
{
}
#typev service_manager_c1345 89 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_GetMemoryInfo$fin$0
{
}
#typev service_manager_c1301 87 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_GetMemoryInfo$fin$0
{
}
#typev service_manager_c1286 85 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_GetMemoryInfo$fin$0
{
}
#typev service_manager_c1856 127 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_InitHypProtectionParameters
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1851 126 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Hypervisor Protection feature not enabled for this target." //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_InitHypProtectionParameters
{
}
#typev service_manager_c1845 125 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: QSM_OpenPilIoTarget() failed.  status = 0x%10!08X!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters
{
status, ItemLong -- 10
}
#typev service_manager_c1837 124 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfWaitLockCreate(dhmsRegionsCollectionLock) failed: status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1826 123 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfCollectionCreate(dhmsRegionsCollection) failed: status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1806 122 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Unable to get the device context 0x%10!08x!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters
{
status, ItemLong -- 10
}
#typev service_manager_c1798 121 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Device handle passed to function is invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters
{
}
#typev service_manager_c1792 120 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_InitHypProtectionParameters
{
}
#typev service_manager_c1856 127 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_InitHypProtectionParameters$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1851 126 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Hypervisor Protection feature not enabled for this target." //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_InitHypProtectionParameters$fin$0
{
}
#typev service_manager_c1845 125 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: QSM_OpenPilIoTarget() failed.  status = 0x%10!08X!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c1837 124 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfWaitLockCreate(dhmsRegionsCollectionLock) failed: status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1826 123 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfCollectionCreate(dhmsRegionsCollection) failed: status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1806 122 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Unable to get the device context 0x%10!08x!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c1798 121 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Device handle passed to function is invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters$fin$0
{
}
#typev service_manager_c1792 120 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_InitHypProtectionParameters$fin$0
{
}
#typev service_manager_c394 25 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceAdd
{
}
#typev service_manager_c379 24 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoQueueCreate() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c365 23 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceCreateSymbolicLink() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c356 22 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceCreateDeviceInterface() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c340 21 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceCreate() failed!  status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c331 20 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceInitAssignName() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c310 19 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: Getting the driver context failed. " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd
{
}
#typev service_manager_c303 18 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceAdd
{
}
#typev service_manager_c394 25 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceAdd$fin$0
{
}
#typev service_manager_c379 24 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoQueueCreate() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c365 23 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceCreateSymbolicLink() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c356 22 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceCreateDeviceInterface() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c340 21 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceCreate() failed!  status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c331 20 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceInitAssignName() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c310 19 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: Getting the driver context failed. " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd$fin$0
{
}
#typev service_manager_c303 18 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceAdd$fin$0
{
}
#typev service_manager_c711 50 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceCleanup
{
}
#typev service_manager_c699 49 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Freeing up memory allocated for deviceContext->memRegion " //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_OnDeviceCleanup
{
}
#typev service_manager_c687 48 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceCleanup
{
}
#typev service_manager_c711 50 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceCleanup$fin$0
{
}
#typev service_manager_c699 49 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Freeing up memory allocated for deviceContext->memRegion " //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_OnDeviceCleanup$fin$0
{
}
#typev service_manager_c687 48 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceCleanup$fin$0
{
}
#typev service_manager_c637 45 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Entry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c627 44 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get thread object handle" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry
{
}
#typev service_manager_c609 43 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to create server thread" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry
{
}
#typev service_manager_c587 42 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() succeeded." //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry
{
}
#typev service_manager_c582 41 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() failed.with status = 0x%10!08X!, Only dump collection of DHMS regions gets effected" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry
{
status, ItemLong -- 10
}
#typev service_manager_c576 40 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Rpen driver is not yet loaded, proceed with other registrations as Rpe library had required handling." //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceD0Entry
{
}
#typev service_manager_c561 39 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry
{
}
#typev service_manager_c553 38 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Entry
{
}
#typev service_manager_c637 45 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Entry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c627 44 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get thread object handle" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry$fin$0
{
}
#typev service_manager_c609 43 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to create server thread" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry$fin$0
{
}
#typev service_manager_c587 42 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() succeeded." //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry$fin$0
{
}
#typev service_manager_c582 41 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() failed.with status = 0x%10!08X!, Only dump collection of DHMS regions gets effected" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c576 40 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Rpen driver is not yet loaded, proceed with other registrations as Rpe library had required handling." //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceD0Entry$fin$0
{
}
#typev service_manager_c561 39 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry$fin$0
{
}
#typev service_manager_c553 38 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Entry$fin$0
{
}
#typev service_manager_c667 47 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Exit
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c659 46 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Exit
{
}
#typev service_manager_c667 47 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Exit$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c659 46 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Exit$fin$0
{
}
#typev service_manager_c530 37 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceInit
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c474 34 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reading QSM Platform Configuration info from ACPI failed with status = 0x%10!08X!" //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit
{
status, ItemLong -- 10
}
#typev service_manager_c521 36 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get thread object handle" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c503 35 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to create server thread" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c466 33 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM Platform Configuration not found in ACPI tables" //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c460 32 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Initializing Hypervisor Protection parameters failed with status = 0x%10!08X!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit
{
status, ItemLong -- 10
}
#typev service_manager_c456 31 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM Platform Configuration successfully read from ACPI tables" //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c447 30 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() succeeded." //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c442 29 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() failed.with status = 0x%10!08X!, Only dump collection of DHMS regions gets effected" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit
{
status, ItemLong -- 10
}
#typev service_manager_c436 28 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Rpen driver is not yet loaded, proceed with other registrations as Rpe library had required handling." //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c422 27 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c416 26 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c530 37 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceInit$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c474 34 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reading QSM Platform Configuration info from ACPI failed with status = 0x%10!08X!" //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c521 36 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get thread object handle" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c503 35 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to create server thread" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c466 33 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM Platform Configuration not found in ACPI tables" //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c460 32 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Initializing Hypervisor Protection parameters failed with status = 0x%10!08X!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c456 31 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM Platform Configuration successfully read from ACPI tables" //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c447 30 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() succeeded." //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c442 29 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() failed.with status = 0x%10!08X!, Only dump collection of DHMS regions gets effected" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c436 28 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Rpen driver is not yet loaded, proceed with other registrations as Rpe library had required handling." //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c422 27 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c416 26 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c847 58 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceIoControl
{
}
#typev service_manager_c836 57 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Received IOCTL_REGISTER_SHUTDOWN_COMMAND is not supported" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_OnDeviceIoControl
{
}
#typev service_manager_c828 56 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceIoControl
{
}
#typev service_manager_c1433 95 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OpenPilIoTarget
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1427 94 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: WdfRequestCreate() failed!  status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1413 93 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: WdfIoTargetOpen() failed to PIL driver with status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1399 92 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoTargetCreate() failed to PIL driver with status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1389 91 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget
{
}
#typev service_manager_c1383 90 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OpenPilIoTarget
{
}
#typev service_manager_c1433 95 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OpenPilIoTarget$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1427 94 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: WdfRequestCreate() failed!  status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1413 93 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: WdfIoTargetOpen() failed to PIL driver with status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1399 92 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoTargetCreate() failed to PIL driver with status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1389 91 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget$fin$0
{
}
#typev service_manager_c1383 90 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OpenPilIoTarget$fin$0
{
}
#typev service_manager_c1222 81 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_PrepareHardware
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1150 78 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::wdfMemMemRegions is NULL" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_PrepareHardware
{
}
#typev service_manager_c1190 80 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Returning %10!s! memory of 0x%11!X! bytes at address 0x%12!X! to HLOS" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_PrepareHardware
{
memRegion->memoryRegionName, ItemWString -- 10
memRegion->bufferSize, ItemLong -- 11
(ULONG)memRegion->bufferAddr, ItemLong -- 12
}
#typev service_manager_c1177 79 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM BufferAddr: 0x%10!X!, BufferSize: 0x%11!x!" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_PrepareHardware
{
(ULONG)memRegion->bufferAddr, ItemLong -- 10
memRegion->bufferSize, ItemLong -- 11
}
#typev service_manager_c1139 77 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM ResourceList is NULL" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_PrepareHardware
{
}
#typev service_manager_c1127 76 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDriverOpenParametersRegistryKey() failed. status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_PrepareHardware
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1120 75 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM_PrepareHardware: ACPI Package info read error" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_PrepareHardware
{
}
#typev service_manager_c1112 74 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_PrepareHardware
{
}
#typev service_manager_c1104 73 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_PrepareHardware
{
}
#typev service_manager_c1222 81 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_PrepareHardware$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1150 78 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::wdfMemMemRegions is NULL" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_PrepareHardware$fin$0
{
}
#typev service_manager_c1190 80 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Returning %10!s! memory of 0x%11!X! bytes at address 0x%12!X! to HLOS" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_PrepareHardware$fin$0
{
memRegion->memoryRegionName, ItemWString -- 10
memRegion->bufferSize, ItemLong -- 11
(ULONG)memRegion->bufferAddr, ItemLong -- 12
}
#typev service_manager_c1177 79 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM BufferAddr: 0x%10!X!, BufferSize: 0x%11!x!" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_PrepareHardware$fin$0
{
(ULONG)memRegion->bufferAddr, ItemLong -- 10
memRegion->bufferSize, ItemLong -- 11
}
#typev service_manager_c1139 77 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM ResourceList is NULL" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_PrepareHardware$fin$0
{
}
#typev service_manager_c1127 76 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDriverOpenParametersRegistryKey() failed. status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_PrepareHardware$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1120 75 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM_PrepareHardware: ACPI Package info read error" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_PrepareHardware$fin$0
{
}
#typev service_manager_c1112 74 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_PrepareHardware$fin$0
{
}
#typev service_manager_c1104 73 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_PrepareHardware$fin$0
{
}
#typev service_manager_c1058 71 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reading of Memory regions from ACPI tables for online dump collection failed" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry
{
}
#typev service_manager_c1070 72 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReadPackageInfoFromRegistry
{
}
#typev service_manager_c994 67 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::wrong package information" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry
{
}
#typev service_manager_c1043 70 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed RtlUnicodeStringToInteger with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1032 69 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed RtlGUIDFromString with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1011 68 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM_ReadPackageInfoFromRegistry Unable to allocate required descriptor memory to read memory information from ACPI tables, status = %10!s!" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c986 66 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfRegistryQueryMultiString with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c971 65 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfCollectionCreate with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c959 64 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfRegistryOpenKey with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c949 63 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfDeviceOpenRegistryKey with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c935 62 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry
{
}
#typev service_manager_c928 61 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reading memory regions information from ACPI tables" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry
{
}
#typev service_manager_c1058 71 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reading of Memory regions from ACPI tables for online dump collection failed" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
}
#typev service_manager_c1070 72 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
}
#typev service_manager_c994 67 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::wrong package information" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
}
#typev service_manager_c1043 70 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed RtlUnicodeStringToInteger with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1032 69 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed RtlGUIDFromString with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1011 68 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM_ReadPackageInfoFromRegistry Unable to allocate required descriptor memory to read memory information from ACPI tables, status = %10!s!" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c986 66 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfRegistryQueryMultiString with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c971 65 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfCollectionCreate with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c959 64 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfRegistryOpenKey with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c949 63 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfDeviceOpenRegistryKey with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c935 62 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
}
#typev service_manager_c928 61 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reading memory regions information from ACPI tables" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
}
#typev service_manager_c1524 103 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReadPlatformConfigurationFromRegistry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1513 102 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: Unable to read the default QSMG Enabled flag from registry, default will be set to disabled " //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_ReadPlatformConfigurationFromRegistry
{
}
#typev service_manager_c1505 101 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Unable to get the device context 0x%10!08x!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPlatformConfigurationFromRegistry
{
status, ItemLong -- 10
}
#typev service_manager_c1497 100 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Device handle passed to function is invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPlatformConfigurationFromRegistry
{
}
#typev service_manager_c1491 99 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReadPlatformConfigurationFromRegistry
{
}
#typev service_manager_c1524 103 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReadPlatformConfigurationFromRegistry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1513 102 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: Unable to read the default QSMG Enabled flag from registry, default will be set to disabled " //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_ReadPlatformConfigurationFromRegistry$fin$0
{
}
#typev service_manager_c1505 101 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Unable to get the device context 0x%10!08x!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPlatformConfigurationFromRegistry$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c1497 100 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Device handle passed to function is invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPlatformConfigurationFromRegistry$fin$0
{
}
#typev service_manager_c1491 99 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReadPlatformConfigurationFromRegistry$fin$0
{
}
#typev service_manager_c1757 118 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Modem DHMS region address: 0x%10!08X! and length: 0x%11!08X! reclaimed successfully" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
(ULONG)PhyAddr.u.LowPart, ItemLong -- 10
RegLength, ItemLong -- 11
}
#typev service_manager_c1753 117 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoTargetSendIoctlSynchronously IOCTL_PIL_TZ_MODEM_ACCESS_MEMORY_REGION request to PIL failed with status = %10!d!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
status, ItemLong -- 10
}
#typev service_manager_c1739 116 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Passing PIL driver Modem DHMS region information" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
}
#typev service_manager_c1771 119 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1729 115 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::DHMS region already reclaimed from PIL, skipping region reclaim from PIL." //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
}
#typev service_manager_c1717 114 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reclaim DHMS region from PIL. " //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
}
#typev service_manager_c1694 113 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Parameters passed to function are invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
}
#typev service_manager_c1689 112 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
}
#typev service_manager_c1757 118 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Modem DHMS region address: 0x%10!08X! and length: 0x%11!08X! reclaimed successfully" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
(ULONG)PhyAddr.u.LowPart, ItemLong -- 10
RegLength, ItemLong -- 11
}
#typev service_manager_c1753 117 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoTargetSendIoctlSynchronously IOCTL_PIL_TZ_MODEM_ACCESS_MEMORY_REGION request to PIL failed with status = %10!d!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c1739 116 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Passing PIL driver Modem DHMS region information" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
}
#typev service_manager_c1771 119 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1729 115 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::DHMS region already reclaimed from PIL, skipping region reclaim from PIL." //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
}
#typev service_manager_c1717 114 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reclaim DHMS region from PIL. " //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
}
#typev service_manager_c1694 113 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Parameters passed to function are invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
}
#typev service_manager_c1689 112 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
}
#typev service_manager_c1262 84 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReleaseHardware
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1257 83 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Freeing up memory allocated for deviceContext->memRegion " //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReleaseHardware
{
}
#typev service_manager_c1245 82 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReleaseHardware
{
}
#typev service_manager_c1262 84 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReleaseHardware$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1257 83 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Freeing up memory allocated for deviceContext->memRegion " //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReleaseHardware$fin$0
{
}
#typev service_manager_c1245 82 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReleaseHardware$fin$0
{
}
#typev service_manager_c203 16 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM QMI event" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_Thread
{
}
#typev service_manager_c194 15 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM Cleanup event" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_Thread
{
}
#typev service_manager_c154 14 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfMemoryCreate for wdfMemWaitBlocks failed with status %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c268 17 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_Thread
{
}
#typev service_manager_c139 13 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfMemoryCreate for wdfMemWaitEvents failed with status %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c109 12 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread
{
}
#typev service_manager_c102 11 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Invalid startContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread
{
}
#typev service_manager_c96 10 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_Thread
{
}
#typev service_manager_c203 16 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM QMI event" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_Thread$fin$0
{
}
#typev service_manager_c194 15 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM Cleanup event" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_Thread$fin$0
{
}
#typev service_manager_c154 14 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfMemoryCreate for wdfMemWaitBlocks failed with status %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c268 17 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_Thread$fin$0
{
}
#typev service_manager_c139 13 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfMemoryCreate for wdfMemWaitEvents failed with status %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c109 12 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread$fin$0
{
}
#typev service_manager_c102 11 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Invalid startContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread$fin$0
{
}
#typev service_manager_c96 10 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_Thread$fin$0
{
}
#typev service_manager_c1648 110 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Modem DHMS region address: 0x%10!08X! and length: 0x%11!08X! updated to PIL successfully" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
(ULONG)PhyAddr.u.LowPart, ItemLong -- 10
RegLength, ItemLong -- 11
}
#typev service_manager_c1635 109 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoTargetSendIoctlSynchronously IOCTL_PIL_TZ_MODEM_ACCESS_MEMORY_REGION request to PIL failed with status = %10!d!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
status, ItemLong -- 10
}
#typev service_manager_c1621 108 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Passing PIL driver Modem DHMS region information" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
}
#typev service_manager_c1612 107 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to allocated required memory for DHMS region block. status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1658 111 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1596 106 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::DHMS region already updated to PIL, skipping region update to PIL." //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
}
#typev service_manager_c1562 105 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Parameters passed to function are invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
}
#typev service_manager_c1557 104 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
}
#typev service_manager_c1648 110 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Modem DHMS region address: 0x%10!08X! and length: 0x%11!08X! updated to PIL successfully" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
(ULONG)PhyAddr.u.LowPart, ItemLong -- 10
RegLength, ItemLong -- 11
}
#typev service_manager_c1635 109 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoTargetSendIoctlSynchronously IOCTL_PIL_TZ_MODEM_ACCESS_MEMORY_REGION request to PIL failed with status = %10!d!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c1621 108 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Passing PIL driver Modem DHMS region information" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
}
#typev service_manager_c1612 107 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to allocated required memory for DHMS region block. status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1658 111 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1596 106 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::DHMS region already updated to PIL, skipping region update to PIL." //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
}
#typev service_manager_c1562 105 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Parameters passed to function are invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
}
#typev service_manager_c1557 104 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
}
