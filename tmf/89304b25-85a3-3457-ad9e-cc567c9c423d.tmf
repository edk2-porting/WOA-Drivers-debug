// PDB:  qcpmicgpio7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
89304b25-85a3-3457-ad9e-cc567c9c423d src // SRC=PmicGpioClxInterrupt.c MJ= MN=
#typev PmicGpioClxInterrupt_c1426 52 "%0%!FUNC! Invalid Input param, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxClearActiveInterrupts
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c1441 54 "%0%!FUNC! Invalid Parameters, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxClearActiveInterrupts
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c1638 64 "%0%!FUNC! IOCTL IRQ_CLEAR_ACTIVE_INTERRUPTS failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxClearActiveInterrupts
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c1572 62 "%0%!FUNC! _ExtendedInterruptClear failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxClearActiveInterrupts
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c1610 63 "%0%!FUNC! Clear DIRECT_VIRTUAL IRQ failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxClearActiveInterrupts
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c1562 61 "%0%!FUNC! periph_id_pmic: 0x%10!04X!, irq_num: %11!d!, mask_for_spmi: 0x%12!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxClearActiveInterrupts
{
(periph_id_pmic & 0xFFFF), ItemLong -- 10
irq_num, ItemLong -- 11
mask_for_spmi, ItemLong -- 12
}
#typev PmicGpioClxInterrupt_c1548 60 "%0%!FUNC! clear_mask: 0x%10!I64X!, pin_number: %11!d!, Irq_ID: %12!d!, pin: %13!d!, irq_mode: 0x%14!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxClearActiveInterrupts
{
clear_mask, ItemLongLongXX -- 10
pin_number, ItemLong -- 11
Irq_ID, ItemLong -- 12
pin, ItemLong -- 13
irq_mode, ItemLong -- 14
}
#typev PmicGpioClxInterrupt_c1430 53 "%0%!FUNC! >>> BankId: %10!d!, ClearActiveMask: 0x%11!I64X!, FailedClearMask: 0x%12!I64X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxClearActiveInterrupts
{
ClearParameters->BankId, ItemLong -- 10
ClearParameters->ClearActiveMask, ItemLongLongXX -- 11
ClearParameters->FailedClearMask, ItemLongLongXX -- 12
}
#typev PmicGpioClxInterrupt_c2476 105 "%0%!FUNC! Invalid parameter, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxCreateTimer
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2506 108 "%0%!FUNC! --" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=PmicGpioClxCreateTimer
{
}
#typev PmicGpioClxInterrupt_c2503 107 "%0%!FUNC! WdfTimerCreate failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxCreateTimer
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2480 106 "%0%!FUNC! ++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=PmicGpioClxCreateTimer
{
}
#typev PmicGpioClxInterrupt_c680 28 "%0%!FUNC! Invalid Input param, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxDisableInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c847 36 "%0%!FUNC! Invalid BankId, BankId: %10!d!, Num of Bankds: %11!d!, Error Code = %12!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxDisableInterrupt
{
DisableParameters->BankId, ItemLong -- 10
PMIC_GPIO_NUM_OF_BANKS, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev PmicGpioClxInterrupt_c838 35 "%0%!FUNC! SpmiIntrCtlrLib_InterruptDisable failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxDisableInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c825 34 "%0%!FUNC! IOCTL IRQ_DISABLE_INTERRUPT failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxDisableInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c801 33 "%0%!FUNC! Disable IRQ and updated State Machine" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxDisableInterrupt
{
}
#typev PmicGpioClxInterrupt_c731 32 "%0%!FUNC! Disabled the Fake Debounce IRQ" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxDisableInterrupt
{
}
#typev PmicGpioClxInterrupt_c717 31 "%0%!FUNC! SlaveID: %10!d!, Periph BaseAddress: 0x%11!X!, Periph IRQ Bit: %12!d!, IRQ Trigger: %13!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxDisableInterrupt
{
slave_id, ItemLong -- 10
(periph_id_pmic & 0xFFFF), ItemLong -- 11
pin_number, ItemLong -- 12
IrqConfig.irq_trigger, ItemEnum(_PM_IOCTL_IRQ_TRIG_TYPE) -- 13
}
#typev PmicGpioClxInterrupt_c704 30 "%0%!FUNC! Invalid Irq_ID: %10!d!, Error Code = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxDisableInterrupt
{
Irq_ID, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev PmicGpioClxInterrupt_c686 29 "%0%!FUNC! >>> BankId: %10!d!, PinNumber: %11!d!, Irq_ID: 0x%12!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxDisableInterrupt
{
DisableParameters->BankId, ItemLong -- 10
DisableParameters->PinNumber, ItemLong -- 11
Irq_ID, ItemLong -- 12
}
#typev PmicGpioClxInterrupt_c171 10 "%0%!FUNC! Invalid Input param, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxEnableInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c613 27 "%0%!FUNC! InterruptMode: 0x%10!X!, PinPowerState: %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Trace FUNC=PmicGpioClxEnableInterrupt
{
InterruptMode, ItemLong -- 10
gpioDeviceContext->PmicGpioController.PinInfo.PinPowerState[Irq_ID], ItemLong -- 11
WdfPowerDeviceD0, ItemLong -- 12
}
#typev PmicGpioClxInterrupt_c604 26 "%0%!FUNC! VIRTUAL_BANK, Actual H/w PinPowerState[0x%10!03X!]: %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Trace FUNC=PmicGpioClxEnableInterrupt
{
Irq_ID, ItemLong -- 10
gpioDeviceContext->PmicGpioController.PinInfo.PinPowerState[Irq_ID], ItemLong -- 11
WdfPowerDeviceD0, ItemLong -- 12
}
#typev PmicGpioClxInterrupt_c597 25 "%0%!FUNC! IOCTL IRQ_ENABLE_INTERRUPT failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxEnableInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c574 24 "%0%!FUNC! periph_id_spmi: 0x%10!02X! enabled on SPMI Controller, PinsEnabledForBank: 0x%11!I64X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Trace FUNC=PmicGpioClxEnableInterrupt
{
periph_id_spmi, ItemLong -- 10
gpioDeviceContext->PmicGpioController.PinsEnabledForBank[bank], ItemLongLongXX -- 11
}
#typev PmicGpioClxInterrupt_c563 23 "%0%!FUNC! SpmiIntrCtlrLib_InterruptEnable failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxEnableInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c554 22 "%0%!FUNC! IOCTL IRQ_DISABLE_INTERRUPT failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxEnableInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c531 21 "%0%!FUNC! bank: %10!d!, pin_number: %11!d!, PinsEnabledForBank: 0x%12!I64X!, Periph pin_en_mask: 0x%13!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxEnableInterrupt
{
bank, ItemLong -- 10
pin_number, ItemLong -- 11
gpioDeviceContext->PmicGpioController.PinsEnabledForBank[bank], ItemLongLongXX -- 12
pin_en_mask, ItemLong -- 13
}
#typev PmicGpioClxInterrupt_c471 20 "%0%!FUNC! VendorData: 0x%10!08X!, VendorDataLength: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxEnableInterrupt
{
*(UINT32 *)InterruptParameters->VendorData, ItemLong -- 10
InterruptParameters->VendorDataLength, ItemLong -- 11
}
#typev PmicGpioClxInterrupt_c463 19 "%0%!FUNC! Interrupt enabled successfully." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxEnableInterrupt
{
}
#typev PmicGpioClxInterrupt_c424 18 "%0%!FUNC! Memory alloc fail, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxEnableInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c270 17 "%0%!FUNC! VendorDataLength: %10!d!, VendorData: 0x%11!08X!, 0x%12!08X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxEnableInterrupt
{
InterruptParameters->VendorDataLength, ItemLong -- 10
((UINT32 *)InterruptParameters->VendorData)[0], ItemLong -- 11
((UINT32 *)InterruptParameters->VendorData)[1], ItemLong -- 12
}
#typev PmicGpioClxInterrupt_c229 15 "%0%!FUNC! Invalid VendorData/Length - VendorData: 0x%10!X! VendorDataLength: %11!d!, Error Code = %12!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxEnableInterrupt
{
(ULONG)InterruptParameters->VendorData, ItemLong -- 10
InterruptParameters->VendorDataLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev PmicGpioClxInterrupt_c247 16 "%0%!FUNC! VendorDataLength is not valid, Length: %10!d!, Error Code = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxEnableInterrupt
{
InterruptParameters->VendorDataLength, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev PmicGpioClxInterrupt_c221 14 "%0%!FUNC! SlaveID: %10!d!, Periph BaseAddress: 0x%11!X!, IRQ Pin: %12!d!, IRQ Trigger: %13!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxEnableInterrupt
{
slave_id, ItemLong -- 10
(periph_id_pmic & 0xFFFF), ItemLong -- 11
pin, ItemLong -- 12
IrqConfig.irq_trigger, ItemEnum(_PM_IOCTL_IRQ_TRIG_TYPE) -- 13
}
#typev PmicGpioClxInterrupt_c203 13 "%0%!FUNC! Invalid Irq_ID: 0x%10!X!, Error Code = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxEnableInterrupt
{
Irq_ID, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev PmicGpioClxInterrupt_c192 12 "%0%!FUNC! Enabled the Fake Debounce IRQ" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxEnableInterrupt
{
}
#typev PmicGpioClxInterrupt_c177 11 "%0%!FUNC! >>> BankId: %10!d!, PinNumber: %11!d!, Irq_ID: %12!d!, InterruptMode: %13!d!, Polarity: %14!d!, PullConfiguration: %15!d!, DebounceTimeout: %16!d!, VendorDataLength: %17!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxEnableInterrupt
{
InterruptParameters->BankId, ItemLong -- 10
InterruptParameters->PinNumber, ItemLong -- 11
Irq_ID, ItemLong -- 12
InterruptParameters->InterruptMode, ItemLong -- 13
InterruptParameters->Polarity, ItemLong -- 14
InterruptParameters->PullConfiguration, ItemLong -- 15
InterruptParameters->DebounceTimeout, ItemLong -- 16
InterruptParameters->VendorDataLength, ItemLong -- 17
}
#typev PmicGpioClxInterrupt_c2658 119 "%0%!FUNC! --" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=PmicGpioClxIrqDebounceTimerCallback
{
}
#typev PmicGpioClxInterrupt_c2565 111 "%0%!FUNC! Invalid Debounce Context, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxIrqDebounceTimerCallback
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2655 118 "%0%!FUNC!:2655 IrqId: 0x%10!x!, IrqDebounceState: %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxIrqDebounceTimerCallback
{
Irq_ID, ItemLong -- 10
pPinDebounceInfo->IrqDebounceState, ItemEnum(_PMIC_GPIO_IRQ_DEBOUNCE_STATE_TYPE) -- 11
}
#typev PmicGpioClxInterrupt_c2629 117 "%0%!FUNC!:2629 Irq_ID: %10!d!, IrqDebounceState: %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxIrqDebounceTimerCallback
{
Irq_ID, ItemLong -- 10
pPinDebounceInfo->IrqDebounceState, ItemEnum(_PMIC_GPIO_IRQ_DEBOUNCE_STATE_TYPE) -- 11
}
#typev PmicGpioClxInterrupt_c2625 116 "%0%!FUNC!:2625 Irq_ID: %10!d!, IrqDebounceState: %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxIrqDebounceTimerCallback
{
Irq_ID, ItemLong -- 10
pPinDebounceInfo->IrqDebounceState, ItemEnum(_PMIC_GPIO_IRQ_DEBOUNCE_STATE_TYPE) -- 11
}
#typev PmicGpioClxInterrupt_c2613 115 "%0%!FUNC! IOCTL IRQ_UNMASK_INTERRUPT failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxIrqDebounceTimerCallback
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2585 114 "%0%!FUNC! IrqDebounceState [%10!s!] != _TIMER_STARTED" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxIrqDebounceTimerCallback
{
pPinDebounceInfo->IrqDebounceState, ItemEnum(_PMIC_GPIO_IRQ_DEBOUNCE_STATE_TYPE) -- 10
}
#typev PmicGpioClxInterrupt_c2580 113 "%0%!FUNC! Irq_ID: %10!d!, IrqDebounceState: %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxIrqDebounceTimerCallback
{
Irq_ID, ItemLong -- 10
pPinDebounceInfo->IrqDebounceState, ItemEnum(_PMIC_GPIO_IRQ_DEBOUNCE_STATE_TYPE) -- 11
}
#typev PmicGpioClxInterrupt_c2576 112 "%0%!FUNC! Invalid Input param, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxIrqDebounceTimerCallback
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2556 110 "%0%!FUNC! Invalid Timer Context, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxIrqDebounceTimerCallback
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2551 109 "%0%!FUNC! ++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=PmicGpioClxIrqDebounceTimerCallback
{
}
#typev PmicGpioClxInterrupt_c1710 65 "%0%!FUNC! Invalid Input param, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxMaskInterrupts
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c1919 77 "%0%!FUNC! IOCTL IRQ_MASK_INTERRUPTS failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxMaskInterrupts
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c1897 76 "%0%!FUNC! peripheral_index: %10!d!, peripheral_array: 0x%11!X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxMaskInterrupts
{
peripheral_index+1, ItemLong -- 10
*(UINT32 *)peripheral_array, ItemLong -- 11
}
#typev PmicGpioClxInterrupt_c1871 75 "%0%!FUNC! _ExtendedInterruptClear failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxMaskInterrupts
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c1861 74 "%0%!FUNC! periph_id_pmic: 0x%10!04X!, irq_num: %11!d!, mask_for_spmi: 0x%12!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxMaskInterrupts
{
(periph_id_pmic & 0xFFFF), ItemLong -- 10
irq_num, ItemLong -- 11
mask_for_spmi, ItemLong -- 12
}
#typev PmicGpioClxInterrupt_c1847 73 "%0%!FUNC! mask_copy: 0x%10!I64X!, pin_number: %11!d!, Irq_ID: %12!d!, pin: %13!d!, irq_mode: 0x%14!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxMaskInterrupts
{
mask_copy, ItemLongLongXX -- 10
pin_number, ItemLong -- 11
Irq_ID, ItemLong -- 12
pin, ItemLong -- 13
irq_mode, ItemLong -- 14
}
#typev PmicGpioClxInterrupt_c1723 67 "%0%!FUNC! Invalid BankId: %10!d!, Error Code = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxMaskInterrupts
{
MaskParameters->BankId, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev PmicGpioClxInterrupt_c1714 66 "%0%!FUNC! >>> BankId: %10!d!, PinMask: 0x%11!I64X!, FailedMask: 0x%12!I64X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxMaskInterrupts
{
MaskParameters->BankId, ItemLong -- 10
MaskParameters->PinMask, ItemLongLongXX -- 11
MaskParameters->FailedMask, ItemLongLongXX -- 12
}
#typev PmicGpioClxInterrupt_c2414 101 "%0%!FUNC! Invalid Input param, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxOemSpecificExtension
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2442 104 "%0%!FUNC! Invalid IRQ Mode: %10!d!, Error Code = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxOemSpecificExtension
{
irq_mode, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev PmicGpioClxInterrupt_c2429 103 "%0%!FUNC! Invalid Irq_ID: %10!d!, Error Code = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxOemSpecificExtension
{
Irq_ID, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev PmicGpioClxInterrupt_c2420 102 "%0%!FUNC! OEM Extension, Trigger Interrupt for Irq_ID: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxOemSpecificExtension
{
Irq_ID, ItemLong -- 10
}
#typev PmicGpioClxInterrupt_c2406 100 "%0%!FUNC! ++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=PmicGpioClxOemSpecificExtension
{
}
#typev PmicGpioClxInterrupt_c922 37 "%0%!FUNC! Invalid Input param, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxQueryActiveInterrupts
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c1358 51 "%0%!FUNC! Interrupt Triggered - ActiveMask: 0x%10!I64X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryActiveInterrupts
{
active_mask, ItemLongLongXX -- 10
}
#typev PmicGpioClxInterrupt_c1044 45 "%0%!FUNC! _ExtendedInterruptStatus failed, periph_id_spmi: 0x%10!03X!, SPMI_IRQ_Mask: 0x%11!X!, status = %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryActiveInterrupts
{
periph_id_spmi, ItemLong -- 10
mask_for_spmi, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev PmicGpioClxInterrupt_c1308 50 "%0%!FUNC! IOCTL IRQ_INTERRUPT_SPECIFIC_QUERY failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxQueryActiveInterrupts
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c1195 49 "%0%!FUNC!:1195 CurrentIrqToDebounce: %10!d!, IrqDebounceState: %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryActiveInterrupts
{
Irq_ID, ItemLong -- 10
pIrqDebounce->IrqDebounceState, ItemEnum(_PMIC_GPIO_IRQ_DEBOUNCE_STATE_TYPE) -- 11
}
#typev PmicGpioClxInterrupt_c1173 47 "%0%!FUNC! CurrentIrqToDebounce: %10!d!, IrqDebounceTimer: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryActiveInterrupts
{
Irq_ID, ItemLong -- 10
pIrqDebounce->Timer, ItemLong -- 11
}
#typev PmicGpioClxInterrupt_c1179 48 "%0%!FUNC!:1179 CurrentIrqToDebounce: %10!d!, IrqDebounceState: %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryActiveInterrupts
{
Irq_ID, ItemLong -- 10
pIrqDebounce->IrqDebounceState, ItemEnum(_PMIC_GPIO_IRQ_DEBOUNCE_STATE_TYPE) -- 11
}
#typev PmicGpioClxInterrupt_c1050 46 "%0%!FUNC! _ExtendedInterruptStatus - periph_id_spmi: 0x%10!03X!, read mask_for_spmi: 0x%11!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryActiveInterrupts
{
periph_id_spmi, ItemLong -- 10
mask_for_spmi, ItemLong -- 11
}
#typev PmicGpioClxInterrupt_c1035 44 "%0%!FUNC! slave_id: %10!d!, periph_id_pmic: 0x%11!04X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryActiveInterrupts
{
slave_id, ItemLong -- 10
(periph_id_pmic & 0xFFFF), ItemLong -- 11
}
#typev PmicGpioClxInterrupt_c1024 43 "%0%!FUNC! enabled_mask: 0x%10!I64X!, pin_number: %11!d!, Irq_ID: %12!d!, pin: %13!d!, irq_mode: 0x%14!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryActiveInterrupts
{
enabled_mask, ItemLongLongXX -- 10
pin_number, ItemLong -- 11
Irq_ID, ItemLong -- 12
pin, ItemLong -- 13
irq_mode, ItemLong -- 14
}
#typev PmicGpioClxInterrupt_c954 40 "%0%!FUNC! SoftwareInterruptEnabledTracker is enabled" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryActiveInterrupts
{
}
#typev PmicGpioClxInterrupt_c935 39 "%0%!FUNC!:935 Invalid BankId: %10!d!, Error Code = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxQueryActiveInterrupts
{
QueryActiveParameters->BankId, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev PmicGpioClxInterrupt_c926 38 "%0%!FUNC! >>> BankId: %10!d!, QueryActiveEnabledMask: 0x%11!I64X!, PinsEnabledForBank: 0x%12!I64X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryActiveInterrupts
{
QueryActiveParameters->BankId, ItemLong -- 10
QueryActiveParameters->EnabledMask, ItemLongLongXX -- 11
gpioDeviceContext->PmicGpioController.PinsEnabledForBank[QueryActiveParameters->BankId], ItemLongLongXX -- 12
}
#typev PmicGpioClxInterrupt_c2810 124 "%0%!FUNC! Invalid Input param, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxQueryEnabledInterrupts
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2868 129 "%0%!FUNC! _IsInterruptEnabled failed, periph_id_spmi: 0x%10!03X!, SPMI_IRQ_Mask: 0x%11!X!, status = %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryEnabledInterrupts
{
periph_id_spmi, ItemLong -- 10
mask_for_spmi, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev PmicGpioClxInterrupt_c2891 131 "%0%!FUNC! IOCTL IRQ_QUERY_ENABLED_INTERRUPTS failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxQueryEnabledInterrupts
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2907 133 "%0%!FUNC! Cached PinsEnabledForBank: 0x%10!I64X!, Actual Queried EnabledMask: 0x%11!I64X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryEnabledInterrupts
{
gpioDeviceContext->PmicGpioController.PinsEnabledForBank[QueryEnabledParameters->BankId], ItemLongLongXX -- 10
QueryEnabledParameters->EnabledMask, ItemLongLongXX -- 11
}
#typev PmicGpioClxInterrupt_c2898 132 "%0%!FUNC! SlaveID: %10!d!, periph_id_pmic: 0x%11!04X! Periph IRQ Enable: 0x%12!02X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryEnabledInterrupts
{
slave_id, ItemLong -- 10
(periph_id_pmic & 0xFFFF), ItemLong -- 11
IrqEnabledOut.irq_enabled, ItemLong -- 12
}
#typev PmicGpioClxInterrupt_c2874 130 "%0%!FUNC! _IsInterruptEnabled - PERIPH_ID_SPMI: 0x%10!03X!, SPMI_IRQ_Mask: 0x%11!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryEnabledInterrupts
{
periph_id_spmi, ItemLong -- 10
mask_for_spmi, ItemLong -- 11
}
#typev PmicGpioClxInterrupt_c2858 128 "%0%!FUNC! slave_id: %10!d!, periph_id_pmic: 0x%11!04X!, pin: %12!d!, irq_mode: 0x%13!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryEnabledInterrupts
{
slave_id, ItemLong -- 10
(periph_id_pmic & 0xFFFF), ItemLong -- 11
pin, ItemLong -- 12
irq_mode, ItemLong -- 13
}
#typev PmicGpioClxInterrupt_c2845 127 "%0%!FUNC! pins_enabled_for_bank: 0x%10!I64X!, pin_number: %11!d!, Irq_ID: %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryEnabledInterrupts
{
pins_enabled_for_bank, ItemLongLongXX -- 10
pin_number, ItemLong -- 11
Irq_ID, ItemLong -- 12
}
#typev PmicGpioClxInterrupt_c2824 126 "%0%!FUNC! Invalid BankId: %10!d!, Error Code = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxQueryEnabledInterrupts
{
QueryEnabledParameters->BankId, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev PmicGpioClxInterrupt_c2814 125 "%0%!FUNC! >>> Query EnabledMask BankId: %10!d!, EnabledMask: 0x%11!I64X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxQueryEnabledInterrupts
{
QueryEnabledParameters->BankId, ItemLong -- 10
QueryEnabledParameters->EnabledMask, ItemLongLongXX -- 11
}
#typev PmicGpioClxInterrupt_c2162 89 "%0%!FUNC! Invalid Input param, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxReconfigureInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2231 95 "%0%!FUNC! IOCTL_PM_IRQ_RECONFIGURE_INTERRUPT failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxReconfigureInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2200 94 "%0%!FUNC! VIRTUAL_BANK, Actual Irq_ID: %10!d!, IRQ Trigger: %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxReconfigureInterrupt
{
Irq_ID, ItemLong -- 10
IrqConfig.irq_trigger, ItemEnum(_PM_IOCTL_IRQ_TRIG_TYPE) -- 11
}
#typev PmicGpioClxInterrupt_c2188 93 "%0%!FUNC! VIRTUAL_BANK Fake Interrupt Pin" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxReconfigureInterrupt
{
}
#typev PmicGpioClxInterrupt_c2182 92 "%0%!FUNC! Irq_ID: %10!d!, IRQ Trigger: %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxReconfigureInterrupt
{
Irq_ID, ItemLong -- 10
IrqConfig.irq_trigger, ItemEnum(_PM_IOCTL_IRQ_TRIG_TYPE) -- 11
}
#typev PmicGpioClxInterrupt_c2174 91 "%0%!FUNC!:2174 Invalid Input param, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxReconfigureInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2168 90 "%0%!FUNC! >>> BankId: %10!d!, PinNumber: %11!d!, Irq_ID: %12!d!, InterruptMode: %13!d!, Polarity: %14!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxReconfigureInterrupt
{
InterruptParameters->BankId, ItemLong -- 10
InterruptParameters->PinNumber, ItemLong -- 11
Irq_ID, ItemLong -- 12
InterruptParameters->InterruptMode, ItemLong -- 13
InterruptParameters->Polarity, ItemLong -- 14
}
#typev PmicGpioClxInterrupt_c2319 96 "%0%!FUNC! Invalid Input param, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxTriggerInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2361 99 "%0%!FUNC! IOCTL IRQ_TRIGGER_INTERRUPT failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxTriggerInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2331 98 "%0%!FUNC! Invalid Irq_ID: %10!d!, Error Code = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxTriggerInterrupt
{
Irq_ID, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev PmicGpioClxInterrupt_c2323 97 "%0%!FUNC! >>> Trigger Interrupt for Irq_ID: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxTriggerInterrupt
{
Irq_ID, ItemLong -- 10
}
#typev PmicGpioClxInterrupt_c2753 123 "%0%!FUNC! --" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=PmicGpioClxTriggerIrqDebounce
{
}
#typev PmicGpioClxInterrupt_c2703 121 "%0%!FUNC! Invalid Input param, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxTriggerIrqDebounce
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2732 122 "%0%!FUNC! IOCTL IOCTL_PM_IRQ_DEBOUNCE_RT_STATUS_READ failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxTriggerIrqDebounce
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2698 120 "%0%!FUNC! ++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=PmicGpioClxTriggerIrqDebounce
{
}
#typev PmicGpioClxInterrupt_c1981 78 "%0%!FUNC! Invalid Input param, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxUnmaskInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2084 88 "%0%!FUNC! Interrupt Unmasked, Irq_ID: %10!d!, SlaveID: %11!d!, Base Address: 0x%12!04X!, Irq Pin: %13!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxUnmaskInterrupt
{
Irq_ID, ItemLong -- 10
slave_id, ItemLong -- 11
(periph_id_pmic & 0xFFFF), ItemLong -- 12
pin, ItemLong -- 13
}
#typev PmicGpioClxInterrupt_c2080 87 "%0%!FUNC! IOCTL IRQ_UNMASK_INTERRUPT failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxUnmaskInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2048 86 "%0%!FUNC! VIRTUAL_BANK, Actual Irq_ID: %10!d!, IRQ Trigger: %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxUnmaskInterrupt
{
Irq_ID, ItemLong -- 10
IrqUnmask.irq_trigger, ItemEnum(_PM_IOCTL_IRQ_TRIG_TYPE) -- 11
}
#typev PmicGpioClxInterrupt_c2036 85 "%0%!FUNC! VIRTUAL_BANK Fake Interrupt Pin" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxUnmaskInterrupt
{
}
#typev PmicGpioClxInterrupt_c2030 84 "%0%!FUNC! Irq_ID: %10!d!, IRQ Trigger: %11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxUnmaskInterrupt
{
Irq_ID, ItemLong -- 10
IrqUnmask.irq_trigger, ItemEnum(_PM_IOCTL_IRQ_TRIG_TYPE) -- 11
}
#typev PmicGpioClxInterrupt_c2022 83 "%0%!FUNC! PmicGpioClxEnableInterrupt failed, Error Code = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxUnmaskInterrupt
{
status, ItemNTSTATUS -- 10
}
#typev PmicGpioClxInterrupt_c2013 82 "%0%!FUNC! Irq_ID: %10!d! MATCHED, VendorData: 0x%11!X! VendorDataLength: %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxUnmaskInterrupt
{
Irq_ID, ItemLong -- 10
(ULONG)InterruptParameters->VendorData, ItemLong -- 11
InterruptParameters->VendorDataLength, ItemLong -- 12
}
#typev PmicGpioClxInterrupt_c2003 81 "%0%!FUNC! Hibernate RESUME - unmask and enable Irq_ID: 0x%10!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxUnmaskInterrupt
{
Irq_ID, ItemLong -- 10
}
#typev PmicGpioClxInterrupt_c1994 80 "%0%!FUNC! Invalid Irq_ID: %10!d!, Error Code = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=IRQ FUNC=PmicGpioClxUnmaskInterrupt
{
Irq_ID, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev PmicGpioClxInterrupt_c1987 79 "%0%!FUNC! >>> BankId: %10!d!, PinNumber: %11!d!, Irq_ID: %12!d!, InterruptMode: %13!d!, Polarity: %14!d!, PullConfiguration: %15!d!, DebounceTimeout: %16!d!, VendorDataLength: %17!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=IRQ FUNC=PmicGpioClxUnmaskInterrupt
{
InterruptParameters->BankId, ItemLong -- 10
InterruptParameters->PinNumber, ItemLong -- 11
Irq_ID, ItemLong -- 12
InterruptParameters->InterruptMode, ItemLong -- 13
InterruptParameters->Polarity, ItemLong -- 14
InterruptParameters->PullConfiguration, ItemLong -- 15
InterruptParameters->DebounceTimeout, ItemLong -- 16
InterruptParameters->VendorDataLength, ItemLong -- 17
}
#enumv _PM_IOCTL_IRQ_TRIG_TYPE
{
PM_IOCTL_IRQ_TRIG_BE,0x0
PM_IOCTL_IRQ_TRIG_BE_X,0x1
PM_IOCTL_IRQ_TRIG_RE,0x2
PM_IOCTL_IRQ_TRIG_HIGH_LVL,0x3
PM_IOCTL_IRQ_TRIG_FE,0x4
PM_IOCTL_IRQ_TRIG_LOW_LVL,0x5
PM_IOCTL_IRQ_TRIG_DISABLE,0x6
PM_IOCTL_IRQ_TRIG_DISABLE_X,0x7
PM_IOCTL_IRQ_CLEAR,0x8
PM_IOCTL_IRQ_TRIG_DEFAULT,0x9
PM_IOCTL_IRQ_TRIG_INVALID,0xA
}
#enumv _PMIC_GPIO_IRQ_DEBOUNCE_STATE_TYPE
{
PMIC_GPIO_IRQ_DEBOUNCE_STATE_IRQ_IDLE,0x0
PMIC_GPIO_IRQ_DEBOUNCE_STATE_TIMER_STARTED,0x1
PMIC_GPIO_IRQ_DEBOUNCE_STATE_TIMER_ELAPSED,0x2
PMIC_GPIO_IRQ_DEBOUNCE_STATE_IRQ_UNMASKED,0x3
PMIC_GPIO_IRQ_DEBOUNCE_STATE_IRQ_DEBOUNCED,0x4
}
