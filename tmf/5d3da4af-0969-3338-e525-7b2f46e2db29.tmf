// PDB:  qcSensors.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
5d3da4af-0969-3338-e525-7b2f46e2db29 DmfUFramework // SRC=DmfDeviceInit.c MJ= MN=
#typev DmfDeviceInit_c532 11 "%0 [%!FUNC!]WdfMemoryCreate failed! %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_DmfDeviceInitAllocate
{
ntStatus, ItemNTSTATUS -- 10
}
#typev DmfDeviceInit_c509 10 "%0 [%!FUNC!]WdfMemoryCreate failed! %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_DmfDeviceInitAllocate
{
ntStatus, ItemNTSTATUS -- 10
}
// PDB:  qcSensors.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev DmfModuleCollection_c3805 15 "%0 [%!FUNC!]DmfDeviceInit Memory invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
// PDB:  qcSensors.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev DmfModuleCollection_c3805 21 "%0 [%!FUNC!]DMF_DmfControlDeviceInitSetClientDriverDevice should not be called!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
#typev DmfModuleCollection_c3805 20 "%0 [%!FUNC!]DMF_DmfControlDeviceInitSetClientDriverDevice not called!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
#typev DmfModuleCollection_c3805 19 "%0 [%!FUNC!]DMF_DmfDeviceInitHookFileObjectConfig not called!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
#typev DmfModuleCollection_c3805 18 "%0 [%!FUNC!]DMF_DmfDeviceInitHookPowerPolicyEventCallbacks not called!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
#typev DmfModuleCollection_c3805 17 "%0 [%!FUNC!]DMF_DmfDeviceInitHookPnpPowerEventCallbacks not called!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
#typev DmfModuleCollection_c3805 16 "%0 [%!FUNC!]DmfDeviceInit Bridge not enabled" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
#typev DmfModuleCollection_c3805 14 "%0 [%!FUNC!]DmfDeviceInit invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
// PDB:  qSarMgr.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev DmfDeviceInit_c532 11 "%0 [%!FUNC!]WdfMemoryCreate failed! %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_DmfDeviceInitAllocate
{
ntStatus, ItemNTSTATUS -- 10
}
#typev DmfDeviceInit_c509 10 "%0 [%!FUNC!]WdfMemoryCreate failed! %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_DmfDeviceInitAllocate
{
ntStatus, ItemNTSTATUS -- 10
}
// PDB:  qSarMgr.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev DmfModuleCollection_c3805 15 "%0 [%!FUNC!]DmfDeviceInit Memory invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
// PDB:  qSarMgr.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev DmfModuleCollection_c3805 21 "%0 [%!FUNC!]DMF_DmfControlDeviceInitSetClientDriverDevice should not be called!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
#typev DmfModuleCollection_c3805 20 "%0 [%!FUNC!]DMF_DmfControlDeviceInitSetClientDriverDevice not called!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
#typev DmfModuleCollection_c3805 19 "%0 [%!FUNC!]DMF_DmfDeviceInitHookFileObjectConfig not called!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
#typev DmfModuleCollection_c3805 18 "%0 [%!FUNC!]DMF_DmfDeviceInitHookPowerPolicyEventCallbacks not called!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
#typev DmfModuleCollection_c3805 17 "%0 [%!FUNC!]DMF_DmfDeviceInitHookPnpPowerEventCallbacks not called!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
#typev DmfModuleCollection_c3805 16 "%0 [%!FUNC!]DmfDeviceInit Bridge not enabled" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
#typev DmfModuleCollection_c3805 14 "%0 [%!FUNC!]DmfDeviceInit invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DMF_TRACE FUNC=DMF_ModulesCreate
{
}
