// PDB:  qcsubsys850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
7fc5eb40-5b21-33d2-a8eb-b02eef0c5c0b subsys // SRC=amss.c MJ= MN=
#typev amss_c665 73 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: RtlGUIDFromString returned with non-success status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_GetFirmwareID
{
status, ItemNTSTATUS -- 10
}
#typev amss_c653 72 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfRegistryQueryString returned with non-success status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_GetFirmwareID
{
status, ItemNTSTATUS -- 10
}
#typev amss_c642 71 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfStringCreate returned with non-success status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_GetFirmwareID
{
status, ItemNTSTATUS -- 10
}
#typev amss_c626 70 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfDeviceOpenRegistryKey returned with non-success status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_GetFirmwareID
{
status, ItemNTSTATUS -- 10
}
#typev amss_c613 69 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_GetFirmwareID
{
}
#typev amss_c745 79 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_InitializeQmi
{
}
#typev amss_c736 78 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: failed to create DMS client" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_InitializeQmi
{
}
#typev amss_c718 77 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: failed to create SSCTL client" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_InitializeQmi
{
}
#typev amss_c702 76 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: failed to create TMD client" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_InitializeQmi
{
}
#typev amss_c685 75 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: Failure to get common context " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_InitializeQmi
{
}
#typev amss_c679 74 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_InitializeQmi
{
}
#typev amss_c745 79 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_InitializeQmi$fin$0
{
}
#typev amss_c736 78 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: failed to create DMS client" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_InitializeQmi$fin$0
{
}
#typev amss_c718 77 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: failed to create SSCTL client" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_InitializeQmi$fin$0
{
}
#typev amss_c702 76 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: failed to create TMD client" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_InitializeQmi$fin$0
{
}
#typev amss_c685 75 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: Failure to get common context " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_InitializeQmi$fin$0
{
}
#typev amss_c679 74 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_InitializeQmi$fin$0
{
}
#typev amss_c108 13 "%0 [%!LEVEL!] amss.c::%!FUNC!::Loading MBA image and resetting Modem subsystem for unlocking Modem XPU regions for online dump collection." //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_IssueBugcheck
{
}
#typev amss_c98 12 "%0 [%!LEVEL!] amss.c::%!FUNC!::Will bug check the HLOS on behalf of the AMSS subsystem (this is NOT an issue in the AMSS driver)" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_IssueBugcheck
{
}
#typev amss_c97 11 "%0 [%!LEVEL!] amss.c::%!FUNC!::The AMSS subsystem has crashed, please work with the AMSS triage team to continue debugging" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_IssueBugcheck
{
}
#typev amss_c96 10 "%0 [%!LEVEL!] amss.c::%!FUNC!::Detected fatal error from the AMSS subsystem!" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_IssueBugcheck
{
}
#typev amss_c448 59 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_LoadDriverParameters
{
}
#typev amss_c440 58 "%0 [%!LEVEL!] amss.c::%!FUNC!::Using default software image path: %10!s! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
DRIVER_PARAMETER_IMAGE2_PATH_DEFAULT, ItemWString -- 10
}
#typev amss_c439 57 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: We will load the subsystem image from the default path (which may differ from where the images actually are)! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
}
#typev amss_c435 56 "%0 [%!LEVEL!] amss.c::%!FUNC!::We are using the software image %10!s! " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
commonContext->ImagePath[1], ItemWString -- 10
}
#typev amss_c432 55 "%0 [%!LEVEL!] amss.c::%!FUNC!::InsertCorrectDriveLetter failed!  Last status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
status, ItemNTSTATUS -- 10
}
#typev amss_c420 54 "%0 [%!LEVEL!] amss.c::%!FUNC!::For v2 hardware, get firmware image from default path %10!s! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
DRIVER_PARAMETER_IMAGE1_PATH_DEFAULT, ItemWString -- 10
}
#typev amss_c419 53 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: We will load the subsystem firmware image from the default path (which may differ from where the images actually are)! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
}
#typev amss_c414 52 "%0 [%!LEVEL!] amss.c::%!FUNC!::We are using the firmware image %10!s! " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
commonContext->ImagePath[0], ItemWString -- 10
}
#typev amss_c411 51 "%0 [%!LEVEL!] amss.c::%!FUNC!::InsertCorrectDriveLetter failed!  Last status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
status, ItemNTSTATUS -- 10
}
#typev amss_c401 50 "%0 [%!LEVEL!] amss.c::%!FUNC!::Successfully opened AMSS root registry key " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
}
#typev amss_c394 49 "%0 [%!LEVEL!] amss.c::%!FUNC!::Warning, we will load the subsystem image from the default path (which may differ from where the images actually are)! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
}
#typev amss_c393 48 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfDeviceOpenRegistryKey returned with status %10!s! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
status, ItemNTSTATUS -- 10
}
#typev amss_c381 47 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: LoadBufferConfig returned with status %10!s! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
status, ItemNTSTATUS -- 10
}
#typev amss_c364 45 "%0 [%!LEVEL!] amss.c::%!FUNC!::Releasing hKeyParams " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
}
#typev amss_c359 44 "%0 [%!LEVEL!] amss.c::%!FUNC!::SkipMBAReloadBeforeBugcheck reg key value set to %10!u!" //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
deviceContext->SkipMBAReloadBeforeBugcheck, ItemLong -- 10
}
#typev amss_c352 43 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfRegistryQueryULong returned with status %10!s! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
status, ItemNTSTATUS -- 10
}
#typev amss_c347 42 "%0 [%!LEVEL!] amss.c::%!FUNC!::DebugMSS reg key value set to %10!u! " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
deviceContext->DebugMSS, ItemLong -- 10
}
#typev amss_c344 41 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfRegistryQueryULong returned with status %10!s! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
status, ItemNTSTATUS -- 10
}
#typev amss_c338 40 "%0 [%!LEVEL!] amss.c::%!FUNC!::Modem load delay set to %10!u! " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
commonContext->ModemLoadDelay, ItemLong -- 10
}
#typev amss_c335 39 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfRegistryQueryULong returned with status %10!s! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
status, ItemNTSTATUS -- 10
}
#typev amss_c329 38 "%0 [%!LEVEL!] amss.c::%!FUNC!::Child removal timeout set to %10!u! " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
commonContext->ChildRemovalTimeout, ItemLong -- 10
}
#typev amss_c326 37 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfRegistryQueryULong returned with status %10!s! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
status, ItemNTSTATUS -- 10
}
#typev amss_c320 36 "%0 [%!LEVEL!] amss.c::%!FUNC!::Supervision timeout set to %10!u! " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
deviceContext->LoadTimeout, ItemLong -- 10
}
#typev amss_c317 35 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfRegistryQueryULong returned with status %10!s! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
status, ItemNTSTATUS -- 10
}
#typev amss_c299 32 "%0 [%!LEVEL!] amss.c::%!FUNC!::Modem Restart Crash Detection will not be enabled " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
}
#typev amss_c303 33 "%0 [%!LEVEL!] amss.c::%!FUNC!::Modem Restart Crash Detection will be enabled " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
}
#typev amss_c308 34 "%0 [%!LEVEL!] amss.c::%!FUNC!::Modem Restart Crash Detection flag is an unknown value; defaulting to not enabled " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
}
#typev amss_c291 31 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfRegistryQueryULong returned with status %10!s! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
status, ItemNTSTATUS -- 10
}
#typev amss_c285 30 "%0 [%!LEVEL!] amss.c::%!FUNC!::RestartTimer = %10!u!" //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
commonContext->RestartTimer, ItemLong -- 10
}
#typev amss_c282 29 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: Default value will be used for RestartTimer " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
}
#typev amss_c276 28 "%0 [%!LEVEL!] amss.c::%!FUNC!::MaxRestartCount = %10!u!" //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
commonContext->MaxRestartCount, ItemLong -- 10
}
#typev amss_c273 27 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfRegistryQueryULong returned with status %10!s! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
status, ItemNTSTATUS -- 10
}
#typev amss_c254 24 "%0 [%!LEVEL!] amss.c::%!FUNC!::Registry Override Detected: Modem SSR will not be enabled " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
}
#typev amss_c259 25 "%0 [%!LEVEL!] amss.c::%!FUNC!::Registry Override Detected: Modem SSR will be enabled " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
}
#typev amss_c264 26 "%0 [%!LEVEL!] amss.c::%!FUNC!::Registry Override Detected: Modem SSR flag is an unknown value; sticking with value read from ACPI " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
}
#typev amss_c247 23 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfRegistryQueryULong returned with status %10!s! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
status, ItemNTSTATUS -- 10
}
#typev amss_c235 22 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfDriverOpenParametersRegistryKey returned with status %10!s! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
status, ItemNTSTATUS -- 10
}
#typev amss_c210 21 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: Unable to read the graceful shutdown flag from registry, graceful shutdown for the modem will be disabled " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_LoadDriverParameters
{
}
#typev amss_c202 20 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_LoadDriverParameters
{
}
#typev amss_c791 85 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_QmiIndicationCallback
{
}
#typev amss_c787 84 "%0 [%!LEVEL!] amss.c::%!FUNC!::Received an unknown indication: 0x%10!Ix! in %!FUNC! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_QmiIndicationCallback
{
msg_id, ItemPtr -- 10
}
#typev amss_c783 83 "%0 [%!LEVEL!] amss.c::%!FUNC!::Received QMI_SSCTL_SUBSYS_EVENT_COMP_IND_V02 " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_QmiIndicationCallback
{
}
#typev amss_c778 82 "%0 [%!LEVEL!] amss.c::%!FUNC!::Received the QMI_SSCTL_SHUTDOWN_READY_IND_V02 indication, enqueueing a state machine pulse... " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_QmiIndicationCallback
{
}
#typev amss_c769 81 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: Failure to get device common context " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_QmiIndicationCallback
{
}
#typev amss_c762 80 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_QmiIndicationCallback
{
}
#typev amss_c173 19 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_ReadRegistryKey
{
}
#typev amss_c170 18 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WDF string creation failed " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_ReadRegistryKey
{
}
#typev amss_c165 17 "%0 [%!LEVEL!] amss.c::%!FUNC!::Failed to query registry key %10!s! " //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=AMSS_ReadRegistryKey
{
regKey->Buffer, ItemWString -- 10
}
#typev amss_c160 16 "%0 [%!LEVEL!] amss.c::%!FUNC!::Registry Key: %10!s!, Value: %11!s! " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_ReadRegistryKey
{
regKey->Buffer, ItemWString -- 10
unicodeString->Buffer, ItemWString -- 11
}
#typev amss_c148 15 "%0 [%!LEVEL!] amss.c::%!FUNC!::Reading registry key %10!s! " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_ReadRegistryKey
{
regKey->Buffer, ItemWString -- 10
}
#typev amss_c141 14 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_ReadRegistryKey
{
}
#typev amss_c869 93 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_SendQMILPMRequest
{
}
#typev amss_c863 92 "%0 [%!LEVEL!] amss.c::%!FUNC!::Successfully placed the modem into LPM " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_SendQMILPMRequest
{
}
#typev amss_c857 91 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: QMI_DMS_SET_OPERATING_MODE_REQ_V01 retured error code, status 0x%10!x!" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_SendQMILPMRequest
{
setOperatingModeRspMsg.resp.error, ItemLong -- 10
}
#typev amss_c850 90 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: qmi_client_send_msg_sync unsuccessful for QMI_DMS_SET_OPERATING_MODE_REQ_V01, status 0x%10!x!" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_SendQMILPMRequest
{
qmiRet, ItemLong -- 10
}
#typev amss_c829 89 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: QmiServiceInit failed with status 0x%10!x!" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_SendQMILPMRequest
{
status, ItemLong -- 10
}
#typev amss_c818 88 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: Failure to get our QMI client info " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_SendQMILPMRequest
{
}
#typev amss_c808 87 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: Failure to get device common context " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_SendQMILPMRequest
{
}
#typev amss_c804 86 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_SendQMILPMRequest
{
}
#typev amss_c959 102 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_SendQMISubsystemShutdownRequest
{
}
#typev amss_c953 101 "%0 [%!LEVEL!] [%10!s!] amss.c::%!FUNC!::Successfully sent the modem a shutdown request " //   LEVEL=LOG_CRIT FLAGS=AMSS SUBSYSTEM=cmnContext->type FUNC=AMSS_SendQMISubsystemShutdownRequest
{
SUBSYSTEM, ItemEnum(_SOC_SUBSYSTEM_TYPE) -- 10
}
#typev amss_c947 100 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: QMI_SSCTL_SHUTDOWN_REQ_V02 retured error code, status 0x%10!x!" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_SendQMISubsystemShutdownRequest
{
subsystemShutdownRspMsg.resp.error, ItemLong -- 10
}
#typev amss_c940 99 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: qmi_client_send_msg_sync unsuccessful for QMI_SSCTL_SHUTDOWN_REQ_V02, status 0x%10!x!" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_SendQMISubsystemShutdownRequest
{
qmiRet, ItemLong -- 10
}
#typev amss_c918 98 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: QmiServiceInit failed for SSCTL with status 0x%10!x!" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_SendQMISubsystemShutdownRequest
{
status, ItemLong -- 10
}
#typev amss_c908 97 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: Failure to get our SSCTL client info" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_SendQMISubsystemShutdownRequest
{
}
#typev amss_c897 96 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: Failure to get device context " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_SendQMISubsystemShutdownRequest
{
}
#typev amss_c891 95 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: Failure to get common context " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_SendQMISubsystemShutdownRequest
{
}
#typev amss_c887 94 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_SendQMISubsystemShutdownRequest
{
}
#typev amss_c582 68 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_WriteNewImagePaths
{
status, ItemNTSTATUS -- 10
}
#typev amss_c566 67 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfRegistryAssignString returned with non-success status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_WriteNewImagePaths
{
status, ItemNTSTATUS -- 10
}
#typev amss_c554 66 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfStringCreate returned with non-success status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_WriteNewImagePaths
{
status, ItemNTSTATUS -- 10
}
#typev amss_c543 65 "%0 [%!LEVEL!] amss.c::%!FUNC!::Received a new PMI path in AMSS_WriteNewImagePaths, path: %10!s! " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_WriteNewImagePaths
{
newPMIPath, ItemWString -- 10
}
#typev amss_c526 64 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfRegistryAssignString returned with non-success status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_WriteNewImagePaths
{
status, ItemNTSTATUS -- 10
}
#typev amss_c514 63 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfStringCreate returned with non-success status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_WriteNewImagePaths
{
status, ItemNTSTATUS -- 10
}
#typev amss_c503 62 "%0 [%!LEVEL!] amss.c::%!FUNC!::Received a new MBA path in AMSS_WriteNewImagePaths, path: %10!s! " //   LEVEL=LOG_INFO FLAGS=AMSS FUNC=AMSS_WriteNewImagePaths
{
newMBAPath, ItemWString -- 10
}
#typev amss_c493 61 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfDeviceOpenRegistryKey returned with non-success status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=AMSS_WriteNewImagePaths
{
status, ItemNTSTATUS -- 10
}
#typev amss_c480 60 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=AMSS_WriteNewImagePaths
{
}
#typev amss_c1281 123 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CsqAcquireLock
{
}
#typev amss_c1274 122 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CsqAcquireLock
{
}
#typev amss_c1312 127 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CsqCompleteCanceledIrp
{
}
#typev amss_c1307 126 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CsqCompleteCanceledIrp
{
}
#typev amss_c1215 116 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CsqInsertIrpEx
{
}
#typev amss_c1208 115 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CsqInsertIrpEx
{
}
#typev amss_c1261 121 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CsqPeekNextIrp
{
}
#typev amss_c1247 120 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CsqPeekNextIrp
{
}
#typev amss_c1299 125 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CsqReleaseLock
{
}
#typev amss_c1292 124 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CsqReleaseLock
{
}
#typev amss_c1231 118 "%0 [%!LEVEL!] amss.c::%!FUNC!::CsqRemoveIrp: Skipping removal of IRP %10!p! as its not found in CSQ!" //   LEVEL=LOG_WARN FLAGS=AMSS FUNC=CsqRemoveIrp
{
Irp, ItemPtr -- 10
}
#typev amss_c1236 119 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CsqRemoveIrp
{
}
#typev amss_c1224 117 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=CsqRemoveIrp
{
}
#typev amss_c1093 113 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exception!  Last status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=ThermalMitigationInit
{
status, ItemNTSTATUS -- 10
}
#typev amss_c1105 114 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=ThermalMitigationInit
{
status, ItemNTSTATUS -- 10
}
#typev amss_c1035 109 "%0 [%!LEVEL!] amss.c::%!FUNC!:: Invalid  data!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=ThermalMitigationInit
{
}
#typev amss_c1071 112 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfMemoryCreate returned with status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=ThermalMitigationInit
{
status, ItemNTSTATUS -- 10
}
#typev amss_c1059 111 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfMemoryCreate returned with status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=ThermalMitigationInit
{
status, ItemNTSTATUS -- 10
}
#typev amss_c1045 110 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: ThermalMitigationNumValues is 0, will not init Thermal Mitigation Information" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=ThermalMitigationInit
{
}
#typev amss_c1027 108 "%0 [%!LEVEL!] amss.c::%!FUNC!:: Failed WdfRegistryQueryMemory with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=ThermalMitigationInit
{
status, ItemNTSTATUS -- 10
}
#typev amss_c1020 107 "%0 [%!LEVEL!] amss.c::%!FUNC!:: Failed WdfRegistryOpenKey with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=ThermalMitigationInit
{
status, ItemNTSTATUS -- 10
}
#typev amss_c1010 106 "%0 [%!LEVEL!] amss.c::%!FUNC!:: Failed WdfDeviceOpenRegistryKey with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=ThermalMitigationInit
{
status, ItemNTSTATUS -- 10
}
#typev amss_c997 105 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: Failure to copy thermal device name " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=ThermalMitigationInit
{
}
#typev amss_c981 104 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: Failure to get device context " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=ThermalMitigationInit
{
}
#typev amss_c977 103 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=ThermalMitigationInit
{
}
#typev amss_c1093 113 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exception!  Last status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=SUBSYS FUNC=ThermalMitigationInit$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev amss_c1105 114 "%0 [%!LEVEL!] amss.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=ThermalMitigationInit$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev amss_c1035 109 "%0 [%!LEVEL!] amss.c::%!FUNC!:: Invalid  data!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=ThermalMitigationInit$fin$0
{
}
#typev amss_c1071 112 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfMemoryCreate returned with status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=ThermalMitigationInit$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev amss_c1059 111 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: WdfMemoryCreate returned with status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=ThermalMitigationInit$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev amss_c1045 110 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: ThermalMitigationNumValues is 0, will not init Thermal Mitigation Information" //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=ThermalMitigationInit$fin$0
{
}
#typev amss_c1027 108 "%0 [%!LEVEL!] amss.c::%!FUNC!:: Failed WdfRegistryQueryMemory with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=ThermalMitigationInit$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev amss_c1020 107 "%0 [%!LEVEL!] amss.c::%!FUNC!:: Failed WdfRegistryOpenKey with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=ThermalMitigationInit$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev amss_c1010 106 "%0 [%!LEVEL!] amss.c::%!FUNC!:: Failed WdfDeviceOpenRegistryKey with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=ThermalMitigationInit$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev amss_c997 105 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: Failure to copy thermal device name " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=ThermalMitigationInit$fin$0
{
}
#typev amss_c981 104 "%0 [%!LEVEL!] amss.c::%!FUNC!::FAILURE: Failure to get device context " //   LEVEL=LOG_ERR_ FLAGS=AMSS FUNC=ThermalMitigationInit$fin$0
{
}
#typev amss_c977 103 "%0 [%!LEVEL!] amss.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=ThermalMitigationInit$fin$0
{
}
#enumv _SOC_SUBSYSTEM_TYPE
{
SOC_SUBSYS_WIRELESS_MODEM,0x0
SOC_SUBSYS_AUDIO_DSP,0x1
SOC_SUBSYS_WIRELSS_CONNECTIVITY,0x2
SOC_SUBSYS_SENSORS,0x3
SOC_SUBSYS_COMPUTE_DSP,0x4
SOC_SUBSYS_SECURE_PROC,0x5
SOC_SUBSYS_VENDOR_DEFINED,0x10000
}
