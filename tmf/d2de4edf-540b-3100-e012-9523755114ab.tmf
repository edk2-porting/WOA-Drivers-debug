// PDB:  qcSensors.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
d2de4edf-540b-3100-e012-9523755114ab qcSensors // SRC=worker.cpp MJ= MN=
#typev worker_cpp17 11 "%0 %!FUNC! FunctionExit: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit SENSOREXIT=STATUS_SUCCESS FUNC=worker::worker
{
__status, ItemNTSTATUS -- 10
}
#typev worker_cpp15 10 "%0 %!FUNC! FunctionEnter" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=worker::worker
{
}
#typev worker_cpp32 14 "%0 %!FUNC! FunctionExit: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit SENSOREXIT=STATUS_SUCCESS FUNC=worker::~worker
{
__status, ItemNTSTATUS -- 10
}
#typev worker_cpp26 13 "%0 %!FUNC! : [ERROR] (at line - 26 ) - cannot use worker's thread to destroy the worker object" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DEBUG_SPEW FUNC=worker::~worker
{
}
#typev worker_cpp22 12 "%0 %!FUNC! FunctionEnter" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=worker::~worker
{
}
#typev worker_cpp43 18 "%0 %!FUNC! FunctionExit: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit SENSOREXIT=STATUS_SUCCESS FUNC=worker::add_task
{
__status, ItemNTSTATUS -- 10
}
#typev worker_cpp40 17 "%0 %!FUNC! : Lock Acquired & Pushed Task..." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DEBUG_SPEW FUNC=worker::add_task
{
}
#typev worker_cpp37 16 "%0 %!FUNC! : Trying to Acquire the lock..." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DEBUG_SPEW FUNC=worker::add_task
{
}
#typev worker_cpp36 15 "%0 %!FUNC! FunctionEnter" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=worker::add_task
{
}
#typev worker_cpp81 26 "%0 %!FUNC! : [ERROR] (at line - 81 ) - Exception occured,  task failed, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DEBUG_SPEW FUNC=worker::run
{
e.what(), ItemString -- 10
}
#typev worker_cpp90 29 "%0 %!FUNC! FunctionExit: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit SENSOREXIT=STATUS_SUCCESS FUNC=worker::run
{
__status, ItemNTSTATUS -- 10
}
#typev worker_cpp86 28 "%0 %!FUNC! : Lock Acquired..." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DEBUG_SPEW FUNC=worker::run
{
}
#typev worker_cpp84 27 "%0 %!FUNC! : Trying to acquire Lock..." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DEBUG_SPEW FUNC=worker::run
{
}
#typev worker_cpp69 25 "%0 %!FUNC! FunctionEnter" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=worker::run
{
}
#typev worker_cpp81 26 "%0 %!FUNC! : [ERROR] (at line - 81 ) - Exception occured,  task failed, %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DEBUG_SPEW FUNC=`worker::run'::`1'::catch$1
{
e.what(), ItemString -- 10
}
#typev worker_cpp90 29 "%0 %!FUNC! FunctionExit: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit SENSOREXIT=STATUS_SUCCESS FUNC=`worker::run'::`1'::catch$1
{
__status, ItemNTSTATUS -- 10
}
#typev worker_cpp86 28 "%0 %!FUNC! : Lock Acquired..." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DEBUG_SPEW FUNC=`worker::run'::`1'::catch$1
{
}
#typev worker_cpp84 27 "%0 %!FUNC! : Trying to acquire Lock..." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DEBUG_SPEW FUNC=`worker::run'::`1'::catch$1
{
}
#typev worker_cpp69 25 "%0 %!FUNC! FunctionEnter" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`worker::run'::`1'::catch$1
{
}
#typev worker_cpp58 24 "%0 %!FUNC! FunctionExit: %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit SENSOREXIT=STATUS_SUCCESS FUNC=worker::wait_for_signal
{
__status, ItemNTSTATUS -- 10
}
#typev worker_cpp56 23 "%0 %!FUNC! : Completed _cv.wait..." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DEBUG_SPEW FUNC=worker::wait_for_signal
{
}
#typev worker_cpp54 22 "%0 %!FUNC! : Calling _cv.wait..." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DEBUG_SPEW FUNC=worker::wait_for_signal
{
}
#typev worker_cpp51 21 "%0 %!FUNC! : Lock Acquired..." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DEBUG_SPEW FUNC=worker::wait_for_signal
{
}
#typev worker_cpp49 20 "%0 %!FUNC! : Trying to Acquire the lock..." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DEBUG_SPEW FUNC=worker::wait_for_signal
{
}
#typev worker_cpp48 19 "%0 %!FUNC! FunctionEnter" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=worker::wait_for_signal
{
}
