// PDB:  qcauddev7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:34:218 (UTC) [tracepdb]
0e4062ca-6636-3a47-6228-b714cb622bf2 vcxproj // SRC=swr_driver.c MJ= MN=
#typev swr_driver_c440 21 "%0=SWR:<swr_FIFO_read RC:%10!d!.>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_FIFO_read
{
rc, ItemLong -- 10
}
#typev swr_driver_c432 20 "%0=SWR:<token verification failed!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_FIFO_read
{
}
#typev swr_driver_c419 19 "%0=SWR:<read to read fifo>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_FIFO_read
{
}
#typev swr_driver_c410 18 "%0=SWR:<read from fifo successful, verifying token>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_FIFO_read
{
}
#typev swr_driver_c377 17 "%0=SWR:<read status>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_FIFO_read
{
}
#typev swr_driver_c357 16 "%0=SWR:<writing to read fifo>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_FIFO_read
{
}
#typev swr_driver_c353 15 "%0=CDC: <swr_FIFO_read: swr_bus_clock_start_or_resume failed, Exiting return_code=(0x%10!x!)> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_FIFO_read
{
rc, ItemLong -- 10
}
#typev swr_driver_c320 14 "%0-SWR:<swr_FIFO_write RC:%10!d!.>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_FIFO_write
{
rc, ItemLong -- 10
}
#typev swr_driver_c277 13 "%0=CDC: <swr_FIFO_write: swr_bus_clock_start_or_resume failed, Exiting return_code=(0x%10!x!)> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_FIFO_write
{
rc, ItemLong -- 10
}
#typev swr_driver_c269 12 "%0=SWR:<write to write fifo: device = %10!u!, address = 0x%11!x!, data = 0x%12!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_FIFO_write
{
slave, ItemLong -- 10
write.reg, ItemLong -- 11
write.data, ItemLong -- 12
}
#typev swr_driver_c268 11 "%0+SWR:<write to write fifo>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_FIFO_write
{
}
#typev swr_driver_c1883 91 "%0-SWR:<swr_HW_init RC:%10!d!.>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_HW_init
{
rc, ItemLong -- 10
}
#typev swr_driver_c1878 90 "%0=SWR:<could not generate master frame>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_HW_init
{
}
#typev swr_driver_c1870 89 "%0=SWR:<wait for FRM_GEN_ENABLED>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_HW_init
{
}
#typev swr_driver_c1856 88 "%0=SWR:<enable soundwire master>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_HW_init
{
}
#typev swr_driver_c1811 86 "%0=SWR:<enable autoenumeration>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_HW_init
{
}
#typev swr_driver_c1757 85 "%0=SWR:<configure no pings>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_HW_init
{
}
#typev swr_driver_c1744 84 "%0+SWR:<swr_HW_init swr_type = 0x%10!x! >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_HW_init
{
type, ItemLong -- 10
}
#typev swr_driver_c1923 97 "%0-SWR:<swr_HW_reset>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_HW_reset
{
}
#typev swr_driver_c1917 96 "%0=SWR:<reset the bus for all slaves>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_HW_reset
{
}
#typev swr_driver_c1912 95 "%0=SWR:<reset master interface once>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_HW_reset
{
}
#typev swr_driver_c1904 94 "%0-SWR:<swr_HW_reset>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_HW_reset
{
}
#typev swr_driver_c1903 93 "%0=SWR:<could not read from master, check EXT clk is present>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_HW_reset
{
}
#typev swr_driver_c1895 92 "%0+SWR:<swr_HW_reset swr_type = 0x%10!x! >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_HW_reset
{
type, ItemLong -- 10
}
#typev swr_driver_c1639 81 "%0=SWR:<master clash detected 0X%10!x!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_IRQ_process
{
test_bit, ItemLong -- 10
}
#typev swr_driver_c1699 83 "%0-SWR:<swr_IRQ_process swr_type = 0x%10!x! >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_IRQ_process
{
type, ItemLong -- 10
}
#typev swr_driver_c1628 66 "%0=SWR:<auto enum error, recovering>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_IRQ_process
{
}
#typev swr_driver_c1673 82 "%0=SWR:<non processed IRQ 0X%10!x!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_IRQ_process
{
test_bit, ItemLong -- 10
}
#typev swr_driver_c1603 80 "%0=SWR:<swr_IRQ_process read 0X%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_IRQ_process
{
to_process, ItemLong -- 10
}
#typev swr_driver_c1584 79 "%0=CDC: <swr_IRQ_process swr_vote_for_clock failed, Exiting return_code=(0x%10!x!)> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_IRQ_process
{
rc, ItemLong -- 10
}
#typev swr_driver_c1573 78 "%0+SWR:<swr_IRQ_process swr_type = 0x%10!x! >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_IRQ_process
{
type, ItemLong -- 10
}
#typev swr_driver_c2345 122 "%0-SWR:<master port number is invalid>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_add_stream_to_slave
{
}
#typev swr_driver_c2350 123 "%0-SWR:<slave port number is invalid>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_add_stream_to_slave
{
}
#typev swr_driver_c2461 131 "%0-SWR:<swr_add_stream_to_slave>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_add_stream_to_slave
{
}
#typev swr_driver_c2442 130 "%0=SWR:<clk speed is 9.6MHz, using preconfigured allocation table>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_add_stream_to_slave
{
}
#typev swr_driver_c2384 128 "%0=SWR:<changing framesize to 16*50 no clock div>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_add_stream_to_slave
{
}
#typev swr_driver_c2370 126 "%0=SWR:<stream doesn't fit on current frame>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_add_stream_to_slave
{
}
#typev swr_driver_c2362 125 "%0=SWR:<configuration is delayed, no changes on HW will occur at this time>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_add_stream_to_slave
{
}
#typev swr_driver_c2355 124 "%0-SWR:<no channels are enabled>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_add_stream_to_slave
{
}
#typev swr_driver_c2340 121 "%0-SWR:<driver not initialized>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_add_stream_to_slave
{
}
#typev swr_driver_c2335 120 "%0-SWR:<slave pointer is null>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_add_stream_to_slave
{
}
#typev swr_driver_c2330 119 "%0-SWR:<core not enabled!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_add_stream_to_slave
{
}
#typev swr_driver_c2327 118 "%0+SWR:<swr_add_stream_to_slave mport= %10!u! sport= %11!u! type = %12!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_add_stream_to_slave
{
config->port_m, ItemLong -- 10
config->port_s, ItemLong -- 11
type, ItemLong -- 12
}
#typev swr_driver_c1300 61 "%0-SWR:<swr_bank_switch swr_type = 0x%10!x! >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bank_switch
{
type, ItemLong -- 10
}
#typev swr_driver_c1283 58 "%0=SWR:<writing down master frame config(%10!d!,%11!d!)>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bank_switch
{
swr_master_config_p[type]->frame_format.cols, ItemLong -- 10
swr_master_config_p[type]->frame_format.rows, ItemLong -- 11
}
#typev swr_driver_c1280 60 "%0=SWR:<bank = %10!u!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bank_switch
{
new_bank, ItemLong -- 10
}
#typev swr_driver_c1275 59 "%0+SWR:<swr_bank_switch swr_type = 0x%10!x! >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bank_switch
{
type, ItemLong -- 10
}
#typev swr_driver_c751 36 "%0=SWR:<swr_bus_clock_pause Exiting: swrtype = 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_pause
{
type, ItemLong -- 10
}
#typev swr_driver_c709 35 "%0=SWR:<swr_bus_clock_pause Entering: swrtype = 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_pause
{
type, ItemLong -- 10
}
#typev swr_driver_c865 46 "%0=SWR:<swr_bus_clock_resume Exiting: swrtype = 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_resume
{
type, ItemLong -- 10
}
#typev swr_driver_c834 45 "%0=SWR:<swr_bus_clock_resume Entering: swrtype = 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_resume
{
type, ItemLong -- 10
}
#typev swr_driver_c543 24 "%0=CDC: <swr_bus_clock_start swr_vote_for_clock failed, Exiting return_code=(0x%10!x!)> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_bus_clock_start
{
rc, ItemLong -- 10
}
#typev swr_driver_c532 23 "%0=CDC: <swr_bus_clock_start, Error activating bus, Exiting return_code=(0x%10!x!)> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_bus_clock_start
{
rc, ItemLong -- 10
}
#typev swr_driver_c521 22 "%0=SWR:<bus clk start>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_start
{
}
#typev swr_driver_c817 44 "%0=SWR:<swr_bus_clock_start_or_resume Exiting: swrtype = 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_start_or_resume
{
type, ItemLong -- 10
}
#typev swr_driver_c801 43 "%0=CDC: <swr_bus_clock_start_or_resume swr_bus_clock_start failed, Exiting return_code=(0x%10!x!)> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_bus_clock_start_or_resume
{
rc, ItemLong -- 10
}
#typev swr_driver_c797 42 "%0=SWR:<swr_bus_clock_start_or_resume start clock: swrtype = 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_start_or_resume
{
type, ItemLong -- 10
}
#typev swr_driver_c787 41 "%0=SWR:<swr_bus_clock_start_or_resume Joining soundwire clock stop thread: swrtype = 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_start_or_resume
{
type, ItemLong -- 10
}
#typev swr_driver_c783 40 "%0=SWR:<swr_bus_clock_start_or_resume Joining verification swrtype = 0x%10!x!, swr_thread_handle %11!p!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_start_or_resume
{
type, ItemLong -- 10
swr_driver[type].swr_thread_handle, ItemPtr -- 11
}
#typev swr_driver_c775 39 "%0=CDC: <swr_bus_clock_start_or_resume swr_vote_for_clock failed, Exiting return_code=(0x%10!x!)> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_bus_clock_start_or_resume
{
rc, ItemLong -- 10
}
#typev swr_driver_c766 38 "%0=SWR:<swr_bus_clock_start_or_resume: swrtype = 0x%10!x!, swr_bus_clk_needed = 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_start_or_resume
{
type, ItemLong -- 10
swr_driver[type].swr_bus_clk_needed, ItemLong -- 11
}
#typev swr_driver_c762 37 "%0=SWR:<swr_bus_clock_start_or_resume Entering: swrtype = 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_start_or_resume
{
type, ItemLong -- 10
}
#typev swr_driver_c605 27 "%0=SWR:<swr_bus_clock_stop exiting: swrtype = 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_stop
{
type, ItemLong -- 10
}
#typev swr_driver_c582 26 "%0=CDC: <swr_bus_clock_stop, Error activating bus, Exiting return_code=(0x%10!x!)> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_bus_clock_stop
{
rc, ItemLong -- 10
}
#typev swr_driver_c577 25 "%0=SWR:<swr_bus_clock_stop: swrtype = 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_stop
{
type, ItemLong -- 10
}
#typev swr_driver_c690 34 "%0=SWR:<swr_bus_clock_stop_or_pause Exiting: swrtype = 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_stop_or_pause
{
type, ItemLong -- 10
}
#typev swr_driver_c684 33 "%0=SWR:<swr_bus_clock_stop_or_pause calling clock pause swrtype = 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_stop_or_pause
{
type, ItemLong -- 10
}
#typev swr_driver_c679 32 "%0=SWR:<swr_bus_clock_stop_or_pause creating thread for clock stop: swrtype = 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_stop_or_pause
{
type, ItemLong -- 10
}
#typev swr_driver_c670 31 "%0=SWR:<swr_bus_clock_stop_or_pause Entering: swrtype = 0x%10!x!, swr_bus_clk_needed = 0x%11!x! >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_bus_clock_stop_or_pause
{
type, ItemLong -- 10
swr_driver[type].swr_bus_clk_needed, ItemLong -- 11
}
#typev swr_driver_c1422 68 "%0-SWR:<swr_deinint_slave_list swr_type = 0x%10!x! >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_deinint_slave_list
{
type, ItemLong -- 10
}
#typev swr_driver_c1407 67 "%0+SWR:<swr_deinint_slave_list swr_type = 0x%10!x! >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_deinint_slave_list
{
type, ItemLong -- 10
}
#typev swr_driver_c2225 109 "%0-SWR:<swr_deinit swr_type %10!d!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_deinit
{
type, ItemLong -- 10
}
// PDB:  qcauddev7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:34:218 (UTC) [tracepdb]
#typev swr_driver_c2196 108 "%0=SWR:<swr_deinit Joining soundwire clock stop thread: swrtype = 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_deinit
{
type, ItemLong -- 10
}
#typev swr_driver_c2165 107 "%0=SWR:<driver not initialized>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_deinit
{
}
#typev swr_driver_c2162 106 "%0+SWR:<swr_deinit swr_type %10!d!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_deinit
{
type, ItemLong -- 10
}
#typev swr_driver_c2112 102 "%0-SWR:<swr_init swr_type %10!d!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_init
{
type, ItemLong -- 10
}
#typev swr_driver_c2060 101 "%0=SWR:<initializing soundwire driver>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_init
{
}
#typev swr_driver_c2057 100 "%0+SWR:<swr_init swr_type %10!d!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_init
{
type, ItemLong -- 10
}
#typev swr_driver_c214 10 "%0=CDC: <program_slew_rate_tlmm, Error activating bus, Exiting return_code=(0x%10!x!)> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_intf_configure
{
rc, ItemLong -- 10
}
#typev swr_driver_c1349 63 "%0=SWR:<client didn't provide a callback>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_notify_slave_pend_IRQ
{
}
#typev swr_driver_c1345 62 "%0=SWR:<notifying client about slave IRQ swr_type = 0x%10!x! >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_notify_slave_pend_IRQ
{
type, ItemLong -- 10
}
#typev swr_driver_c1360 65 "%0=SWR:<client didn't provide a callback>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_notify_slave_update
{
}
#typev swr_driver_c1356 64 "%0=SWR:<notifying client about status change>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_notify_slave_update
{
}
#typev swr_driver_c1560 77 "%0-SWR:<swr_process_slave_status_IRQ swr_type = 0x%10!x! >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_process_slave_status_IRQ
{
type, ItemLong -- 10
}
#typev swr_driver_c1494 74 "%0=SWR:<client notified, deleting slave info, swr_type = 0x%10!x! >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_process_slave_status_IRQ
{
type, ItemLong -- 10
}
#typev swr_driver_c1489 73 "%0=SWR:<slave detached from bus, swr_type = 0x%10!x! >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_process_slave_status_IRQ
{
type, ItemLong -- 10
}
#typev swr_driver_c1502 75 "%0=SWR:<slave attached to bus, swr_type = 0x%10!x! >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_process_slave_status_IRQ
{
type, ItemLong -- 10
}
#typev swr_driver_c1537 76 "%0=SWR:<slave status not identified, swr_type = 0x%10!x! >" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_process_slave_status_IRQ
{
type, ItemLong -- 10
}
#typev swr_driver_c1483 72 "%0=SWR:<slave %10!u!, status %11!u!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_process_slave_status_IRQ
{
i, ItemLong -- 10
actual_status, ItemLong -- 11
}
#typev swr_driver_c1464 71 "%0=SWR:<slave status read: 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_process_slave_status_IRQ
{
temp.data.w_data, ItemLong -- 10
}
#typev swr_driver_c1456 70 "%0=CDC: <swr_process_slave_status_IRQ: swr_bus_clock_start_or_resume failed, Exiting return_code=(0x%10!x!)> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_process_slave_status_IRQ
{
rc, ItemLong -- 10
}
#typev swr_driver_c1451 69 "%0+SWR:<swr_process_slave_status_IRQ swr_type = 0x%10!x! >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_process_slave_status_IRQ
{
type, ItemLong -- 10
}
#typev swr_driver_c2494 136 "%0-SWR:<master port number is invalid>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_remove_stream_from_slave
{
}
#typev swr_driver_c2499 137 "%0-SWR:<slave port number is invalid>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_remove_stream_from_slave
{
}
#typev swr_driver_c2588 144 "%0-SWR:<swr_remove_stream_from_slave>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_remove_stream_from_slave
{
}
#typev swr_driver_c2572 143 "%0=SWR:<no more streams are used, revert framesize to 2*50>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_remove_stream_from_slave
{
}
#typev swr_driver_c2548 141 "%0=SWR:<clk speed is 9.6MHz using preconfigured table>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_remove_stream_from_slave
{
}
#typev swr_driver_c2510 139 "%0=SWR:<configuration is NOT delayed, bank switch is requried>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_remove_stream_from_slave
{
}
#typev swr_driver_c2508 138 "%0=SWR:<configuration is delayed, no changes on HW will occur at this time>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_remove_stream_from_slave
{
}
#typev swr_driver_c2489 135 "%0-SWR:<driver not initialized>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_remove_stream_from_slave
{
}
#typev swr_driver_c2484 134 "%0-SWR:<slave pointer is null>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_remove_stream_from_slave
{
}
#typev swr_driver_c2479 133 "%0-SWR:<core not enabled!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_remove_stream_from_slave
{
}
#typev swr_driver_c2476 132 "%0+SWR:<swr_remove_stream_from_slave>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_remove_stream_from_slave
{
}
#typev swr_driver_c2143 105 "%0-SWR:<swr_reset RC=%10!d!, swr_type %11!d!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_reset
{
rc, ItemLong -- 10
type, ItemLong -- 11
}
#typev swr_driver_c2125 104 "%0=SWR:<driver not initialized>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_reset
{
}
#typev swr_driver_c2123 103 "%0+SWR:<swr_reset  swr_type %10!d!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_reset
{
type, ItemLong -- 10
}
#typev swr_driver_c2288 117 "%0=SWR:<swr_slave_read slave %10!u!: 0x%11!x!, 0x%12!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_slave_read
{
slave->list_entry->logical_addr, ItemLong -- 10
read->reg, ItemLong -- 11
read->data, ItemLong -- 12
}
#typev swr_driver_c2281 116 "%0=SWR:<core not enabled!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_slave_read
{
}
#typev swr_driver_c2276 115 "%0=SWR:<driver not initialized>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_slave_read
{
}
#typev swr_driver_c2271 114 "%0=SWR:<slave pointer is null>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_slave_read
{
}
#typev swr_driver_c2252 113 "%0=SWR:<swr_slave_write type %10!x!: 0x%11!x!, 0x%12!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_slave_write
{
write.type, ItemLong -- 10
write.reg, ItemLong -- 11
write.data, ItemLong -- 12
}
#typev swr_driver_c2248 112 "%0=SWR:<core not enabled!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_slave_write
{
}
#typev swr_driver_c2243 111 "%0=SWR:<driver not initialized>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_slave_write
{
}
#typev swr_driver_c2238 110 "%0=SWR:<slave pointer is null>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_slave_write
{
}
#typev swr_driver_c2018 99 "%0=SWR:<swr_start_master: swr_bus_clock_start_or_resume failed rc = %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_start_master
{
rc, ItemLong -- 10
}
#typev swr_driver_c2010 98 "%0=SWR:<swr_start_master: swr_vote_for_macro_clock failed rc = %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_start_master
{
rc, ItemLong -- 10
}
#typev swr_driver_c659 30 "%0=SWR:<swr_thread_clock_stop exiting >" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_thread_clock_stop
{
}
#typev swr_driver_c646 29 "%0=SWR:<swr_thread_clock_stop wait satisfied rc = 0x%10!x!, swrtype = 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_thread_clock_stop
{
rc, ItemLong -- 10
type, ItemLong -- 11
}
#typev swr_driver_c643 28 "%0=SWR:<swr_thread_clock_stop waiting for event: swrtype = 0x%10!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_thread_clock_stop
{
type, ItemLong -- 10
}
#typev swr_driver_c1154 52 "%0-SWR:<swr_update_banked_port_configs>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_update_banked_port_configs
{
}
#typev swr_driver_c1086 51 "%0=SWR:<detected active channels, writing port control config>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_update_banked_port_configs
{
}
#typev swr_driver_c1076 50 "%0=SWR:<set enable channels bits 0x%10!x! on slave %11!u!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_update_banked_port_configs
{
m_bank->enabled_channels, ItemLong -- 10
m_common->slave, ItemLong -- 11
}
#typev swr_driver_c1011 49 "%0=SWR:<updating master port config>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_update_banked_port_configs
{
}
#typev swr_driver_c1009 48 "%0=SWR:<port to update: %10!u!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_update_banked_port_configs
{
i, ItemLong -- 10
}
#typev swr_driver_c997 47 "%0+SWR:<swr_update_banked_port_configs bank %10!u!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_update_banked_port_configs
{
bank, ItemLong -- 10
}
#typev swr_driver_c1213 57 "%0-SWR:<swr_update_post_bank_switch>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_update_post_bank_switch
{
}
#typev swr_driver_c1203 56 "%0=SWR:<set enable channels bits on slave %10!u!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_update_post_bank_switch
{
m_common->slave, ItemLong -- 10
}
#typev swr_driver_c1188 55 "%0=SWR:<disabling port on inactive bank>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_update_post_bank_switch
{
}
#typev swr_driver_c1186 54 "%0=SWR:<port to update: %10!u!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_update_post_bank_switch
{
i, ItemLong -- 10
}
#typev swr_driver_c1178 53 "%0+SWR:<swr_update_post_bank_switch bank %10!u!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_update_post_bank_switch
{
bank, ItemLong -- 10
}
