// PDB:  qcaudminiport7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
e5d53fcf-d10d-3ba9-070d-b0cf612d594f latest // SRC=ExternalDisplayFormats.cpp MJ= MN=
#typev ExternalDisplayFormats_cpp920 43 "%0CExternalDisplayMiniportTopology::ConvertToAudioEpFmt, Leaving method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::ConvertToAudioEpFmt
{
}
#typev ExternalDisplayFormats_cpp918 46 "%0CExternalDisplayMiniportTopology::GetAudioChannelMap, Leaving method AudioChMap=%10!d! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::ConvertToAudioEpFmt
{
chMap, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp918 45 "%0CExternalDisplayMiniportTopology::GetAudioChannelMap - Unsupported uGfxSpeakerLocationMask " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CExternalDisplayMiniportTopology::ConvertToAudioEpFmt
{
}
#typev ExternalDisplayFormats_cpp918 44 "%0CExternalDisplayMiniportTopology::GetAudioChannelMap, Entering method uGfxSpeakerLocationMask = %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::ConvertToAudioEpFmt
{
uGfxSpeakerLocationMask, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp913 42 "%0CExternalDisplayMiniportTopology::ConvertToAudioEpFmt, Entering method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::ConvertToAudioEpFmt
{
}
#typev ExternalDisplayFormats_cpp58 11 "%0CExternalDisplayMiniportTopology::ConvertToGfxPropType, Leaving method " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::ConvertToGfxPropType
{
}
#typev ExternalDisplayFormats_cpp56 49 "%0CExternalDisplayMiniportTopology::GetGfxBitDepth, Leaving method GraphicsAudioBitDepth=%10!d! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::ConvertToGfxPropType
{
GraphicsAudioBitDepth, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp56 48 "%0CExternalDisplayMiniportTopology::GetGfxBitDepth - Unsupported depth mask " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CExternalDisplayMiniportTopology::ConvertToGfxPropType
{
}
#typev ExternalDisplayFormats_cpp56 47 "%0CExternalDisplayMiniportTopology::GetGfxBitDepth, Entering method uAudioBitsperSample = %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::ConvertToGfxPropType
{
uAudioBitsperSample, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp55 52 "%0CExternalDisplayMiniportTopology::GetGfxSampleRate, Leaving method GraphicsAudioSampleRate=%10!d! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::ConvertToGfxPropType
{
GraphicsAudioSampleRate, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp55 51 "%0CExternalDisplayMiniportTopology::GetGfxSampleRate - Unsupported sample rate " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CExternalDisplayMiniportTopology::ConvertToGfxPropType
{
}
#typev ExternalDisplayFormats_cpp55 50 "%0CExternalDisplayMiniportTopology::GetGfxSampleRate, Entering method SampleRate = %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::ConvertToGfxPropType
{
uAudioSampleRate, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp54 55 "%0CExternalDisplayMiniportTopology::GetGfxSpkrLocationMask, Leaving method gfxSpkrLocationMask = %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::ConvertToGfxPropType
{
gfxSpkrLocMask, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp54 54 "%0CExternalDisplayMiniportTopology::GetGfxSpkrLocationMask - Unsupported chMap " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CExternalDisplayMiniportTopology::ConvertToGfxPropType
{
}
#typev ExternalDisplayFormats_cpp54 53 "%0CExternalDisplayMiniportTopology::GetGfxSpkrLocationMask, Entering method audioChMap = %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::ConvertToGfxPropType
{
ChMap, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp48 10 "%0CExternalDisplayMiniportTopology::ConvertToGfxPropType, Entering method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::ConvertToGfxPropType
{
}
#typev ExternalDisplayFormats_cpp332 20 "%0CExternalDisplayMiniportTopology::FindIntersectingAudioFormats, Leaving method ntStatus = 0x%10!08X! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::FindIntersectingAudioFormats
{
ntStatus, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp186 15 "%0CExternalDisplayMiniportTopology::FindIntersectingAudioFormats ERROR NULL IntersectedSampleRates " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CExternalDisplayMiniportTopology::FindIntersectingAudioFormats
{
}
#typev ExternalDisplayFormats_cpp201 16 "%0CExternalDisplayMiniportTopology::FindIntersectingAudioFormats ERROR NULL IntersectedBitDepths " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CExternalDisplayMiniportTopology::FindIntersectingAudioFormats
{
}
#typev ExternalDisplayFormats_cpp216 17 "%0CExternalDisplayMiniportTopology::FindIntersectingAudioFormats ERROR NULL SpeakerLocations " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CExternalDisplayMiniportTopology::FindIntersectingAudioFormats
{
}
#typev ExternalDisplayFormats_cpp252 19 "%0CExternalDisplayMiniportTopology::FindIntersectingAudioFormats format[%10!d!] 											pIntersectedAudioProperties[cIntersectedFormats].uNumberOfChannels = %11!d!, pIntersectedAudioProperties[cIntersectedFormats].eSampleRate = %12!d!, 											pIntersectedAudioProperties[cIntersectedFormats].eSampleBitDepth = %13!d!, pIntersectedAudioProperties[cIntersectedFormats].uSpeakerLocationMask =%14!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::FindIntersectingAudioFormats
{
cIntersectedFormats, ItemLong -- 10
pIntersectedAudioProperties[cIntersectedFormats].uNumberOfChannels, ItemLong -- 11
pIntersectedAudioProperties[cIntersectedFormats].eSampleRate, ItemLong -- 12
pIntersectedAudioProperties[cIntersectedFormats].eSampleBitDepth, ItemLong -- 13
pIntersectedAudioProperties[cIntersectedFormats].uSpeakerLocationMask, ItemLong -- 14
}
#typev ExternalDisplayFormats_cpp240 18 "%0CExternalDisplayMiniportTopology::FindIntersectingAudioFormats: matched AudioFormat.Format: = {%10!08X!-%11!04X!-%12!04X!-%13!02X!%14!02X!-%15!02X!%16!02X!%17!02X!%18!02X!%19!02X!%20!02X!} " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::FindIntersectingAudioFormats
{
pIntersectedAudioProperties[cIntersectedFormats].Format.Data1, ItemLong -- 10
pIntersectedAudioProperties[cIntersectedFormats].Format.Data2, ItemLong -- 11
pIntersectedAudioProperties[cIntersectedFormats].Format.Data3, ItemLong -- 12
pIntersectedAudioProperties[cIntersectedFormats].Format.Data4[0], ItemLong -- 13
pIntersectedAudioProperties[cIntersectedFormats].Format.Data4[1], ItemLong -- 14
pIntersectedAudioProperties[cIntersectedFormats].Format.Data4[2], ItemLong -- 15
pIntersectedAudioProperties[cIntersectedFormats].Format.Data4[3], ItemLong -- 16
pIntersectedAudioProperties[cIntersectedFormats].Format.Data4[4], ItemLong -- 17
pIntersectedAudioProperties[cIntersectedFormats].Format.Data4[5], ItemLong -- 18
pIntersectedAudioProperties[cIntersectedFormats].Format.Data4[6], ItemLong -- 19
pIntersectedAudioProperties[cIntersectedFormats].Format.Data4[7], ItemLong -- 20
}
#typev ExternalDisplayFormats_cpp151 14 "%0CExternalDisplayMiniportTopology::FindIntersectingAudioFormats, Entering method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::FindIntersectingAudioFormats
{
}
#typev ExternalDisplayFormats_cpp118 13 "%0CExternalDisplayMiniportTopology::FindIntersectingAudioFormatsCount, Leaving method cIntersectedFormats = %10!d! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::FindIntersectingAudioFormatsCount
{
cIntersectedFormats, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp81 12 "%0CExternalDisplayMiniportTopology::FindIntersectingAudioFormatsCount, Entering method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::FindIntersectingAudioFormatsCount
{
}
#typev ExternalDisplayFormats_cpp776 38 "%0CExternalDisplayMiniportTopology::GetAllIntersectingGfxSampleBitDepths, Leaving method " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAllIntersectingGfxSampleBitDepths
{
}
#typev ExternalDisplayFormats_cpp758 37 "%0CExternalDisplayMiniportTopology::GetAllIntersectingGfxSampleBitDepths, Entering method GraphicsBitDepthMask = %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAllIntersectingGfxSampleBitDepths
{
GraphicsBitDepthMask, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp727 36 "%0CExternalDisplayMiniportTopology::GetAllIntersectingGfxSampleRates, Leaving method " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAllIntersectingGfxSampleRates
{
}
#typev ExternalDisplayFormats_cpp692 35 "%0CExternalDisplayMiniportTopology::GetAllIntersectingGfxSampleRates, Entering method sampleRateType = %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAllIntersectingGfxSampleRates
{
GraphicsSampleRateMask, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp884 41 "%0CExternalDisplayMiniportTopology::GetAllIntersectingGfxSpeakerLocations, Leaving method " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAllIntersectingGfxSpeakerLocations
{
}
#typev ExternalDisplayFormats_cpp881 40 "%0CExternalDisplayMiniportTopology::GetAllIntersectingGfxSpeakerLocations numChannels invalid %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAllIntersectingGfxSpeakerLocations
{
numChannels, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp809 39 "%0CExternalDisplayMiniportTopology::GetAllIntersectingGfxSpeakerLocations, Entering method graphisChannelAlloc = %10!d!, numChannels = %11!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAllIntersectingGfxSpeakerLocations
{
graphicsChannelAlloc, ItemLong -- 10
numChannels, ItemLong -- 11
}
#typev ExternalDisplayFormats_cpp520 28 "%0CExternalDisplayMiniportTopology::GetAllIntersectingSampleBitDepthsCount, Leaving method;found %10!d! intersecting sample bit depths " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAllIntersectingSampleBitDepthsCount
{
uiBitDepthsCount, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp507 27 "%0CExternalDisplayMiniportTopology::GetAllIntersectingSampleBitDepthsCount, Entering method GraphicsBitDepthMask = %10!d!, Max supported BitDepth = %11!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAllIntersectingSampleBitDepthsCount
{
GraphicsBitDepthMask, ItemLong -- 10
m_uiMaxSupportedSampleBitLength, ItemLong -- 11
}
#typev ExternalDisplayFormats_cpp421 23 "%0CExternalDisplayMiniportTopology::GetAllIntersectingSampleRatesCount,Leaving method found %10!d! intersecting sample rates " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAllIntersectingSampleRatesCount
{
uisampleRatesCount, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp388 22 "%0CExternalDisplayMiniportTopology::GetAllIntersectingSampleRatesCount, Entering method GraphicsSampleRateMask = %10!d!, Max supported samplerate=%11!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAllIntersectingSampleRatesCount
{
GraphicsSampleRateMask, ItemLong -- 10
m_uiMaxSupportedSampleRate, ItemLong -- 11
}
#typev ExternalDisplayFormats_cpp657 34 "%0CExternalDisplayMiniportTopology::GetAllIntersectingSpeakerLocationsCount, Leaving method found %10!d! possible speaker locations " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAllIntersectingSpeakerLocationsCount
{
uiSpeakerLocCount, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp653 33 "%0CExternalDisplayMiniportTopology::GetAllIntersectingSpeakerLocationsCount numChannels invalid %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAllIntersectingSpeakerLocationsCount
{
numChannels, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp593 32 "%0CExternalDisplayMiniportTopology::GetAllIntersectingSpeakerLocationsCount, Entering method graphisChannelAlloc = %10!d!, numChannels = %11!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAllIntersectingSpeakerLocationsCount
{
graphicsChannelAlloc, ItemLong -- 10
numChannels, ItemLong -- 11
}
#typev ExternalDisplayFormats_cpp563 31 "%0CExternalDisplayMiniportTopology::GetAudioBitDepth, Leaving method AudioBitDepth=%10!d!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAudioBitDepth
{
AudioBitDepth, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp559 30 "%0CExternalDisplayMiniportTopology::GetAudioBitDepth - Unsupported bit depth " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CExternalDisplayMiniportTopology::GetAudioBitDepth
{
}
#typev ExternalDisplayFormats_cpp548 29 "%0CExternalDisplayMiniportTopology::GetAudioBitDepth, Entering method uSampleBitDepthType = %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAudioBitDepth
{
uSampleBitDepthType, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp479 26 "%0CExternalDisplayMiniportTopology::GetAudioSampleRate, Leaving method AudioSampleRate=%10!d! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAudioSampleRate
{
AudioSampleRate, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp475 25 "%0CExternalDisplayMiniportTopology::GetAudioSampleRate - Unsupported sample rate " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CExternalDisplayMiniportTopology::GetAudioSampleRate
{
}
#typev ExternalDisplayFormats_cpp449 24 "%0CExternalDisplayMiniportTopology::GetAudioSampleRate, Entering method sampleRateType = %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::GetAudioSampleRate
{
uSampleRateType, ItemLong -- 10
}
#typev ExternalDisplayFormats_cpp360 21 "%0CExternalDisplayMiniportTopology::IsNumChannelsValid, numChannels=%10!d! bReturn value=%11!d!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CExternalDisplayMiniportTopology::IsNumChannelsValid
{
NumChannels, ItemLong -- 10
bReturn, ItemLong -- 11
}
