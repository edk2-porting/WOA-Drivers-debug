// PDB:  qcpsautoreg7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
36389af8-ce54-3dbd-1e74-cc2582ffa481 latest // SRC=PARDSDQmi.c MJ= MN=
#typev PARDSDQmi_c833 76 "%0%!FUNC!:: ERROR:: Invalid input parameters!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_ApAsstHttpResponseReq
{
}
#typev PARDSDQmi_c879 80 "%0%!FUNC!:: <ThreadID: 0x%10!x!> %11!s!(%12!s!) . bSuccess = %13!s!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ApAsstHttpResponseReq
{
GetCurrentThreadId(), ItemLong -- 10
(S_FALSE == hr) ? 'Failure' : 'Success', ItemString -- 11
hr, ItemHRESULT -- 12
pHttpResponse->bSuccess, ItemListLong(false,true) -- 13
}
#typev PARDSDQmi_c873 79 "%0%!FUNC!:: Sending result: %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ApAsstHttpResponseReq
{
hex_dump(pReq->result_content. pReq->result_content_len), ItemHEXDump -- 10
}
#typev PARDSDQmi_c869 78 "%0%!FUNC!::Http response received failure!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ApAsstHttpResponseReq
{
}
#typev PARDSDQmi_c854 77 "%0%!FUNC!:: Http Response received %10!s! with Response Code: %11!u! and Response(%12!u! Bytes) %13!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ApAsstHttpResponseReq
{
pHttpResponse->bSuccess, ItemListLong(false,true) -- 10
pHttpResponse->HttpStatusCode, ItemLong -- 11
pHttpResponse->nResponse, ItemLong -- 12
hex_dump(pHttpResponse->pResponse.pHttpResponse->nResponse), ItemHEXDump -- 13
}
#typev PARDSDQmi_c829 75 "%0%!FUNC!:: Entry!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ApAsstHttpResponseReq
{
}
#typev PARDSDQmi_c1346 111 "%0%!FUNC!:: ERROR: Invalid arguments." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_DecodeIndication
{
}
#typev PARDSDQmi_c1400 115 "%0%!FUNC!:: <ThreadID: 0x%10!x!> ERROR: Decoding uMsgId = 0x%11!x!, uBufLen = %12!u!, IndicationLen = %13!u! (ZERO)." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_DecodeIndication
{
GetCurrentThreadId(), ItemLong -- 10
uMsgId, ItemLong -- 11
uBufLen, ItemLong -- 12
IndicationLen, ItemLong -- 13
}
#typev PARDSDQmi_c1386 114 "%0%!FUNC!:: ERROR: Decoding FAILED for uMsgId = 0x%10!x!, uBufLen = %11!u!, IndicationLen = %12!u!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_DecodeIndication
{
uMsgId, ItemLong -- 10
uBufLen, ItemLong -- 11
IndicationLen, ItemLong -- 12
}
#typev PARDSDQmi_c1370 113 "%0%!FUNC!:: <ThreadID: 0x%10!x!> Decoding uMsgId = 0x%11!x!, uBufLen = %12!u!, IndicationLen = %13!u!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_DecodeIndication
{
GetCurrentThreadId(), ItemLong -- 10
uMsgId, ItemLong -- 11
uBufLen, ItemLong -- 12
IndicationLen, ItemLong -- 13
}
#typev PARDSDQmi_c1352 112 "%0%!FUNC!:: <ThreadID: 0x%10!x!> ERROR: PARDSD_GetRequestInfo failed for uMsgId = 0x%11!x!, uBufLen = %12!u!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_DecodeIndication
{
GetCurrentThreadId(), ItemLong -- 10
uMsgId, ItemLong -- 11
uBufLen, ItemLong -- 12
}
#typev PARDSDQmi_c1263 109 "%0%!FUNC!:: ERROR: Invalid parm: pnReqLen 0x%10!I64u!, pnRespLen 0x%11!I64u!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_GetRequestInfo
{
(UINT64)pnReqLen, ItemULongLong -- 10
(UINT64)pnRespLen, ItemULongLong -- 11
}
#typev PARDSDQmi_c1324 110 "%0%!FUNC!:: <ThreadID: 0x%10!x!> uMsgId = %11!s! (0x%12!x!) ReqLen %13!u!, RespLen %14!u!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_GetRequestInfo
{
GetCurrentThreadId(), ItemLong -- 10
PARDSD_QmiToNameStr(uMsgId), ItemString -- 11
uMsgId, ItemLong -- 12
*pnReqLen, ItemLong -- 13
*pnRespLen, ItemLong -- 14
}
#typev PARDSDQmi_c573 44 "%0%!FUNC!:: ERROR:: Invalid input parameters!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c805 42 "%0%!FUNC!:: ERROR:: Invalid input parameters!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c805 43 "%0%!FUNC!:: Http operation result: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
result, ItemLong -- 10
}
// PDB:  qcpsautoreg7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev PARDSDQmi_c805 41 "%0%!FUNC!:: Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c797 74 "%0%!FUNC!::Indication processing success!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c578 71 "%0%!FUNC!:: HTTP SSL Version unavailable!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c775 70 "%0%!FUNC!:: HTTP SSL Version: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
pIndication->http_ssl_version, ItemLong -- 10
}
#typev PARDSDQmi_c578 69 "%0%!FUNC!:: HTTP Version unavailable!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c578 66 "%0%!FUNC!:: HTTP Version: 1.0" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c578 67 "%0%!FUNC!:: HTTP Version: 1.1" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c578 68 "%0%!FUNC!:: HTTP Version invalid!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c578 65 "%0%!FUNC!:: HTTP method unavailable!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c578 62 "%0%!FUNC!:: HTTP method: POST" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c578 63 "%0%!FUNC!:: HTTP method: GET" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c578 61 "%0%!FUNC!:: HTTP header info unavailable" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c793 76 "%0%!FUNC!:: ERROR:: Invalid input parameters!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c793 80 "%0%!FUNC!:: <ThreadID: 0x%10!x!> %11!s!(%12!s!) . bSuccess = %13!s!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
GetCurrentThreadId(), ItemLong -- 10
(S_FALSE == hr) ? 'Failure' : 'Success', ItemString -- 11
hr, ItemHRESULT -- 12
pHttpResponse->bSuccess, ItemListLong(false,true) -- 13
}
#typev PARDSDQmi_c793 79 "%0%!FUNC!:: Sending result: %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
hex_dump(pReq->result_content. pReq->result_content_len), ItemHEXDump -- 10
}
#typev PARDSDQmi_c793 78 "%0%!FUNC!::Http response received failure!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c793 75 "%0%!FUNC!:: Entry!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c792 73 "%0%!FUNC!:: ApAsstHttpResponse disabled!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c784 72 "%0%!FUNC!::Indication processing failed!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c578 59 "%0%!FUNC!:: Header processing failed!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c578 64 "%0%!FUNC!:: HTTP method invalid!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c578 60 "%0%!FUNC!:: No.of headers added: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
pDSDClient->HttpPayloadCache.HeaderNum, ItemLong -- 10
}
#typev PARDSDQmi_c578 58 "%0%!FUNC!::HTTP Header addition to list Failed!!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c678 57 "%0%!FUNC!::HTTP Header successfully added to list!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c670 56 "%0%!FUNC!:: Path %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
pDSDClient->HttpPayloadCache.RequestURLPath, ItemWString -- 10
}
#typev PARDSDQmi_c659 55 "%0%!FUNC!:: Received Path %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
hex_dump(pIndication->header_info[j].value. pIndication->header_info[j].value_len), ItemHEXDump -- 10
}
#typev PARDSDQmi_c652 54 "%0%!FUNC!:: Parsed URL: Server name: %10!s! and Port num: %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
pDSDClient->HttpPayloadCache.HostName, ItemWString -- 10
pDSDClient->HttpPayloadCache.PortNum, ItemLong -- 11
}
#typev PARDSDQmi_c644 53 "%0%!FUNC!:: Received header %10!s!:%11!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
(CHAR*)pIndication->header_info[j].name, ItemString -- 10
(CHAR*)pIndication->header_info[j].value, ItemString -- 11
}
#typev PARDSDQmi_c578 52 "%0%!FUNC!:: No.of headers available %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
header_len, ItemLong -- 10
}
#typev PARDSDQmi_c578 51 "%0%!FUNC!:: HTTP content unavailable!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c623 50 "%0%!FUNC!:: Copied Http content %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
hex_dump(pDSDClient->HttpPayloadCache.HttpContent              .pDSDClient->HttpPayloadCache.HttpContentLen), ItemHEXDump -- 10
}
#typev PARDSDQmi_c578 48 "%0%!FUNC!:: Unexpected segment index received!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c616 49 "%0%!FUNC!:: Malloc failed!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c578 47 "%0%!FUNC!:: TxId mismatch. Resetting cache structure for new Indication!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c578 46 "%0%!FUNC!:: New Indication. Initializing Cache structure" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
}
#typev PARDSDQmi_c578 45 "%0%!FUNC!:: AP Asst. Http Indication Received! Tx ID: %10!u! Segment %11!u! of %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpAPAsstIndication
{
pIndication->tx_info.transaction_id, ItemLong -- 10
pIndication->tx_info.segment_index, ItemLong -- 11
pIndication->tx_info.num_segments, ItemLong -- 12
}
#typev PARDSDQmi_c985 89 "%0%!FUNC!::HTTP Payload cache cleared!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpPayloadCache_DeInit
{
}
#typev PARDSDQmi_c957 88 "%0%!FUNC!:: List emptied" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpPayloadCache_DeInit
{
}
#typev PARDSDQmi_c945 87 "%0%!FUNC!:: ERROR:: Invalid input parameters!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_HttpPayloadCache_DeInit
{
}
#typev PARDSDQmi_c941 86 "%0%!FUNC!::Entry!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpPayloadCache_DeInit
{
}
#typev PARDSDQmi_c930 85 "%0%!FUNC!::HTTP Payload cache initialized!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpPayloadCache_Init
{
}
#typev PARDSDQmi_c927 84 "%0%!FUNC!::Entry!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_HttpPayloadCache_Init
{
}
#typev PARDSDQmi_c1001 97 "%0%!FUNC!:: Operation success!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_InitClient
{
}
#typev PARDSDQmi_c1001 96 "%0%!FUNC!:: Operation failed!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_InitClient
{
}
#typev PARDSDQmi_c1001 95 "%0%!FUNC!: <ThreadID: 0x%10!x!> status = %11!s!. QmiHandle = 0x%12!p!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_InitClient
{
GetCurrentThreadId(), ItemLong -- 10
status, ItemHRESULT -- 11
QMICLIENTHANDLE((*ppClient)), ItemPtr -- 12
}
#typev PARDSDQmi_c1057 14 "%0%!FUNC!:: status = %10!s!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_InitClient
{
hr, ItemHRESULT -- 10
}
#typev PARDSDQmi_c1057 13 "%0%!FUNC!:: Registering for DSD Indications." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_InitClient
{
}
#typev PARDSDQmi_c1050 19 "%0%!FUNC!:: status = %10!s!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_InitClient
{
hr, ItemHRESULT -- 10
}
#typev PARDSDQmi_c1050 18 "%0%!FUNC!:: Binding to Primary Subscription." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_InitClient
{
}
#typev PARDSDQmi_c1001 94 "%0%!FUNC!:: ERROR: PARQCCI_InitClientFromServiceObj failed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_InitClient
{
}
#typev PARDSDQmi_c1027 93 "%0%!FUNC!:: DSD QmiClient pClient success!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_InitClient
{
}
#typev PARDSDQmi_c1001 92 "%0%!FUNC!:: ERROR: malloc fail." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_InitClient
{
}
#typev PARDSDQmi_c1001 91 "%0%!FUNC!:: ERROR: pPARContext == NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_InitClient
{
}
#typev PARDSDQmi_c1001 90 "%0%!FUNC!::Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_InitClient
{
}
#typev PARDSDQmi_c1104 100 "%0%!FUNC!:: PARDSD_InitClient success!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_InitClient_WithRetry
{
}
#typev PARDSDQmi_c1117 102 "%0%!FUNC!:: hQMIRetryEvent handle invalid. Exiting." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_InitClient_WithRetry
{
}
#typev PARDSDQmi_c1129 103 "%0%!FUNC!:: Service stop was issued. Exiting.." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_InitClient_WithRetry
{
}
#typev PARDSDQmi_c1136 104 "%0%!FUNC!:: WaitforSingleObject failed with gle(%10!d!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_InitClient_WithRetry
{
GetLastError(), ItemLong -- 10
}
#typev PARDSDQmi_c1109 101 "%0%!FUNC!:: ERROR: PARDSD_InitClient failed with error HRESULT(%10!d!). Retrying in 5 secs.." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_InitClient_WithRetry
{
hr, ItemLong -- 10
}
#typev PARDSDQmi_c1095 99 "%0%!FUNC!:: ERROR: Failed to create event handle" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_InitClient_WithRetry
{
}
#typev PARDSDQmi_c1091 98 "%0%!FUNC!:: Entry!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_InitClient_WithRetry
{
}
#typev PARDSDQmi_c512 40 "%0%!FUNC!:: Success!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ParseHTTPPayloadHeaders
{
}
#typev PARDSDQmi_c503 38 "%0%!FUNC!:: Header string contains:
 %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ParseHTTPPayloadHeaders
{
pHeaderStr, ItemWString -- 10
}
#typev PARDSDQmi_c510 39 "%0%!FUNC!:: Failed!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ParseHTTPPayloadHeaders
{
}
#typev PARDSDQmi_c480 37 "%0%!FUNC!:: String memory allocation failed!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ParseHTTPPayloadHeaders
{
}
#typev PARDSDQmi_c468 36 "%0%!FUNC!:: Parsing through headers!!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ParseHTTPPayloadHeaders
{
}
#typev PARDSDQmi_c460 35 "%0%!FUNC!:: ERROR:: Invalid input parameter!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_ParseHTTPPayloadHeaders
{
}
#typev PARDSDQmi_c456 34 "%0%!FUNC!:: Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ParseHTTPPayloadHeaders
{
}
#typev PARDSDQmi_c1433 24 "%0%!FUNC!:: DSDSystemStatusIndication." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ProcessInboundIndication
{
}
#typev PARDSDQmi_c1453 118 "%0%!FUNC!:: <ThreadID: 0x%10!x!> uMsgId = %11!s! (0x%12!x!). ERROR: Memory allocation." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ProcessInboundIndication
{
GetCurrentThreadId(), ItemLong -- 10
PARDSD_QmiToNameStr(uMsgId), ItemString -- 11
uMsgId, ItemLong -- 12
}
#typev PARDSDQmi_c1446 117 "%0%!FUNC!:: <ThreadID: 0x%10!x!> uMsgId = %11!s! (0x%12!x!). Enqueued." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ProcessInboundIndication
{
GetCurrentThreadId(), ItemLong -- 10
PARDSD_QmiToNameStr(uMsgId), ItemString -- 11
uMsgId, ItemLong -- 12
}
#typev PARDSDQmi_c1422 116 "%0%!FUNC!:: <ThreadID: 0x%10!x!> uMsgId = %11!s! (0x%12!x!)." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ProcessInboundIndication
{
GetCurrentThreadId(), ItemLong -- 10
PARDSD_QmiToNameStr(uMsgId), ItemString -- 11
uMsgId, ItemLong -- 12
}
#typev PARDSDQmi_c1477 119 "%0%!FUNC!:: <ThreadID: 0x%10!x!> uMsgId = %11!s! (0x%12!x!)." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ProcessInboundResponse
{
GetCurrentThreadId(), ItemLong -- 10
PARDSD_QmiToNameStr(pQMI->uMsgId), ItemString -- 11
pQMI->uMsgId, ItemLong -- 12
}
#typev PARDSDQmi_c44 11 "%0%!FUNC!:: Success." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_RegisterIndicationsResp
{
}
#typev PARDSDQmi_c40 10 "%0%!FUNC!:: ERROR: Failed. Error = 0x%10!x!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_RegisterIndicationsResp
{
pResp->resp.error, ItemLong -- 10
}
#typev PARDSDQmi_c1156 105 "%0%!FUNC!:: PARDSD_ReleaseClient:: ERROR. Invalid parameters!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_ReleaseClient
{
}
#typev PARDSDQmi_c1185 108 "%0%!FUNC!:: PARDSD_ReleaseClient:: Exit!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ReleaseClient
{
}
#typev PARDSDQmi_c1183 107 "%0%!FUNC!:: PARDSD_ReleaseClient:: <ThreadID: 0x%10!x!> Released successfully." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_ReleaseClient
{
GetCurrentThreadId(), ItemLong -- 10
}
#typev PARDSDQmi_c1172 106 "%0%!FUNC!:: PARDSD_ReleaseClient:: ERROR: releasing client id : 0x%10!x!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_ReleaseClient
{
qmiErr, ItemLong -- 10
}
#typev PARDSDQmi_c436 32 "%0%!FUNC!:: Failed!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_SaveHTTPHeader
{
}
#typev PARDSDQmi_c401 30 "%0%!FUNC!:: AddHeader parameters failed!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_SaveHTTPHeader
{
}
#typev PARDSDQmi_c438 33 "%0%!FUNC!:: Success!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_SaveHTTPHeader
{
}
#typev PARDSDQmi_c408 31 "%0%!FUNC!:: AddHeader pHeaderItem unallocated" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_SaveHTTPHeader
{
}
#typev PARDSDQmi_c395 29 "%0%!FUNC!:: Entry!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_SaveHTTPHeader
{
}
#typev PARDSDQmi_c909 83 "%0%!FUNC!:: Success." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_SendHttpResultResp
{
}
#typev PARDSDQmi_c904 82 "%0%!FUNC!:: ERROR: Failed. Error = 0x%10!x!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_SendHttpResultResp
{
pResp->resp.error, ItemLong -- 10
}
#typev PARDSDQmi_c895 81 "%0%!FUNC!:: Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_SendHttpResultResp
{
}
#typev PARDSDQmi_c168 21 "%0%!FUNC!:: Success." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_SendSetWLANAvailableResp
{
}
#typev PARDSDQmi_c163 20 "%0%!FUNC!:: ERROR: Failed. Error = 0x%10!x!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_SendSetWLANAvailableResp
{
pResp->resp.error, ItemLong -- 10
}
#typev PARDSDQmi_c378 28 "%0%!FUNC!:: <ThreadID: 0x%10!x!> %11!s!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_SendSetWLANNotAvailableReq
{
GetCurrentThreadId(), ItemLong -- 10
hr, ItemHRESULT -- 11
}
#typev PARDSDQmi_c193 23 "%0%!FUNC!:: Success." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=PARDSD_SendSetWLANNotAvailableResp
{
}
#typev PARDSDQmi_c188 22 "%0%!FUNC!:: ERROR: Failed. Error = 0x%10!x!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_SendSetWLANNotAvailableResp
{
pResp->resp.error, ItemLong -- 10
}
#typev PARDSDQmi_c109 16 "%0%!FUNC!:: Success." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_SetBindSubscriptionResp
{
}
#typev PARDSDQmi_c105 15 "%0%!FUNC!:: ERROR: Failed. Error = 0x%10!x!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARDSD_SetBindSubscriptionResp
{
pResp->resp.error, ItemLong -- 10
}
// PDB:  qcpsautoreg7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev PSAutoReg_c74 25 "%0%!FUNC!:: ERROR: Invalid parm: pClient/pWifiInformation = NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARQueryWifiStatusAndNotifyModem
{
}
#typev PSAutoReg_c74 27 "%0%!FUNC!:: <ThreadID: 0x%10!x!> status = %11!s!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARQueryWifiStatusAndNotifyModem
{
GetCurrentThreadId(), ItemLong -- 10
hr, ItemHRESULT -- 11
}
#typev PSAutoReg_c74 26 "%0%!FUNC!:: wifi_assoc = %10!d!. connection_status = %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PARQueryWifiStatusAndNotifyModem
{
pReq->wifi_assoc_type, ItemLong -- 10
pReq->connection_status, ItemLong -- 11
}
// PDB:  qcpsautoreg7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev WlanInterfaceChangeNotification_c102 25 "%0%!FUNC!:: ERROR: Invalid parm: pClient/pWifiInformation = NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=WlanProcessNotification
{
}
#typev WlanInterfaceChangeNotification_c102 27 "%0%!FUNC!:: <ThreadID: 0x%10!x!> status = %11!s!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=WlanProcessNotification
{
GetCurrentThreadId(), ItemLong -- 10
hr, ItemHRESULT -- 11
}
#typev WlanInterfaceChangeNotification_c112 26 "%0%!FUNC!:: wifi_assoc = %10!d!. connection_status = %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=WlanProcessNotification
{
pReq->wifi_assoc_type, ItemLong -- 10
pReq->connection_status, ItemLong -- 11
}
// PDB:  qcpsautoreg7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev WlanInterfaceChangeNotification_c102 25 "%0%!FUNC!:: ERROR: Invalid parm: pClient/pWifiInformation = NULL." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=WlanProcessNotification
{
}
#typev WlanInterfaceChangeNotification_c106 27 "%0%!FUNC!:: <ThreadID: 0x%10!x!> status = %11!s!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=WlanProcessNotification
{
GetCurrentThreadId(), ItemLong -- 10
hr, ItemHRESULT -- 11
}
#typev WlanInterfaceChangeNotification_c106 26 "%0%!FUNC!:: wifi_assoc = %10!d!. connection_status = %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=WlanProcessNotification
{
pReq->wifi_assoc_type, ItemLong -- 10
pReq->connection_status, ItemLong -- 11
}
