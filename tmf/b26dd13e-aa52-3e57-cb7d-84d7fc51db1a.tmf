// PDB:  qcqdss7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
b26dd13e-aa52-3e57-cb7d-84d7fc51db1a kmdf // SRC=QdssTmcAcpi.c MJ= MN=
#typev QdssTmcAcpi_c385 36 "%0Device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssDeallocTmcContext
{
}
#typev QdssTmcAcpi_c385 36 "%0Device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssDeallocTmcContext$fin$0
{
}
#typev QdssTmcAcpi_c231 25 "%0Unable to read TpdaIndex" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseTmcConfigPackage
{
}
#typev QdssTmcAcpi_c223 24 "%0Unable to read DefaultEnable" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseTmcConfigPackage
{
}
#typev QdssTmcAcpi_c215 23 "%0Unable to read TmcLength" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseTmcConfigPackage
{
}
#typev QdssTmcAcpi_c207 22 "%0Unable to read TmcBaseAddress" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseTmcConfigPackage
{
}
#typev QdssTmcAcpi_c199 21 "%0Unable to read TmcIndex" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseTmcConfigPackage
{
}
#typev QdssTmcAcpi_c192 20 "%0pArgument is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseTmcConfigPackage
{
}
#typev QdssTmcAcpi_c231 25 "%0Unable to read TpdaIndex" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseTmcConfigPackage$fin$0
{
}
#typev QdssTmcAcpi_c223 24 "%0Unable to read DefaultEnable" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseTmcConfigPackage$fin$0
{
}
#typev QdssTmcAcpi_c215 23 "%0Unable to read TmcLength" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseTmcConfigPackage$fin$0
{
}
#typev QdssTmcAcpi_c207 22 "%0Unable to read TmcBaseAddress" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseTmcConfigPackage$fin$0
{
}
#typev QdssTmcAcpi_c199 21 "%0Unable to read TmcIndex" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseTmcConfigPackage$fin$0
{
}
#typev QdssTmcAcpi_c192 20 "%0pArgument is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssParseTmcConfigPackage$fin$0
{
}
#typev QdssTmcAcpi_c273 27 "%0%!FUNC! 273: Failed in QdssQueryAcpiNamePackageFromReg for TMCC status = %10!s! or OutputBufferMemObj = 0x%11!p! is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig
{
status, ItemNTSTATUS -- 10
OutputBufferMemObj, ItemPtr -- 11
}
#typev QdssTmcAcpi_c323 32 "%0Unable to allocate memory for ETF/ETB block context" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig
{
}
#typev QdssTmcAcpi_c353 35 "%0QdssParseTmcConfigPackage failed to parse ACPI package %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig
{
index, ItemLong -- 10
}
#typev QdssTmcAcpi_c341 34 "%0argument is not a package type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig
{
}
#typev QdssTmcAcpi_c334 33 "%0ACPI data pointer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig
{
}
#typev QdssTmcAcpi_c305 31 "%0Mismatch in ACPI for number of ETB's and their configurations" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig
{
}
#typev QdssTmcAcpi_c295 30 "%0ACPI output buffer is empty" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig
{
}
#typev QdssTmcAcpi_c288 29 "%0ACPI output buffer is invalid (Signature = 0x%10!08X!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig
{
pOutputBuffer->Signature, ItemLong -- 10
}
#typev QdssTmcAcpi_c281 28 "%0ACPI output buffer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig
{
}
#typev QdssTmcAcpi_c265 26 "%0Device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig
{
}
#typev QdssTmcAcpi_c273 27 "%0%!FUNC! 273: Failed in QdssQueryAcpiNamePackageFromReg for TMCC status = %10!s! or OutputBufferMemObj = 0x%11!p! is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig$fin$0
{
status, ItemNTSTATUS -- 10
OutputBufferMemObj, ItemPtr -- 11
}
#typev QdssTmcAcpi_c323 32 "%0Unable to allocate memory for ETF/ETB block context" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig$fin$0
{
}
#typev QdssTmcAcpi_c353 35 "%0QdssParseTmcConfigPackage failed to parse ACPI package %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig$fin$0
{
index, ItemLong -- 10
}
#typev QdssTmcAcpi_c341 34 "%0argument is not a package type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig$fin$0
{
}
#typev QdssTmcAcpi_c334 33 "%0ACPI data pointer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig$fin$0
{
}
#typev QdssTmcAcpi_c305 31 "%0Mismatch in ACPI for number of ETB's and their configurations" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig$fin$0
{
}
#typev QdssTmcAcpi_c295 30 "%0ACPI output buffer is empty" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig$fin$0
{
}
#typev QdssTmcAcpi_c288 29 "%0ACPI output buffer is invalid (Signature = 0x%10!08X!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig$fin$0
{
pOutputBuffer->Signature, ItemLong -- 10
}
#typev QdssTmcAcpi_c281 28 "%0ACPI output buffer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig$fin$0
{
}
#typev QdssTmcAcpi_c265 26 "%0Device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcConfig$fin$0
{
}
#typev QdssTmcAcpi_c74 12 "%0%!FUNC! 74: Failed in QdssQueryAcpiNamePackageFromReg for QTMC status = %10!s! or OutputBufferMemObj = 0x%11!p! is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames
{
status, ItemNTSTATUS -- 10
OutputBufferMemObj, ItemPtr -- 11
}
#typev QdssTmcAcpi_c116 16 "%0Unable to allocate memory for ETB?ETF Names" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames
{
}
#typev QdssTmcAcpi_c152 19 "%0argument is too big to copy" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames
{
}
#typev QdssTmcAcpi_c135 18 "%0argument is not a string type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames
{
}
#typev QdssTmcAcpi_c128 17 "%0ACPI data pointer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames
{
}
#typev QdssTmcAcpi_c96 15 "%0ACPI output buffer is empty" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames
{
}
#typev QdssTmcAcpi_c89 14 "%0ACPI output buffer is invalid (Signature = 0x%10!08X!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames
{
pOutputBuffer->Signature, ItemLong -- 10
}
#typev QdssTmcAcpi_c82 13 "%0ACPI output buffer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames
{
}
#typev QdssTmcAcpi_c66 11 "%0ETF/ETB context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames
{
}
#typev QdssTmcAcpi_c58 10 "%0Device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames
{
}
#typev QdssTmcAcpi_c74 12 "%0%!FUNC! 74: Failed in QdssQueryAcpiNamePackageFromReg for QTMC status = %10!s! or OutputBufferMemObj = 0x%11!p! is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames$fin$0
{
status, ItemNTSTATUS -- 10
OutputBufferMemObj, ItemPtr -- 11
}
#typev QdssTmcAcpi_c116 16 "%0Unable to allocate memory for ETB?ETF Names" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames$fin$0
{
}
#typev QdssTmcAcpi_c152 19 "%0argument is too big to copy" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames$fin$0
{
}
#typev QdssTmcAcpi_c135 18 "%0argument is not a string type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames$fin$0
{
}
#typev QdssTmcAcpi_c128 17 "%0ACPI data pointer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames$fin$0
{
}
#typev QdssTmcAcpi_c96 15 "%0ACPI output buffer is empty" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames$fin$0
{
}
#typev QdssTmcAcpi_c89 14 "%0ACPI output buffer is invalid (Signature = 0x%10!08X!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames$fin$0
{
pOutputBuffer->Signature, ItemLong -- 10
}
#typev QdssTmcAcpi_c82 13 "%0ACPI output buffer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames$fin$0
{
}
#typev QdssTmcAcpi_c66 11 "%0ETF/ETB context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames$fin$0
{
}
#typev QdssTmcAcpi_c58 10 "%0Device context is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER FUNC=QdssQueryAcpiForTmcNames$fin$0
{
}
