// PDB:  Qcfgbcl850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
e97506fd-25a6-3a53-1e29-3907aad2b071 fgbcl // SRC=fgbclCore.c MJ= MN=
#typev fgbclCore_c631 28 "%0BCLTimerFunction::BCL polling timer expired." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=BCLTimerFunction
{
}
#typev fgbclCore_c587 27 "%0FgBclCore_Get_BCL_Status::fgbclIRQStatus = %10!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_GetBCLStatus
{
fgbclIRQStatus, ItemLong -- 10
}
// PDB:  Qcfgbcl850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev fgbclCore_c580 26 "%0FgBclCore_Get_BCL_Status:: fg_bcl_monitor_sts= %10!X!, fg_bcl_battVI_monitor = %11!X!, fg_bcl_ban_batfet_sts = %12!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_GetBCLStatus
{
monitorFgBCLStatus.fg_bcl_monitor_sts, ItemLong -- 10
monitorFgBCLStatus.fg_bcl_battVI_monitor, ItemLong -- 11
monitorFgBCLStatus.fg_bcl_ban_batfet_sts, ItemLong -- 12
}
// PDB:  Qcfgbcl850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev fgbclCore_c569 25 "%0FgBclCore_Get_BCL_Status::vcomp IRQ status = %10!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_GetBCLStatus
{
vcompIRQStatus.vcomp_irq_mask, ItemLong -- 10
}
// PDB:  Qcfgbcl850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev fgbclCore_c556 24 "%0In FgBclCore_Get_BCL_Status" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_GetBCLStatus
{
}
#typev fgbclCore_c314 15 "%0FgBclCore_Init::status = 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_SelfHost FUNC=FgBclCore_Init
{
status, ItemLong -- 10
}
// PDB:  Qcfgbcl850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev fgbclCore_c184 14 "%0FgBclCore_Init entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_SelfHost FUNC=FgBclCore_Init
{
}
#typev fgbclCore_c170 12 "%0FgBclCore_Thread_Init::ERROR::Failed to create Thread, Error Code =%10!X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FGBCLWPP_SelfHost FUNC=FgBclCore_InitData
{
status, ItemLong -- 10
}
#typev fgbclCore_c170 11 "%0FgBclCore_Thread_Init::Thread created successfully" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_SelfHost FUNC=FgBclCore_InitData
{
}
#typev fgbclCore_c170 10 "%0FgBclCore_Thread_Init::++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_SelfHost FUNC=FgBclCore_InitData
{
}
#typev fgbclCore_c166 13 "%0FgBclCore_InitData::ERROR::creating callback failed status = 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FGBCLWPP_SelfHost FUNC=FgBclCore_InitData
{
status, ItemLong -- 10
}
#typev fgbclCore_c668 32 "%0FgBclCore_SendBatteryLevelNotification::sent BATT_PERCENT_NORMAL_NOTIFICATION" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_SendBatteryLevelNotification
{
}
#typev fgbclCore_c658 31 "%0FgBclCore_SendBatteryLevelNotification::sent BATT_PERCENT_LOW_NOTIFICATION" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_SendBatteryLevelNotification
{
}
#typev fgbclCore_c648 30 "%0battery percent notification disabled for this platform" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_SendBatteryLevelNotification
{
}
#typev fgbclCore_c641 29 "%0In FgBclCore_SendBatteryLevelNotification" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_SendBatteryLevelNotification
{
}
#typev fgbclCore_c390 17 "%0FgBclCore_SetBCLThreshold::status = %10!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_SetBCLThreshold
{
status, ItemLong -- 10
}
#typev fgbclCore_c386 16 "%0FgBclCore_SetBCLThreshold::ibatt_high_thr = %10!d! mA, ibatt_too_high_thr = %11!d! mA" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_SetBCLThreshold
{
ibatIRQThreshold.ibatt_high_thr, ItemLong -- 10
ibatIRQThreshold.ibatt_too_high_thr, ItemLong -- 11
}
#typev fgbclCore_c534 23 "%0FgBclCore_UpdateBCLState::start timer." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_UpdateBCLState
{
}
#typev fgbclCore_c526 22 "%0FgBclCore_UpdateBCLState::send BCL notification BCLState = %10!d!, notification reason = %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_UpdateBCLState
{
newBclState, ItemLong -- 10
newNotificationReason, ItemLong -- 11
}
#typev fgbclCore_c515 21 "%0FgBclCore_UpdateBCLState::after Vcomp newBclState = %10!d!, newNotificationReason = %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_UpdateBCLState
{
newBclState, ItemLong -- 10
newNotificationReason, ItemLong -- 11
}
#typev fgbclCore_c493 20 "%0FgBclCore_UpdateBCLState entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_UpdateBCLState
{
}
#typev fgbclCore_c711 34 "%0FGBCL::Warning::Entered EXIT event, driver unloading" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FGBCLWPP_SelfHost FUNC=FgBcl_Main_Thread
{
}
#typev fgbclCore_c733 35 "%0FgBcl_Main_Thread::EventID = %10!d!, processed status = %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBcl_Main_Thread
{
eventID, ItemLong -- 10
status, ItemLong -- 11
}
#typev fgbclCore_c731 32 "%0FgBclCore_SendBatteryLevelNotification::sent BATT_PERCENT_NORMAL_NOTIFICATION" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBcl_Main_Thread
{
}
#typev fgbclCore_c731 30 "%0battery percent notification disabled for this platform" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBcl_Main_Thread
{
}
#typev fgbclCore_c731 29 "%0In FgBclCore_SendBatteryLevelNotification" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBcl_Main_Thread
{
}
#typev fgbclCore_c726 31 "%0FgBclCore_SendBatteryLevelNotification::sent BATT_PERCENT_LOW_NOTIFICATION" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBcl_Main_Thread
{
}
#typev fgbclCore_c726 30 "%0battery percent notification disabled for this platform" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBcl_Main_Thread
{
}
#typev fgbclCore_c726 29 "%0In FgBclCore_SendBatteryLevelNotification" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBcl_Main_Thread
{
}
#typev fgbclCore_c690 33 "%0FgBcl_Main_Thread::++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBcl_Main_Thread
{
}
#typev fgbclCore_c776 37 "%0FgBcl_SignalThread::Ignore the event as BCLEventInit is FALSE" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBcl_SignalThread
{
}
#typev fgbclCore_c750 36 "%0FgBcl_SignalThread::Event signalled is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBcl_SignalThread
{
EventNum, ItemLong -- 10
}
// PDB:  Qcfgbcl850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev fgbclIoctl_c157 19 "%0FgBclCore_GetBCLCurrent::ERROR::Error Code = %10!X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FGBCLWPP_SelfHost FUNC=HandlefgbclRequest
{
status, ItemLong -- 10
}
#typev fgbclIoctl_c157 18 "%0FgBclCore_GetBCLCurrent::Values are:IMax = %10!d!mA,IMaxShutDown =%11!d!mA,IPresent =%12!d!mA,BCL_capability =%13!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=HandlefgbclRequest
{
pBCLOutputData->IMax, ItemLong -- 10
pBCLOutputData->IMaxShutDown, ItemLong -- 11
pBCLOutputData->IPresent, ItemLong -- 12
pBCLOutputData->BCL_capability, ItemLong -- 13
}
