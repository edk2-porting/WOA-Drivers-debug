// PDB:  qca11ad850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
337b92c2-ac66-3127-046b-e3e93c16bbab qca11ad // SRC=Unknown_cxx00 MJ= MN=
#typev wbe_c1165 49 "%0AOA_SESSION_DONE" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_AOARawData
{
}
#typev wbe_c1157 48 "%0Aoa event status: %10!d!" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_AOARawData
{
Arg, ItemLong -- 10
}
#typev wbe_c1156 47 "%0Received aoa measurement values from FW" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_AOARawData
{
}
#typev wbe_c1152 46 "%0Error receiving aoa measurement values from FW" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_AOARawData
{
}
#typev wbe_c401 15 "%0Finished unregister all events" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_ClearAllEvents
{
}
#typev wbe_c384 14 "%0Starting clearing all events" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_ClearAllEvents
{
}
#typev wbe_c2299 107 "%0<-- %!FUNC!" //   COMPID=COMP_OID FUNC=Wbe_DeregisterDevice
{
}
#typev wbe_c2282 106 "%0WBE: signaling IOCTL_EVENT_DRIVER_DISABLE" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_DeregisterDevice
{
}
#typev wbe_c2269 105 "%0--> %!FUNC!" //   COMPID=COMP_OID FUNC=Wbe_DeregisterDevice
{
}
#typev wbe_c1841 85 "%0IRP_MJ_CREATE AppContext 0x%10!p!" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_Dispatch
{
Arg, ItemPtr -- 10
}
#typev wbe_c1849 87 "%0IRP_MJ_CLOSE AppContext 0x%10!p!" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_Dispatch
{
Arg, ItemPtr -- 10
}
#typev wbe_c1845 86 "%0IRP_MJ_CLEANUP AppContext 0x%10!p!" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_Dispatch
{
Arg, ItemPtr -- 10
}
#typev wbe_c1861 88 "%0Error: Unsupported operation 0x%10!x!" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Dispatch
{
Arg, ItemLong -- 10
}
#typev wbe_c1903 91 "%0Failed to allocate memory for WBE_WMI_EVENTS_Q_ITEM" //   FLAGS=COMP_INIT_PNP LEVEL=DBG_SERIOUS FUNC=Wbe_EventsEnabledWmiCallback
{
}
#typev wbe_c1894 90 "%0Wbe_EventsEnabledWmiCallback called when Events Q not initialized, rejected callback" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_EventsEnabledWmiCallback
{
}
#typev wbe_c1891 89 "%0Starting Wbe_EventsEnabledWmiCallback" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_EventsEnabledWmiCallback
{
}
#typev wbe_c1254 54 "%0FTM_SESSION_DONE" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_FTMRawData
{
}
#typev wbe_c1248 53 "%0skipping FTM_SESSION_DONE, invalid cookie got: %10!d! expected: %11!d!" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_FTMRawData
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev wbe_c1231 52 "%0too many measurements, some were lost" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_FTMRawData
{
}
#typev wbe_c1221 51 "%0Received FTM values from FW" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_FTMRawData
{
}
#typev wbe_c1217 50 "%0Error receiving FTM values from FW" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_FTMRawData
{
}
#typev wbe_c1047 41 "%0Error receiving WMI_NOTIFY_REQ_DONE_EVENTID" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_GetFWStatistics
{
}
#typev wbe_c1057 44 "%0my_rx_sector %10!d!, my_tx_sector %11!d!, other_rx_sector %12!d!, other_tx_sector %13!d!, sqi %14!d!" //   FLAGS=COMP_OID LEVEL=DBG_LOUD FUNC=Wbe_GetFWStatistics
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemLong -- 14
}
#typev wbe_c1054 43 "%0status %10!d!, tsf_low %11!d!, tx_tpt %12!d!, tx_goodput %13!d!, rx_goodput %14!d!, bf_mcs %15!d!" //   FLAGS=COMP_OID LEVEL=DBG_LOUD FUNC=Wbe_GetFWStatistics
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemLong -- 14
Arg, ItemLong -- 15
}
#typev wbe_c1051 42 "%0WMI_NOTIFY_REQ_DONE_EVENTID received" //   FLAGS=COMP_OID LEVEL=DBG_LOUD FUNC=Wbe_GetFWStatistics
{
}
#typev wbe_c1316 56 "%0Skip IOCTL - the driver is shutting down" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_Ioctl
{
}
// PDB:  qca11ad850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev wbe_c1797 84 "%0Wbe_Ioctl done, status 0x%10!x! Information %11!I64d!" //   FLAGS=COMP_OID LEVEL=ioctlDebugLevel FUNC=Wbe_Ioctl
{
Arg, ItemLong -- 10
Arg, ItemLongLong -- 11
}
// PDB:  qca11ad850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev wbe_c1758 79 "%0Set driver event level to %10!d! and fw event level to %11!d! " //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_Ioctl
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev wbe_c1735 78 "%0WILOCITY_IOCTL_REGISTER_EVENTS disabled due to Host API Mode " //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_Ioctl
{
}
#typev wbe_c1785 82 "%0Finished  receive event Ioctl" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_Ioctl
{
}
#typev wbe_c1777 81 "%0Starting receive event Ioctl" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_Ioctl
{
}
#typev wbe_c1769 80 "%0WILOCITY_IOCTL_RECEIVE_EVENT disabled due to Host API Mode " //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_Ioctl
{
}
#typev wbe_c1792 83 "%0Error: Unsupported IOCTL 0x%10!x!" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
Arg, ItemLong -- 10
}
#typev wbe_c1544 38 "%0invalid Concurrency Mode %10!d!" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
Arg, ItemLong -- 10
}
#typev wbe_c1720 77 "%0WILOCITY_IOCTL_CLEAR_EVENTS disabled due to Host API Mode " //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_Ioctl
{
}
#typev wbe_c1413 61 "%0Error: corrupted command, cmd->size=%10!d!" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
Arg, ItemLong -- 10
}
#typev wbe_c1432 63 "%0Error: corrupted command, cmd->uBufLen=%10!d!" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
Arg, ItemLong -- 10
}
#typev wbe_c1428 62 "%0Received Send WMI Ioctl" //   FLAGS=COMP_OID LEVEL=DBG_LOUD FUNC=Wbe_Ioctl
{
}
#typev wbe_c1357 60 "%0WbeRegisterForEvent failed for IOCTL_EVENT_SYSASSERT" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
}
#typev wbe_c1349 59 "%0WbeRegisterForEvent failed for IOCTL_EVENT_DEVICE_UNPLUG" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
}
#typev wbe_c1341 58 "%0WbeRegisterForEvent failed for IOCTL_EVENT_PCI_LINK_UP" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
}
#typev wbe_c1333 57 "%0WbeRegisterForEvent failed for IOCTL_EVENT_PCI_PRE_LINK_DOWN" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
}
#typev wbe_c1592 67 "%0The output buffer recieved is too small to contain the Marlon temperatures" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
}
#typev wbe_c1620 69 "%0output buffer size %10!d! is too small" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
Arg, ItemLong -- 10
}
#typev wbe_c1611 68 "%0input buffer size %10!d! is too small" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
Arg, ItemLong -- 10
}
#typev wbe_c1654 45 "%0check for valid pointers FAILED." //   FLAGS=COMP_SEND LEVEL=DBG_NORMAL FUNC=Wbe_Ioctl
{
}
#typev wbe_c1648 72 "%0output buffer size %10!d! is too small" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
Arg, ItemLong -- 10
}
#typev wbe_c1639 71 "%0input buffer size %10!d! is too small" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
Arg, ItemLong -- 10
}
#typev wbe_c1634 70 "%0ABOUT TO GO IN IOCTL_DRIVER_GET_DATA_STATISTICS." //   FLAGS=COMP_SEND LEVEL=DBG_NORMAL FUNC=Wbe_Ioctl
{
}
#typev wbe_c1675 74 "%0output buffer size %10!d! is too small" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
Arg, ItemLong -- 10
}
#typev wbe_c1666 73 "%0input buffer size %10!d! is too small" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
Arg, ItemLong -- 10
}
#typev wbe_c1702 76 "%0output buffer size %10!d! is too small" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
Arg, ItemLong -- 10
}
#typev wbe_c1693 75 "%0input buffer size %10!d! is too small" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
Arg, ItemLong -- 10
}
// PDB:  qca11ad850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev wbe_c1302 55 "%0%10!s! (0x%11!08x!) InputBufLen=%12!d!, OutputBufLen=%13!d!, AppContext 0x%14!p!" //   FLAGS=COMP_OID LEVEL=ioctlDebugLevel FUNC=Wbe_Ioctl
{
Arg, ItemString -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemPtr -- 14
}
#typev wbe_c1291 10 "%0Unsupported IOCTL 0x%10!x!" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_Ioctl
{
Arg, ItemLong -- 10
}
#typev wbe_c2088 98 "%0WBE: signaling IOCTL_EVENT_PCI_LINK_UP" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_PciLinkCallback
{
}
#typev wbe_c2093 99 "%0WBE: signaling IOCTL_EVENT_PCI_PRE_LINK_DOWN" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_PciLinkCallback
{
}
#typev wbe_c2098 100 "%0WBE: signaling IOCTL_EVENT_PCI_LINK_DOWN" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_PciLinkCallback
{
}
#typev wbe_c2103 101 "%0Wbe_PciLinkCallback unknown PciLinkEvent %10!d!" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_PciLinkCallback
{
Arg, ItemLong -- 10
}
#typev wbe_c892 35 "%0<-- %!FUNC!" //   COMPID=COMP_OID FUNC=Wbe_ProtectedInsert
{
}
#typev wbe_c880 34 "%0WBE: signaling with eventId 0x%10!x! Len %11!d!" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_ProtectedInsert
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev wbe_c876 33 "%0EventsQ size after insert %10!d!" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_ProtectedInsert
{
Arg, ItemLong -- 10
}
#typev wbe_c875 32 "%0New inserted event has EventId %10!d!" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_ProtectedInsert
{
Arg, ItemLong -- 10
}
#typev wbe_c866 31 "%0EventsQ size before insert %10!d!" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_ProtectedInsert
{
Arg, ItemLong -- 10
}
#typev wbe_c862 30 "%0--> %!FUNC!" //   COMPID=COMP_OID FUNC=Wbe_ProtectedInsert
{
}
#typev wbe_c679 29 "%0Stored event info in ReceiveEvent with type %10!d!" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_ReceiveEvent
{
Arg, ItemLong -- 10
}
#typev wbe_c638 27 "%0<-- %!FUNC!" //   COMPID=COMP_INIT_PNP FUNC=Wbe_ReceiveEvent
{
}
#typev wbe_c638 26 "%0dequeue event from list" //   FLAGS=COMP_INIT_PNP LEVEL=DBG_LOUD FUNC=Wbe_ReceiveEvent
{
}
#typev wbe_c638 25 "%0Size of HostEventsQueue after dequeue %10!d!" //   FLAGS=COMP_INIT_PNP LEVEL=DBG_LOUD FUNC=Wbe_ReceiveEvent
{
Arg, ItemLong -- 10
}
#typev wbe_c638 24 "%0--> %!FUNC!" //   COMPID=COMP_INIT_PNP FUNC=Wbe_ReceiveEvent
{
}
#typev wbe_c2222 104 "%0<-- %!FUNC!" //   COMPID=COMP_OID FUNC=Wbe_RegisterDevice
{
}
#typev wbe_c2196 103 "%0NdisRegisterDeviceEx failed (0x%10!x!)" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_RegisterDevice
{
Arg, ItemLong -- 10
}
#typev wbe_c2153 102 "%0--> %!FUNC!" //   COMPID=COMP_OID FUNC=Wbe_RegisterDevice
{
}
#typev wbe_c506 20 "%0Invalid handle in Wbe_RegisterEvents" //   FLAGS=COMP_INIT_PNP LEVEL=DBG_NORMAL FUNC=Wbe_RegisterEvents
{
}
#typev wbe_c541 23 "%0Registered with given handle" //   FLAGS=COMP_INIT_PNP LEVEL=DBG_NORMAL FUNC=Wbe_RegisterEvents
{
}
#typev wbe_c537 22 "%0Unable to reference User-Mode Event object, Error = 0x%10!x!" //   FLAGS=COMP_INIT_PNP LEVEL=DBG_SERIOUS FUNC=Wbe_RegisterEvents
{
Arg, ItemLong -- 10
}
#typev wbe_c512 21 "%0Starting events registration" //   FLAGS=COMP_INIT_PNP LEVEL=DBG_NORMAL FUNC=Wbe_RegisterEvents
{
}
#typev wbe_c431 17 "%0Unregistering..." //   FLAGS=COMP_INIT_PNP LEVEL=DBG_NORMAL FUNC=Wbe_RegisterForEvent
{
}
#typev wbe_c464 19 "%0Unable to reference User-Mode Event object, Error = 0x%10!x!" //   FLAGS=COMP_INIT_PNP LEVEL=DBG_SERIOUS FUNC=Wbe_RegisterForEvent
{
Arg, ItemLong -- 10
}
#typev wbe_c443 18 "%0Failed to allocate memory for WBE_EVENT_REGISTRATION" //   FLAGS=COMP_INIT_PNP LEVEL=DBG_SERIOUS FUNC=Wbe_RegisterForEvent
{
}
#typev wbe_c426 16 "%0WbeRegisterForEvent: UserEventHandle 0x%10!p! EventType %11!d!" //   FLAGS=COMP_INIT_PNP LEVEL=DBG_NORMAL FUNC=Wbe_RegisterForEvent
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev wbe_c2062 97 "%0WBE: SysAssert self recovery..." //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_SysAssertCallback
{
}
#typev wbe_c2055 96 "%0WBE: signaling IOCTL_EVENT_SYSASSERT" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_SysAssertCallback
{
}
#typev wbe_c2032 95 "%0failed to exit SAFE mode (0x%10!x!), previous mode %11!d!" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_SysAssertSelfRecovery
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev wbe_c2023 94 "%0failed to enter SAFE mode (0x%10!x!)" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_SysAssertSelfRecovery
{
Arg, ItemLong -- 10
}
#typev wbe_c999 40 "%0temperatures received from WMI: marlon_m_t1000 = %10!d! , marlon_r_t1000 = %11!d!" //   FLAGS=COMP_OID LEVEL=DBG_LOUD FUNC=Wbe_TempSense
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev wbe_c991 39 "%0Error receiving Marlon temperature values from FW" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_TempSense
{
}
#typev wbe_c313 13 "%0InfoBuffer is NULL" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_ValidateIoctlBuffers
{
}
#typev wbe_c306 12 "%0OutputBufferLen %10!d! less than minimum required %11!d!" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_ValidateIoctlBuffers
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev wbe_c299 11 "%0InputBufferLen %10!d! less than minimum required %11!d!" //   FLAGS=COMP_OID LEVEL=DBG_SERIOUS FUNC=Wbe_ValidateIoctlBuffers
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev wbe_c1968 93 "%0WBE: signaling IOCTL_EVENT_MAILBOX_MSG (eventId 0x%10!x! Len %11!d!)" //   FLAGS=COMP_OID LEVEL=DBG_NORMAL FUNC=Wbe_WmiCallback
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev wbe_c1956 92 "%0Failed to allocate memory for WBE_WMI_EVENTS_Q_ITEM" //   FLAGS=COMP_INIT_PNP LEVEL=DBG_SERIOUS FUNC=Wbe_WmiCallback
{
}
