// PDB:  qciommu850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
afe61ec2-60c1-3bab-5d2d-2eba6af770b0 IOMMU // SRC=Device.cpp MJ= MN=
#typev Device_cpp930 61 "%0 Device.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=ExposeThisInterface
{
}
#typev Device_cpp879 59 "%0 Device.cpp::%!FUNC!::879 :Failed to add driver defined interface 1" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=ExposeThisInterface
{
}
#typev Device_cpp802 58 "%0 Device.cpp::%!FUNC!::802 :Failed to add driver defined interface 1" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=ExposeThisInterface
{
}
#typev Device_cpp724 57 "%0 Device.cpp::%!FUNC!::724 :Failed to retrieve device interface string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=ExposeThisInterface
{
}
#typev Device_cpp711 56 "%0 Device.cpp::%!FUNC!::711 :Failed to create WDF string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=ExposeThisInterface
{
}
#typev Device_cpp697 55 "%0 Device.cpp::%!FUNC!::697 :Failed to create device interface" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=ExposeThisInterface
{
}
#typev Device_cpp683 54 "%0 Device.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=ExposeThisInterface
{
}
#typev Device_cpp1015 70 "%0 Device.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=OnD0Entry
{
}
#typev Device_cpp1009 69 "%0 Device.cpp::%!FUNC! :SMMU :Regular Boot" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=OnD0Entry
{
}
#typev Device_cpp1002 68 "%0 Device.cpp::%!FUNC!::1002 :Unable to bring domain out of passthrough mode" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnD0Entry
{
}
#typev Device_cpp987 67 "%0 Device.cpp::%!FUNC!::987 :InitializeTree failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnD0Entry
{
}
#typev Device_cpp976 66 "%0 Device.cpp::%!FUNC! :SMMU :Register for Tree Interface " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=OnD0Entry
{
}
#typev Device_cpp975 65 "%0 Device.cpp::%!FUNC! :SMMU :Entering OnD0Entry during Hibernate " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=OnD0Entry
{
}
#typev Device_cpp970 64 "%0 Device.cpp::%!FUNC!::970 :HVX not enabled skip D0Entry" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnD0Entry
{
}
#typev Device_cpp964 63 "%0 Device.cpp::%!FUNC!::964 :pConfig is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnD0Entry
{
}
#typev Device_cpp954 62 "%0 Device.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=OnD0Entry
{
}
#typev Device_cpp1015 70 "%0 Device.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`OnD0Entry'::`1'::fin$0
{
}
#typev Device_cpp1009 69 "%0 Device.cpp::%!FUNC! :SMMU :Regular Boot" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`OnD0Entry'::`1'::fin$0
{
}
#typev Device_cpp1002 68 "%0 Device.cpp::%!FUNC!::1002 :Unable to bring domain out of passthrough mode" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`OnD0Entry'::`1'::fin$0
{
}
#typev Device_cpp987 67 "%0 Device.cpp::%!FUNC!::987 :InitializeTree failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`OnD0Entry'::`1'::fin$0
{
}
#typev Device_cpp976 66 "%0 Device.cpp::%!FUNC! :SMMU :Register for Tree Interface " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`OnD0Entry'::`1'::fin$0
{
}
#typev Device_cpp975 65 "%0 Device.cpp::%!FUNC! :SMMU :Entering OnD0Entry during Hibernate " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`OnD0Entry'::`1'::fin$0
{
}
#typev Device_cpp970 64 "%0 Device.cpp::%!FUNC!::970 :HVX not enabled skip D0Entry" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`OnD0Entry'::`1'::fin$0
{
}
#typev Device_cpp964 63 "%0 Device.cpp::%!FUNC!::964 :pConfig is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`OnD0Entry'::`1'::fin$0
{
}
#typev Device_cpp954 62 "%0 Device.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`OnD0Entry'::`1'::fin$0
{
}
#typev Device_cpp1098 79 "%0 Device.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=OnD0Exit
{
}
#typev Device_cpp1092 78 "%0 Device.cpp::%!FUNC! :SMMU :Shutdown occurred" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=OnD0Exit
{
}
#typev Device_cpp1087 77 "%0 Device.cpp::%!FUNC!::1087 :CleanupTree failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnD0Exit
{
}
#typev Device_cpp1081 76 "%0 Device.cpp::%!FUNC!::1081 :CloseAndDestroySecureTarget Failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnD0Exit
{
}
#typev Device_cpp1077 75 "%0 Device.cpp::%!FUNC! :SMMU: Unregister for tree interface" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=OnD0Exit
{
}
#typev Device_cpp1073 74 "%0 Device.cpp::%!FUNC!::1073 :Unable to put domain in pass-through mode" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnD0Exit
{
}
#typev Device_cpp1061 73 "%0 Device.cpp::%!FUNC! :SMMU :Entering OnD0Exit during Hibernate " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=OnD0Exit
{
}
#typev Device_cpp1055 72 "%0 Device.cpp::%!FUNC!::1055 :HVX not enabled skip D0Exit" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnD0Exit
{
}
#typev Device_cpp1040 71 "%0 Device.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=OnD0Exit
{
}
#typev Device_cpp1098 79 "%0 Device.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`OnD0Exit'::`1'::fin$0
{
}
#typev Device_cpp1092 78 "%0 Device.cpp::%!FUNC! :SMMU :Shutdown occurred" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`OnD0Exit'::`1'::fin$0
{
}
#typev Device_cpp1087 77 "%0 Device.cpp::%!FUNC!::1087 :CleanupTree failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`OnD0Exit'::`1'::fin$0
{
}
#typev Device_cpp1081 76 "%0 Device.cpp::%!FUNC!::1081 :CloseAndDestroySecureTarget Failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`OnD0Exit'::`1'::fin$0
{
}
#typev Device_cpp1077 75 "%0 Device.cpp::%!FUNC! :SMMU: Unregister for tree interface" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`OnD0Exit'::`1'::fin$0
{
}
#typev Device_cpp1073 74 "%0 Device.cpp::%!FUNC!::1073 :Unable to put domain in pass-through mode" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`OnD0Exit'::`1'::fin$0
{
}
#typev Device_cpp1061 73 "%0 Device.cpp::%!FUNC! :SMMU :Entering OnD0Exit during Hibernate " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`OnD0Exit'::`1'::fin$0
{
}
#typev Device_cpp1055 72 "%0 Device.cpp::%!FUNC!::1055 :HVX not enabled skip D0Exit" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`OnD0Exit'::`1'::fin$0
{
}
#typev Device_cpp1040 71 "%0 Device.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`OnD0Exit'::`1'::fin$0
{
}
#typev Device_cpp564 45 "%0 Device.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=OnPrepareHardware
{
}
#typev Device_cpp547 44 "%0 Device.cpp::%!FUNC!::547 :ExposeThisInterface failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
}
#typev Device_cpp538 43 "%0 Device.cpp::%!FUNC!::538 :InitializeTree failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
}
#typev Device_cpp520 42 "%0 Device.cpp::%!FUNC!::520 : ParseIortTable Failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
result, ItemNTSTATUS -- 10
}
#typev Device_cpp512 41 "%0 Device.cpp::%!FUNC!::512 :ERROR Failed to read smmu errata clients information 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
result, ItemLong -- 10
}
#typev Device_cpp504 40 "%0 Device.cpp::%!FUNC!::504 :ERROR Failed to read smmu errata information 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
result, ItemLong -- 10
}
#typev Device_cpp486 38 "%0 Device.cpp::%!FUNC!::486 :EvaluateRegistrySmmuInputMappingInformation failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
}
#typev Device_cpp478 37 "%0 Device.cpp::%!FUNC!::478 :SmmuGlobalDataClass::InitializePerDeviceData failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
}
#typev Device_cpp470 36 "%0 Device.cpp::%!FUNC!::470 : Failed EvaluateRegistrySmmuGuid with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
result, ItemNTSTATUS -- 10
}
#typev Device_cpp463 35 "%0 Device.cpp::%!FUNC!::463 : Failed GetInstanceId with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
result, ItemNTSTATUS -- 10
}
#typev Device_cpp455 34 "%0 Device.cpp::%!FUNC!::455 : AuxKlibGetSystemFirmwareTable failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
result, ItemNTSTATUS -- 10
}
#typev Device_cpp447 33 "%0 Device.cpp::%!FUNC!::447 : AuxKlibGetSystemFirmwareTable failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
result, ItemNTSTATUS -- 10
}
#typev Device_cpp440 32 "%0 Device.cpp::%!FUNC!::440 : Memory allocation failed %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
result, ItemNTSTATUS -- 10
}
#typev Device_cpp426 31 "%0 Device.cpp::%!FUNC!::426 : Failed WdfDeviceOpenRegistryKey with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
result, ItemNTSTATUS -- 10
}
#typev Device_cpp414 30 "%0 Device.cpp::%!FUNC!::414 :Device Context has been corrupted. This is very very bad." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
}
#typev Device_cpp402 29 "%0 Device.cpp::%!FUNC! :IOMMU API Not found, HVX is not enabled, Skipping IOMMU driver Initialization" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=OnPrepareHardware
{
}
#typev Device_cpp396 28 "%0 Device.cpp::%!FUNC! :HVX is enabled, Initializing IOMMU Driver.." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=OnPrepareHardware
{
}
#typev Device_cpp391 27 "%0 Device.cpp::%!FUNC!::391 : HVX Not Enabled, Skipping IOMMU driver Initialization" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
}
#typev Device_cpp378 26 "%0 Device.cpp::%!FUNC!::378 : IOMMU Interface Not found, HVX is not enabled, Skipping IOMMU driver Initialization %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
result, ItemNTSTATUS -- 10
}
#typev Device_cpp370 25 "%0 Device.cpp::%!FUNC!::370 : IOMMU Interface Not found, HVX is not enabled, Skipping IOMMU driver Initialization %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnPrepareHardware
{
result, ItemNTSTATUS -- 10
}
#typev Device_cpp350 24 "%0 Device.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=OnPrepareHardware
{
}
#typev Device_cpp626 50 "%0 Device.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=OnReleaseHardware
{
}
#typev Device_cpp619 49 "%0 Device.cpp::%!FUNC!::619 :CleanupTree failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnReleaseHardware
{
}
#typev Device_cpp613 48 "%0 Device.cpp::%!FUNC!::613 :pConfig NULL!!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnReleaseHardware
{
}
#typev Device_cpp608 47 "%0 Device.cpp::%!FUNC!::608 :pConfig NULL!!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnReleaseHardware
{
}
#typev Device_cpp598 46 "%0 Device.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=OnReleaseHardware
{
}
#typev Device_cpp626 50 "%0 Device.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`OnReleaseHardware'::`1'::fin$0
{
}
#typev Device_cpp619 49 "%0 Device.cpp::%!FUNC!::619 :CleanupTree failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`OnReleaseHardware'::`1'::fin$0
{
}
#typev Device_cpp613 48 "%0 Device.cpp::%!FUNC!::613 :pConfig NULL!!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`OnReleaseHardware'::`1'::fin$0
{
}
#typev Device_cpp608 47 "%0 Device.cpp::%!FUNC!::608 :pConfig NULL!!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`OnReleaseHardware'::`1'::fin$0
{
}
#typev Device_cpp598 46 "%0 Device.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`OnReleaseHardware'::`1'::fin$0
{
}
#typev Device_cpp646 52 "%0 Device.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=SmmuInterfaceDereference
{
}
#typev Device_cpp636 51 "%0 Device.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=SmmuInterfaceReference
{
}
