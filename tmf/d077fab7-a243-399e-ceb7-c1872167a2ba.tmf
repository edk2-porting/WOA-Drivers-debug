// PDB:  qcdx12arm32um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
d077fab7-a243-399e-ceb7-c1872167a2ba video // SRC=venusdecodedevice.cpp MJ= MN=
#typev venusdecodedevice_cpp355 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp354 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp1734 118 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1622 114 "%0AllocInterlaceBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1617 113 "%0AllocInterlaceBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1730 117 "%0DxResource create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1717 116 "%0DxMemObj create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1699 115 "%0Interlace Intermediate Buf DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1597 112 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1909 128 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1778 122 "%0AllocInternalBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1773 121 "%0AllocInternalBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1905 127 "%0AllocInternalBuffer DxResource create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1892 126 "%0AllocInternalBuffer DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1874 125 "%0AllocInternalBuffer DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1844 124 "%4!s!::[%!FUNC!]video internal buffer %10!u! allocation success 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
createData.pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1834 123 "%0Invalid internal buffer index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1763 120 "%0AllocInternalBuffer allocation failed: incorrect index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1753 119 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1265 92 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1096 89 "%4!s!::[%!FUNC!]null arg" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1121 91 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1114 90 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1090 88 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp639 50 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp635 49 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp622 48 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp3997 252 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp3877 246 "%0Invalid input params %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp3889 247 "%0failed to calloc %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp3938 249 "%0Int DPB DxResource create fail %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
m_descData.sampleWidth, ItemLong -- 11
m_descData.sampleHeight, ItemLong -- 12
}
#typev venusdecodedevice_cpp3982 251 "%0Int DPB resource DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3965 250 "%0Int DPB resource DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp3931 248 "%4!s!::[%!FUNC!]Int DPB DxResource create success, corresp DxMemObj to be created" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp3873 245 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp31 29 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp31 28 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
// PDB:  qcdx12arm32um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusdecodedevice_cpp30 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp29 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp1997 133 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp1958 132 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp2671 182 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp2668 181 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp2661 180 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2643 179 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2629 178 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2599 177 "%0HandleH264InterlaceInterweaved failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2564 176 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2549 175 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2539 174 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2534 173 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp2811 192 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp2808 191 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp2801 190 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2783 189 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2769 188 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2742 187 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2721 186 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2706 185 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2696 184 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2691 183 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp2947 201 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp2943 200 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_vc1DecodeFrame.SliceInfo.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp2936 199 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2918 198 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2904 197 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2861 196 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2846 195 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2836 194 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2831 193 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3216 219 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3213 218 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3206 217 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3188 216 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3174 215 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3131 214 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3116 213 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3106 212 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3101 211 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3081 210 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3078 209 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp9DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3071 208 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3053 207 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3039 206 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2996 205 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2981 204 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2971 203 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2966 202 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp1579 111 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1573 110 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1566 109 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1545 108 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp3567 231 "%4!s!::[%!FUNC!]Enabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp3564 234 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp3564 233 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
// PDB:  qcdx12arm32um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusdecodedevice_cpp701 55 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp697 54 "%0FillBitStreamData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp690 53 "%0Invalid heap pointer in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp683 52 "%4!s!::[%!FUNC!]nInputAllocLen %10!u! nInputFilledLen %11!u! nInputStartOffset %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
pBitStream->nInputAllocLen, ItemLong -- 10
pBitStream->nInputFilledLen, ItemLong -- 11
pBitStream->nInputStartOffset, ItemLong -- 12
}
#typev venusdecodedevice_cpp660 51 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp4214 268 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4199 267 "%4!s!::[%!FUNC!]OPB Buffer Address : %10!I64u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
pOpbInfo[Plane0].PackEngineAddress, ItemULongLong -- 10
}
#typev venusdecodedevice_cpp4176 266 "%0pHeap->pMemObj invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4166 265 "%0pHeap invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4155 264 "%0pSubResInfo invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4145 263 "%0OpbResource invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4140 262 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4251 272 "%0Error: Descriptor width/height is greater than resource width/height" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4300 278 "%4!s!::[%!FUNC!]Buffer req: OPB Res compress flag = %10!u!, OPB Buffer updated compress flag = %11!u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_pOpbResource->IsUBWCompressedRes(), ItemLong -- 10
pOpbInfo->BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp4298 277 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferHeight[0], ItemLong -- 10
pOpbInfo->BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4296 276 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferStride[0], ItemLong -- 10
pOpbInfo->BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4294 275 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferAlignment[0], ItemLong -- 10
pOpbInfo->BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4292 274 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferSize[0], ItemLong -- 10
pOpbInfo->BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4291 273 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4244 271 "%4!s!::[%!FUNC!]OPB Resource Width: %10!u! , OPB Resource Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->width, ItemLong -- 10
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4243 270 "%4!s!::[%!FUNC!]DPB width: %10!u! , Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_dpbDesc.width, ItemLong -- 10
m_dpbDesc.height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4231 269 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4113 261 "%4!s!::[%!FUNC!]Exit " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4110 260 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4102 259 "%4!s!::[%!FUNC!]Failed to alloc interlace intermediate buffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4096 258 "%4!s!::[%!FUNC!]Enable Interlace 3-PASS mode " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4069 257 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4062 256 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4046 255 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp480 43 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp463 42 "%0DPB-OPB split mode driver required, NULL DPB unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp458 41 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, after 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp452 40 "%0DPB-OPB split mode changed by OS after 1st frame, not handled " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp438 39 "%0DPB-OPB split mode driver required, failed to allocate DPB" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp413 38 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp407 37 "%4!s!::[%!FUNC!]DPB-OPB split due to OS ref_only, 1st frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp402 36 "%0DPB-OPB split due to OS ref_only is already set, not expected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp395 35 "%4!s!::[%!FUNC!]DPB-OPB split 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
splitType, ItemLong -- 10
}
#typev venusdecodedevice_cpp388 34 "%0DPB-OPB split due to OS but not DPB set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp383 33 "%0DPB-OPB split due to OS but ref_only not set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp372 32 "%4!s!::[%!FUNC!]Enter " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp589 46 "%0HwDecodeFrame fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp601 47 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp517 45 "%4!s!::[%!FUNC!]DPB Res Compress Flag = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pDpbResource->IsUBWCompressedRes(), ItemLong -- 10
}
#typev venusdecodedevice_cpp502 44 "%4!s!::[%!FUNC!]Enter profile=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp284 25 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp280 239 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp280 237 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp280 238 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp280 236 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp274 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp274 254 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp274 253 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp274 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp268 107 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp268 106 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp268 105 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp263 24 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp247 23 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp186 235 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp231 21 "%0InitDecodePictureBufferCount fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp241 22 "%0AllocateInternalVideoBuffers fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp238 131 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp238 130 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp238 129 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp212 104 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp212 103 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp212 102 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp192 59 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp192 58 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp192 57 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp192 56 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp176 20 "%4!s!::[%!FUNC!]SessionType %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
SessionType(), ItemLong -- 10
}
#typev venusdecodedevice_cpp100 14 "%0Invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp152 19 "%4!s!::[%!FUNC!]dims %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.sampleWidth, ItemLong -- 10
m_descData.sampleHeight, ItemLong -- 11
sampleMB, ItemLong -- 12
}
#typev venusdecodedevice_cpp138 18 "%4!s!::[%!FUNC!]Same DPB & OPB format, no split required %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp132 17 "%0DPB & OPB format differ %10!u! %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
m_opbFormat, ItemLong -- 11
}
#typev venusdecodedevice_cpp122 16 "%0Invalid output format %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp108 15 "%4!s!::[%!FUNC!]outputFormat = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp60 13 "%4!s!::[%!FUNC!]Decode profile = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.profile, ItemLong -- 10
}
#typev venusdecodedevice_cpp47 12 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp3527 230 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwIsContentInterlaced
{
}
#typev venusdecodedevice_cpp1477 101 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1473 100 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1466 99 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1438 98 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1419 97 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1390 96 "%0pHeap->pMemObj NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1380 95 "%0pHeap NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1368 94 "%0pDpbResource NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1363 93 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1067 87 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp1062 86 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1055 85 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1042 84 "%4!s!::[%!FUNC!]buff reqs %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
bufferReqs.BufferAlignment[0], ItemLong -- 12
}
#typev venusdecodedevice_cpp1015 83 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp805 63 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp801 62 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp794 61 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp768 60 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp4358 284 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4350 282 "%0m_pDpbResource is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4355 283 "%0SubResourceInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4339 281 "%4!s!::[%!FUNC!]Aligned Buffer Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
reqOutput.stride[0], ItemLong -- 10
reqOutput.height[0], ItemLong -- 11
}
#typev venusdecodedevice_cpp4338 280 "%4!s!::[%!FUNC!]DPB Resource Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
actualResourceWidth, ItemLong -- 10
actualResourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp4321 279 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp3496 229 "%0Invalid Command %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
CmdType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3482 228 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3451 227 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3420 226 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3389 225 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3359 224 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3330 223 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3317 222 "%0Stop Session Submit failed: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3290 221 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3277 220 "%0Start Session Submit failed:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp998 82 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp993 81 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp986 80 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp969 79 "%4!s!::[%!FUNC!]Pixel format = %10!u!, IsCompressed = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.PixelFormat, ItemLong -- 10
bufferReqs.BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp967 78 "%4!s!::[%!FUNC!]Resource Width = %10!u!, Resource Height     = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.resourceWidth, ItemLong -- 10
bufferReqs.resourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp963 77 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp937 75 "%0OPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp951 76 "%4!s!::[%!FUNC!]Setting following DPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp928 74 "%0DPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp914 73 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp894 72 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp889 71 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp882 70 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp864 69 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferHeight[0], ItemLong -- 10
bufferReqs.BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp862 68 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferStride[0], ItemLong -- 10
bufferReqs.BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp860 67 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferAlignment[0], ItemLong -- 10
bufferReqs.BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp858 66 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp857 65 "%4!s!::[%!FUNC!]Setting following buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp822 64 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp2210 150 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2143 146 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2193 148 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2183 147 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2203 149 "%4!s!::[%!FUNC!]unhandled buffer type %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2135 145 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2300 156 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2237 152 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2284 154 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2274 153 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2294 155 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2229 151 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2362 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2325 158 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2345 160 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2335 159 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2355 161 "%4!s!::[%!FUNC!]unhandled buffer %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2318 157 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3849 244 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3835 242 "%0invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3824 241 "%0invalid private data pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3779 240 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp2514 172 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2466 169 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2497 170 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2507 171 "%0Invalid Buffer Type %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2458 168 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2440 167 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2388 164 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2424 165 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2434 166 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2381 163 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3622 232 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
// PDB:  qcdx12arm64um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev dxvideodecenchwfactory_cpp173 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=DxVideoDecEncHwFactory::CreateDecodeDevice
{
}
#typev dxvideodecenchwfactory_cpp173 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=DxVideoDecEncHwFactory::CreateDecodeDevice
{
}
// PDB:  qcdx12arm64um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusvideofactory_cpp100 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
#typev venusvideofactory_cpp100 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
// PDB:  qcdx12arm64um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusdecodedevice_cpp340 29 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp322 28 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
// PDB:  qcdx12arm64um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusdecodedevice_cpp355 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp354 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp1734 118 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1622 114 "%0AllocInterlaceBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1617 113 "%0AllocInterlaceBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1730 117 "%0DxResource create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1717 116 "%0DxMemObj create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1699 115 "%0Interlace Intermediate Buf DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1597 112 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1909 128 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1778 122 "%0AllocInternalBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1773 121 "%0AllocInternalBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1905 127 "%0AllocInternalBuffer DxResource create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1892 126 "%0AllocInternalBuffer DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1874 125 "%0AllocInternalBuffer DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1844 124 "%4!s!::[%!FUNC!]video internal buffer %10!u! allocation success 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
createData.pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1829 123 "%0Invalid internal buffer index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1763 120 "%0AllocInternalBuffer allocation failed: incorrect index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1753 119 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1265 92 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1096 89 "%4!s!::[%!FUNC!]null arg" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1121 91 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1114 90 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1090 88 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp639 50 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp635 49 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp622 48 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp3997 252 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp3877 246 "%0Invalid input params %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp3889 247 "%0failed to calloc %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp3938 249 "%0Int DPB DxResource create fail %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
m_descData.sampleWidth, ItemLong -- 11
m_descData.sampleHeight, ItemLong -- 12
}
#typev venusdecodedevice_cpp3982 251 "%0Int DPB resource DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3965 250 "%0Int DPB resource DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp3931 248 "%4!s!::[%!FUNC!]Int DPB DxResource create success, corresp DxMemObj to be created" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp3873 245 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp1997 133 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp1958 132 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp2671 182 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp2668 181 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp2661 180 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2643 179 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2629 178 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2599 177 "%0HandleH264InterlaceInterweaved failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2564 176 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2549 175 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2539 174 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2534 173 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp2811 192 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp2808 191 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp2801 190 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2783 189 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2769 188 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2721 186 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2706 185 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2696 184 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2691 183 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp2947 201 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp2943 200 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_vc1DecodeFrame.SliceInfo.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp2936 199 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2918 198 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2904 197 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2861 196 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2846 195 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2836 194 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2831 193 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3216 219 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3213 218 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3206 217 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3188 216 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3174 215 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3131 214 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3116 213 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3106 212 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3101 211 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3081 210 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3078 209 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp9DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3071 208 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3053 207 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3039 206 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2996 205 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2981 204 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2971 203 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2966 202 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp1579 111 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1573 110 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1566 109 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1545 108 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp307 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp304 254 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp304 253 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp300 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp3567 231 "%4!s!::[%!FUNC!]Enabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp3564 234 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp3564 233 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
// PDB:  qcdx12arm64um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusdecodedevice_cpp701 55 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp697 54 "%0FillBitStreamData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp690 53 "%0Invalid heap pointer in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp683 52 "%4!s!::[%!FUNC!]nInputAllocLen %10!u! nInputFilledLen %11!u! nInputStartOffset %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
pBitStream->nInputAllocLen, ItemLong -- 10
pBitStream->nInputFilledLen, ItemLong -- 11
pBitStream->nInputStartOffset, ItemLong -- 12
}
#typev venusdecodedevice_cpp660 51 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp4214 268 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4199 267 "%4!s!::[%!FUNC!]OPB Buffer Address : %10!I64u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
pOpbInfo[Plane0].PackEngineAddress, ItemULongLong -- 10
}
#typev venusdecodedevice_cpp4176 266 "%0pHeap->pMemObj invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4166 265 "%0pHeap invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4155 264 "%0pSubResInfo invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4145 263 "%0OpbResource invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4140 262 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4251 272 "%0Error: Descriptor width/height is greater than resource width/height" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4300 278 "%4!s!::[%!FUNC!]Buffer req: OPB Res compress flag = %10!u!, OPB Buffer updated compress flag = %11!u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_pOpbResource->IsUBWCompressedRes(), ItemLong -- 10
pOpbInfo->BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp4298 277 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferHeight[0], ItemLong -- 10
pOpbInfo->BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4296 276 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferStride[0], ItemLong -- 10
pOpbInfo->BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4294 275 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferAlignment[0], ItemLong -- 10
pOpbInfo->BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4292 274 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferSize[0], ItemLong -- 10
pOpbInfo->BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4291 273 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4244 271 "%4!s!::[%!FUNC!]OPB Resource Width: %10!u! , OPB Resource Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->width, ItemLong -- 10
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4243 270 "%4!s!::[%!FUNC!]DPB width: %10!u! , Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_dpbDesc.width, ItemLong -- 10
m_dpbDesc.height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4231 269 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4113 261 "%4!s!::[%!FUNC!]Exit " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4110 260 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4102 259 "%4!s!::[%!FUNC!]Failed to alloc interlace intermediate buffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4096 258 "%4!s!::[%!FUNC!]Enable Interlace 3-PASS mode " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4069 257 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4062 256 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4046 255 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp480 43 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp463 42 "%0DPB-OPB split mode driver required, NULL DPB unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp458 41 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, after 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp452 40 "%0DPB-OPB split mode changed by OS after 1st frame, not handled " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp438 39 "%0DPB-OPB split mode driver required, failed to allocate DPB" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp413 38 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp407 37 "%4!s!::[%!FUNC!]DPB-OPB split due to OS ref_only, 1st frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp402 36 "%0DPB-OPB split due to OS ref_only is already set, not expected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp395 35 "%4!s!::[%!FUNC!]DPB-OPB split 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
splitType, ItemLong -- 10
}
#typev venusdecodedevice_cpp388 34 "%0DPB-OPB split due to OS but not DPB set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp383 33 "%0DPB-OPB split due to OS but ref_only not set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp372 32 "%4!s!::[%!FUNC!]Enter " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp517 47 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp517 46 "%0HwDecodeFrame fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp517 45 "%4!s!::[%!FUNC!]DPB Res Compress Flag = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pDpbResource->IsUBWCompressedRes(), ItemLong -- 10
}
#typev venusdecodedevice_cpp502 44 "%4!s!::[%!FUNC!]Enter profile=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp284 25 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp280 239 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp280 237 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp280 238 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp280 236 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp268 107 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp268 106 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp268 105 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp263 24 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp247 23 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp186 235 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp231 21 "%0InitDecodePictureBufferCount fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp241 22 "%0AllocateInternalVideoBuffers fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp238 131 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp238 130 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp238 129 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp212 104 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp212 103 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp212 102 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp176 20 "%4!s!::[%!FUNC!]SessionType %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
SessionType(), ItemLong -- 10
}
#typev venusdecodedevice_cpp100 14 "%0Invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp152 19 "%4!s!::[%!FUNC!]dims %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.sampleWidth, ItemLong -- 10
m_descData.sampleHeight, ItemLong -- 11
sampleMB, ItemLong -- 12
}
#typev venusdecodedevice_cpp138 18 "%4!s!::[%!FUNC!]Same DPB & OPB format, no split required %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp132 17 "%0DPB & OPB format differ %10!u! %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
m_opbFormat, ItemLong -- 11
}
#typev venusdecodedevice_cpp122 16 "%0Invalid output format %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp108 15 "%4!s!::[%!FUNC!]outputFormat = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp60 13 "%4!s!::[%!FUNC!]Decode profile = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.profile, ItemLong -- 10
}
#typev venusdecodedevice_cpp47 12 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp3527 230 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwIsContentInterlaced
{
}
#typev venusdecodedevice_cpp1477 101 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1473 100 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1466 99 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1438 98 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1419 97 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1390 96 "%0pHeap->pMemObj NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1380 95 "%0pHeap NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1368 94 "%0pDpbResource NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1363 93 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1067 87 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp1062 86 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1055 85 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1042 84 "%4!s!::[%!FUNC!]buff reqs %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
bufferReqs.BufferAlignment[0], ItemLong -- 12
}
#typev venusdecodedevice_cpp1015 83 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp751 59 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp747 58 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp740 57 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp719 56 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp805 63 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp801 62 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp794 61 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp768 60 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp4358 284 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4350 282 "%0m_pDpbResource is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4355 283 "%0SubResourceInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4339 281 "%4!s!::[%!FUNC!]Aligned Buffer Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
reqOutput.stride[0], ItemLong -- 10
reqOutput.height[0], ItemLong -- 11
}
#typev venusdecodedevice_cpp4338 280 "%4!s!::[%!FUNC!]DPB Resource Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
actualResourceWidth, ItemLong -- 10
actualResourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp4321 279 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp3496 229 "%0Invalid Command %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
CmdType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3482 228 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3451 227 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3420 226 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3389 225 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3359 224 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3330 223 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3317 222 "%0Stop Session Submit failed: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3290 221 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3277 220 "%0Start Session Submit failed:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp998 82 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp993 81 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp986 80 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp969 79 "%4!s!::[%!FUNC!]Pixel format = %10!u!, IsCompressed = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.PixelFormat, ItemLong -- 10
bufferReqs.BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp967 78 "%4!s!::[%!FUNC!]Resource Width = %10!u!, Resource Height     = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.resourceWidth, ItemLong -- 10
bufferReqs.resourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp963 77 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp937 75 "%0OPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp951 76 "%4!s!::[%!FUNC!]Setting following DPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp928 74 "%0DPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp914 73 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp894 72 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp889 71 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp882 70 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp864 69 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferHeight[0], ItemLong -- 10
bufferReqs.BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp862 68 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferStride[0], ItemLong -- 10
bufferReqs.BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp860 67 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferAlignment[0], ItemLong -- 10
bufferReqs.BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp858 66 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp857 65 "%4!s!::[%!FUNC!]Setting following buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp822 64 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp2210 150 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2143 146 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2193 148 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2183 147 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2203 149 "%4!s!::[%!FUNC!]unhandled buffer type %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2135 145 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2300 156 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2237 152 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2284 154 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2274 153 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2294 155 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2229 151 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2362 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2325 158 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2345 160 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2335 159 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2355 161 "%4!s!::[%!FUNC!]unhandled buffer %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2318 157 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3849 244 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3835 242 "%0invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3824 241 "%0invalid private data pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3779 240 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp2514 172 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2466 169 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2497 170 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2507 171 "%0Invalid Buffer Type %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2458 168 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2440 167 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2388 164 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2424 165 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2434 166 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2381 163 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3622 232 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
// PDB:  qcdx12chpeum850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev dxvideodecenchwfactory_cpp173 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=DxVideoDecEncHwFactory::CreateDecodeDevice
{
}
#typev dxvideodecenchwfactory_cpp173 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=DxVideoDecEncHwFactory::CreateDecodeDevice
{
}
// PDB:  qcdx12chpeum850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusvideofactory_cpp100 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
#typev venusvideofactory_cpp100 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
// PDB:  qcdx12chpeum850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusdecodedevice_cpp340 29 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp322 28 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
// PDB:  qcdx12chpeum850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusdecodedevice_cpp355 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::~VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp354 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::~VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp355 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp354 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp1622 114 "%0AllocInterlaceBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1617 113 "%0AllocInterlaceBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1730 117 "%0DxResource create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1717 116 "%0DxMemObj create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1699 115 "%0Interlace Intermediate Buf DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1734 118 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1597 112 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1909 128 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1778 122 "%0AllocInternalBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1773 121 "%0AllocInternalBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1905 127 "%0AllocInternalBuffer DxResource create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1892 126 "%0AllocInternalBuffer DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1874 125 "%0AllocInternalBuffer DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1829 123 "%0Invalid internal buffer index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1844 124 "%4!s!::[%!FUNC!]video internal buffer %10!u! allocation success 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
createData.pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1763 120 "%0AllocInternalBuffer allocation failed: incorrect index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1753 119 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1942 131 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp1936 130 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1924 129 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp1265 92 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1096 89 "%4!s!::[%!FUNC!]null arg" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1121 91 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1114 90 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1090 88 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp639 50 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp635 49 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp622 48 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp3997 252 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp3877 246 "%0Invalid input params %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp3889 247 "%0failed to calloc %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp3938 249 "%0Int DPB DxResource create fail %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
m_descData.sampleWidth, ItemLong -- 11
m_descData.sampleHeight, ItemLong -- 12
}
#typev venusdecodedevice_cpp3982 251 "%0Int DPB resource DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3965 250 "%0Int DPB resource DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp3931 248 "%4!s!::[%!FUNC!]Int DPB DxResource create success, corresp DxMemObj to be created" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp3873 245 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp30 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp29 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp3717 235 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateVenusDecodeDeviceSchedulerCtxt
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1997 133 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp1958 132 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
// PDB:  qcdx12chpeum850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusdecodedevice_cpp2671 182 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp2668 181 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp2661 180 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2643 179 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2629 178 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2599 177 "%0HandleH264InterlaceInterweaved failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2564 176 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2549 175 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2539 174 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2534 173 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp2811 192 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp2808 191 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp2801 190 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2783 189 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2769 188 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2721 186 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2706 185 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2696 184 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2691 183 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp2947 201 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp2943 200 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_vc1DecodeFrame.SliceInfo.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp2936 199 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2918 198 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2904 197 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2861 196 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2846 195 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2836 194 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2831 193 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3216 219 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3213 218 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3206 217 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3188 216 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3174 215 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3131 214 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3116 213 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3106 212 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3101 211 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3081 210 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3078 209 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp9DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3071 208 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3053 207 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3039 206 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2996 205 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2981 204 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2971 203 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2966 202 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp4031 254 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyDpbResource
{
}
#typev venusdecodedevice_cpp4015 253 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyDpbResource
{
}
#typev venusdecodedevice_cpp1579 111 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1573 110 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1566 109 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1545 108 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp307 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp304 254 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp304 253 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp300 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp3757 239 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp3747 237 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp3754 238 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3737 236 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp3592 232 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DisableDpbCompression
{
}
#typev venusdecodedevice_cpp3567 231 "%4!s!::[%!FUNC!]Enabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp3564 234 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp3564 233 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
// PDB:  qcdx12chpeum850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusdecodedevice_cpp701 55 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp697 54 "%0FillBitStreamData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp690 53 "%0Invalid heap pointer in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp683 52 "%4!s!::[%!FUNC!]nInputAllocLen %10!u! nInputFilledLen %11!u! nInputStartOffset %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
pBitStream->nInputAllocLen, ItemLong -- 10
pBitStream->nInputFilledLen, ItemLong -- 11
pBitStream->nInputStartOffset, ItemLong -- 12
}
#typev venusdecodedevice_cpp660 51 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp4214 268 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4199 267 "%4!s!::[%!FUNC!]OPB Buffer Address : %10!I64u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
pOpbInfo[Plane0].PackEngineAddress, ItemULongLong -- 10
}
#typev venusdecodedevice_cpp4176 266 "%0pHeap->pMemObj invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4166 265 "%0pHeap invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4155 264 "%0pSubResInfo invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4145 263 "%0OpbResource invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4140 262 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4251 272 "%0Error: Descriptor width/height is greater than resource width/height" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4300 278 "%4!s!::[%!FUNC!]Buffer req: OPB Res compress flag = %10!u!, OPB Buffer updated compress flag = %11!u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_pOpbResource->IsUBWCompressedRes(), ItemLong -- 10
pOpbInfo->BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp4298 277 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferHeight[0], ItemLong -- 10
pOpbInfo->BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4296 276 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferStride[0], ItemLong -- 10
pOpbInfo->BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4294 275 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferAlignment[0], ItemLong -- 10
pOpbInfo->BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4292 274 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferSize[0], ItemLong -- 10
pOpbInfo->BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4291 273 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4244 271 "%4!s!::[%!FUNC!]OPB Resource Width: %10!u! , OPB Resource Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->width, ItemLong -- 10
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4243 270 "%4!s!::[%!FUNC!]DPB width: %10!u! , Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_dpbDesc.width, ItemLong -- 10
m_dpbDesc.height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4231 269 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4113 261 "%4!s!::[%!FUNC!]Exit " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4110 260 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4102 259 "%4!s!::[%!FUNC!]Failed to alloc interlace intermediate buffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4096 258 "%4!s!::[%!FUNC!]Enable Interlace 3-PASS mode " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4069 257 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4062 256 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4046 255 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp480 43 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp463 42 "%0DPB-OPB split mode driver required, NULL DPB unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp458 41 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, after 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp452 40 "%0DPB-OPB split mode changed by OS after 1st frame, not handled " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp438 39 "%0DPB-OPB split mode driver required, failed to allocate DPB" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp413 38 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp407 37 "%4!s!::[%!FUNC!]DPB-OPB split due to OS ref_only, 1st frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp402 36 "%0DPB-OPB split due to OS ref_only is already set, not expected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp395 35 "%4!s!::[%!FUNC!]DPB-OPB split 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
splitType, ItemLong -- 10
}
#typev venusdecodedevice_cpp388 34 "%0DPB-OPB split due to OS but not DPB set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp383 33 "%0DPB-OPB split due to OS but ref_only not set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp372 32 "%4!s!::[%!FUNC!]Enter " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp517 47 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp517 46 "%0HwDecodeFrame fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp517 45 "%4!s!::[%!FUNC!]DPB Res Compress Flag = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pDpbResource->IsUBWCompressedRes(), ItemLong -- 10
}
#typev venusdecodedevice_cpp502 44 "%4!s!::[%!FUNC!]Enter profile=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp284 25 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp280 239 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp280 237 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp280 238 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp280 236 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp268 107 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp268 106 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp268 105 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp263 24 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp247 23 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp186 235 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp231 21 "%0InitDecodePictureBufferCount fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp241 22 "%0AllocateInternalVideoBuffers fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp238 131 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp238 130 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp238 129 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp212 104 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp212 103 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp212 102 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp176 20 "%4!s!::[%!FUNC!]SessionType %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
SessionType(), ItemLong -- 10
}
#typev venusdecodedevice_cpp100 14 "%0Invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp152 19 "%4!s!::[%!FUNC!]dims %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.sampleWidth, ItemLong -- 10
m_descData.sampleHeight, ItemLong -- 11
sampleMB, ItemLong -- 12
}
#typev venusdecodedevice_cpp138 18 "%4!s!::[%!FUNC!]Same DPB & OPB format, no split required %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp132 17 "%0DPB & OPB format differ %10!u! %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
m_opbFormat, ItemLong -- 11
}
#typev venusdecodedevice_cpp122 16 "%0Invalid output format %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp108 15 "%4!s!::[%!FUNC!]outputFormat = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp60 13 "%4!s!::[%!FUNC!]Decode profile = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.profile, ItemLong -- 10
}
#typev venusdecodedevice_cpp47 12 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp3527 230 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwIsContentInterlaced
{
}
#typev venusdecodedevice_cpp1477 101 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1473 100 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1466 99 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1438 98 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1419 97 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1390 96 "%0pHeap->pMemObj NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1380 95 "%0pHeap NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1368 94 "%0pDpbResource NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1363 93 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1067 87 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp1062 86 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1055 85 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1042 84 "%4!s!::[%!FUNC!]buff reqs %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
bufferReqs.BufferAlignment[0], ItemLong -- 12
}
#typev venusdecodedevice_cpp1015 83 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp751 59 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp747 58 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp740 57 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp719 56 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp805 63 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp801 62 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp794 61 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp768 60 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp4358 284 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4350 282 "%0m_pDpbResource is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4355 283 "%0SubResourceInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4339 281 "%4!s!::[%!FUNC!]Aligned Buffer Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
reqOutput.stride[0], ItemLong -- 10
reqOutput.height[0], ItemLong -- 11
}
#typev venusdecodedevice_cpp4338 280 "%4!s!::[%!FUNC!]DPB Resource Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
actualResourceWidth, ItemLong -- 10
actualResourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp4321 279 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp3660 234 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsVideoUBWCEnabled
{
}
#typev venusdecodedevice_cpp3653 233 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsVideoUBWCEnabled
{
}
#typev venusdecodedevice_cpp3496 229 "%0Invalid Command %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
CmdType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3482 228 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3451 227 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3420 226 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3389 225 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3359 224 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3330 223 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3317 222 "%0Stop Session Submit failed: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3290 221 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3277 220 "%0Start Session Submit failed:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp998 82 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp993 81 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp986 80 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp969 79 "%4!s!::[%!FUNC!]Pixel format = %10!u!, IsCompressed = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.PixelFormat, ItemLong -- 10
bufferReqs.BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp967 78 "%4!s!::[%!FUNC!]Resource Width = %10!u!, Resource Height     = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.resourceWidth, ItemLong -- 10
bufferReqs.resourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp963 77 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp937 75 "%0OPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp951 76 "%4!s!::[%!FUNC!]Setting following DPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp928 74 "%0DPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp914 73 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp894 72 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp889 71 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp882 70 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp864 69 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferHeight[0], ItemLong -- 10
bufferReqs.BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp862 68 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferStride[0], ItemLong -- 10
bufferReqs.BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp860 67 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferAlignment[0], ItemLong -- 10
bufferReqs.BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp858 66 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp857 65 "%4!s!::[%!FUNC!]Setting following buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp822 64 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp1503 104 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1499 103 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1494 102 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1529 107 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1525 106 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1520 105 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp2210 150 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2143 146 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2193 148 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2183 147 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2203 149 "%4!s!::[%!FUNC!]unhandled buffer type %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2135 145 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2300 156 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2237 152 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2284 154 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2274 153 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2294 155 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2229 151 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2362 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2325 158 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2345 160 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2335 159 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2355 161 "%4!s!::[%!FUNC!]unhandled buffer %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2318 157 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3849 244 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3835 242 "%0invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3824 241 "%0invalid private data pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3779 240 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp2514 172 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2466 169 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2497 170 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2507 171 "%0Invalid Buffer Type %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2458 168 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2440 167 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2388 164 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2424 165 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2434 166 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2381 163 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3622 232 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
// PDB:  qcdx12x86um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusdecodedevice_cpp340 29 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp322 28 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
// PDB:  qcdx12x86um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusdecodedevice_cpp355 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::~VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp354 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::~VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp355 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp354 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp1734 118 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1622 114 "%0AllocInterlaceBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1617 113 "%0AllocInterlaceBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1730 117 "%0DxResource create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1717 116 "%0DxMemObj create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1699 115 "%0Interlace Intermediate Buf DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1597 112 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1909 128 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1778 122 "%0AllocInternalBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1773 121 "%0AllocInternalBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1905 127 "%0AllocInternalBuffer DxResource create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1892 126 "%0AllocInternalBuffer DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1874 125 "%0AllocInternalBuffer DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1844 124 "%4!s!::[%!FUNC!]video internal buffer %10!u! allocation success 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
createData.pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1834 123 "%0Invalid internal buffer index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1763 120 "%0AllocInternalBuffer allocation failed: incorrect index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1753 119 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1942 131 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp1936 130 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1924 129 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp1265 92 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1096 89 "%4!s!::[%!FUNC!]null arg" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1121 91 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1114 90 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1090 88 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp639 50 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp635 49 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp622 48 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp3997 252 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp3877 246 "%0Invalid input params %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp3889 247 "%0failed to calloc %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp3938 249 "%0Int DPB DxResource create fail %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
m_descData.sampleWidth, ItemLong -- 11
m_descData.sampleHeight, ItemLong -- 12
}
#typev venusdecodedevice_cpp3982 251 "%0Int DPB resource DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3965 250 "%0Int DPB resource DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp3931 248 "%4!s!::[%!FUNC!]Int DPB DxResource create success, corresp DxMemObj to be created" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp3873 245 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp31 29 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp31 28 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
// PDB:  qcdx12x86um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusdecodedevice_cpp30 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp29 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp3717 235 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateVenusDecodeDeviceSchedulerCtxt
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1997 133 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp1958 132 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
// PDB:  qcdx12x86um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusdecodedevice_cpp2671 182 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp2668 181 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp2661 180 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2643 179 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2629 178 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2599 177 "%0HandleH264InterlaceInterweaved failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2564 176 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2549 175 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2539 174 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2534 173 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp2811 192 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp2808 191 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp2801 190 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2783 189 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2769 188 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2721 186 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2706 185 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2696 184 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2691 183 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp2947 201 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp2943 200 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_vc1DecodeFrame.SliceInfo.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp2936 199 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2918 198 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2904 197 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2861 196 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2846 195 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2836 194 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2831 193 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3216 219 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3213 218 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3206 217 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3188 216 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3174 215 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3131 214 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3116 213 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3106 212 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3101 211 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3081 210 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3078 209 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp9DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3071 208 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3053 207 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3039 206 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2996 205 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2981 204 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2971 203 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2966 202 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp4031 254 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyDpbResource
{
}
#typev venusdecodedevice_cpp4015 253 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyDpbResource
{
}
#typev venusdecodedevice_cpp1579 111 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1573 110 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1566 109 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1545 108 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp307 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp304 254 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp304 253 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp300 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp3757 239 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp3747 237 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp3754 238 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3737 236 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp3592 232 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DisableDpbCompression
{
}
#typev venusdecodedevice_cpp3567 231 "%4!s!::[%!FUNC!]Enabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp3564 234 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp3564 233 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
// PDB:  qcdx12x86um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev venusdecodedevice_cpp701 55 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp697 54 "%0FillBitStreamData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp690 53 "%0Invalid heap pointer in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp683 52 "%4!s!::[%!FUNC!]nInputAllocLen %10!u! nInputFilledLen %11!u! nInputStartOffset %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
pBitStream->nInputAllocLen, ItemLong -- 10
pBitStream->nInputFilledLen, ItemLong -- 11
pBitStream->nInputStartOffset, ItemLong -- 12
}
#typev venusdecodedevice_cpp660 51 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp4214 268 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4199 267 "%4!s!::[%!FUNC!]OPB Buffer Address : %10!I64u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
pOpbInfo[Plane0].PackEngineAddress, ItemULongLong -- 10
}
#typev venusdecodedevice_cpp4176 266 "%0pHeap->pMemObj invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4166 265 "%0pHeap invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4155 264 "%0pSubResInfo invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4145 263 "%0OpbResource invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4140 262 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4251 272 "%0Error: Descriptor width/height is greater than resource width/height" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4300 278 "%4!s!::[%!FUNC!]Buffer req: OPB Res compress flag = %10!u!, OPB Buffer updated compress flag = %11!u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_pOpbResource->IsUBWCompressedRes(), ItemLong -- 10
pOpbInfo->BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp4298 277 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferHeight[0], ItemLong -- 10
pOpbInfo->BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4296 276 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferStride[0], ItemLong -- 10
pOpbInfo->BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4294 275 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferAlignment[0], ItemLong -- 10
pOpbInfo->BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4292 274 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferSize[0], ItemLong -- 10
pOpbInfo->BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4291 273 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4244 271 "%4!s!::[%!FUNC!]OPB Resource Width: %10!u! , OPB Resource Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->width, ItemLong -- 10
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4243 270 "%4!s!::[%!FUNC!]DPB width: %10!u! , Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_dpbDesc.width, ItemLong -- 10
m_dpbDesc.height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4231 269 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4113 261 "%4!s!::[%!FUNC!]Exit " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4110 260 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4102 259 "%4!s!::[%!FUNC!]Failed to alloc interlace intermediate buffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4096 258 "%4!s!::[%!FUNC!]Enable Interlace 3-PASS mode " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4069 257 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4062 256 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4046 255 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp480 43 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp463 42 "%0DPB-OPB split mode driver required, NULL DPB unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp458 41 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, after 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp452 40 "%0DPB-OPB split mode changed by OS after 1st frame, not handled " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp438 39 "%0DPB-OPB split mode driver required, failed to allocate DPB" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp413 38 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp407 37 "%4!s!::[%!FUNC!]DPB-OPB split due to OS ref_only, 1st frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp402 36 "%0DPB-OPB split due to OS ref_only is already set, not expected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp395 35 "%4!s!::[%!FUNC!]DPB-OPB split 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
splitType, ItemLong -- 10
}
#typev venusdecodedevice_cpp388 34 "%0DPB-OPB split due to OS but not DPB set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp383 33 "%0DPB-OPB split due to OS but ref_only not set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp372 32 "%4!s!::[%!FUNC!]Enter " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp601 47 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp589 46 "%0HwDecodeFrame fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp517 45 "%4!s!::[%!FUNC!]DPB Res Compress Flag = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pDpbResource->IsUBWCompressedRes(), ItemLong -- 10
}
#typev venusdecodedevice_cpp502 44 "%4!s!::[%!FUNC!]Enter profile=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp284 25 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp280 239 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp280 237 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp280 238 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp280 236 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp277 133 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp277 132 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp274 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp274 254 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp274 253 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp274 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp268 107 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp268 106 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp268 105 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp263 24 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp247 23 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp186 235 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp231 21 "%0InitDecodePictureBufferCount fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp241 22 "%0AllocateInternalVideoBuffers fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp238 131 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp238 130 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp238 129 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp212 104 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp212 103 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp212 102 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp192 59 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp192 58 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp192 57 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp192 56 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp176 20 "%4!s!::[%!FUNC!]SessionType %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
SessionType(), ItemLong -- 10
}
#typev venusdecodedevice_cpp100 14 "%0Invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp152 19 "%4!s!::[%!FUNC!]dims %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.sampleWidth, ItemLong -- 10
m_descData.sampleHeight, ItemLong -- 11
sampleMB, ItemLong -- 12
}
#typev venusdecodedevice_cpp138 18 "%4!s!::[%!FUNC!]Same DPB & OPB format, no split required %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp132 17 "%0DPB & OPB format differ %10!u! %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
m_opbFormat, ItemLong -- 11
}
#typev venusdecodedevice_cpp122 16 "%0Invalid output format %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp108 15 "%4!s!::[%!FUNC!]outputFormat = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp60 13 "%4!s!::[%!FUNC!]Decode profile = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.profile, ItemLong -- 10
}
#typev venusdecodedevice_cpp47 12 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp3527 230 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwIsContentInterlaced
{
}
#typev venusdecodedevice_cpp1477 101 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1473 100 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1466 99 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1438 98 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1419 97 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1390 96 "%0pHeap->pMemObj NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1380 95 "%0pHeap NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1368 94 "%0pDpbResource NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1363 93 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1067 87 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp1062 86 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1055 85 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1040 84 "%4!s!::[%!FUNC!]buff reqs %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
bufferReqs.BufferAlignment[0], ItemLong -- 12
}
#typev venusdecodedevice_cpp1015 83 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp751 59 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp747 58 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp740 57 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp719 56 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp805 63 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp801 62 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp794 61 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp768 60 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp4358 284 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4350 282 "%0m_pDpbResource is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4355 283 "%0SubResourceInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4339 281 "%4!s!::[%!FUNC!]Aligned Buffer Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
reqOutput.stride[0], ItemLong -- 10
reqOutput.height[0], ItemLong -- 11
}
#typev venusdecodedevice_cpp4338 280 "%4!s!::[%!FUNC!]DPB Resource Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
actualResourceWidth, ItemLong -- 10
actualResourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp4321 279 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp3660 234 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsVideoUBWCEnabled
{
}
#typev venusdecodedevice_cpp3653 233 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsVideoUBWCEnabled
{
}
#typev venusdecodedevice_cpp3496 229 "%0Invalid Command %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
CmdType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3482 228 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3451 227 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3420 226 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3389 225 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3359 224 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3330 223 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3317 222 "%0Stop Session Submit failed: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3290 221 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3277 220 "%0Start Session Submit failed:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp998 82 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp993 81 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp986 80 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp969 79 "%4!s!::[%!FUNC!]Pixel format = %10!u!, IsCompressed = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.PixelFormat, ItemLong -- 10
bufferReqs.BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp967 78 "%4!s!::[%!FUNC!]Resource Width = %10!u!, Resource Height     = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.resourceWidth, ItemLong -- 10
bufferReqs.resourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp963 77 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp937 75 "%0OPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp951 76 "%4!s!::[%!FUNC!]Setting following DPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp928 74 "%0DPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp914 73 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp894 72 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp889 71 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp882 70 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp864 69 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferHeight[0], ItemLong -- 10
bufferReqs.BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp862 68 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferStride[0], ItemLong -- 10
bufferReqs.BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp860 67 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferAlignment[0], ItemLong -- 10
bufferReqs.BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp858 66 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp857 65 "%4!s!::[%!FUNC!]Setting following buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp822 64 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp1503 104 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1499 103 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1494 102 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1529 107 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1525 106 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1520 105 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp2210 150 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2143 146 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2193 148 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2183 147 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2203 149 "%4!s!::[%!FUNC!]unhandled buffer type %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2135 145 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2300 156 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2237 152 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2284 154 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2274 153 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2294 155 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2229 151 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2362 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2325 158 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2345 160 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2335 159 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2355 161 "%4!s!::[%!FUNC!]unhandled buffer %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2318 157 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3849 244 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3835 242 "%0invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3824 241 "%0invalid private data pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3779 240 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp2514 172 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2466 169 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2497 170 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2507 171 "%0Invalid Buffer Type %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2458 168 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2440 167 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2388 164 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2424 165 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2434 166 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2381 163 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3622 232 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
