// PDB:  qcsubsys850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
16aa9ed3-2148-3eb9-26ba-09d59c69a65a subsys // SRC=service_manager.c MJ= MN=
#typev service_manager_c814 55 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_CleanupDevice
{
}
#typev service_manager_c784 54 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::KeWaitForsingleObject failed, status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_CleanupDevice
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c754 53 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get driverContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_CleanupDevice
{
}
#typev service_manager_c747 52 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_CleanupDevice
{
}
#typev service_manager_c740 51 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_CleanupDevice
{
}
#typev service_manager_c814 55 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_CleanupDevice$fin$0
{
}
#typev service_manager_c784 54 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::KeWaitForsingleObject failed, status %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_CleanupDevice$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c754 53 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get driverContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_CleanupDevice$fin$0
{
}
#typev service_manager_c747 52 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_CleanupDevice$fin$0
{
}
#typev service_manager_c740 51 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_CleanupDevice$fin$0
{
}
#typev service_manager_c1482 99 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC!" //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ClosePilIoTarget
{
}
#typev service_manager_c1472 98 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ClosePilIoTarget
{
}
#typev service_manager_c1467 97 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ClosePilIoTarget
{
}
#typev service_manager_c1372 90 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_GetMemoryInfo
{
}
#typev service_manager_c1328 88 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::invalid parameter" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_GetMemoryInfo
{
}
#typev service_manager_c1338 89 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_GetMemoryInfo
{
}
#typev service_manager_c1323 87 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_GetMemoryInfo
{
}
#typev service_manager_c1372 90 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_GetMemoryInfo$fin$0
{
}
#typev service_manager_c1328 88 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::invalid parameter" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_GetMemoryInfo$fin$0
{
}
#typev service_manager_c1338 89 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_GetMemoryInfo$fin$0
{
}
#typev service_manager_c1323 87 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_GetMemoryInfo$fin$0
{
}
#typev service_manager_c1832 129 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_InitHypProtectionParameters
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1827 128 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Hypervisor Protection feature not enabled for this target." //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_InitHypProtectionParameters
{
}
#typev service_manager_c1821 127 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: OpenPilIoTarget() failed.  status = 0x%10!08X!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters
{
status, ItemLong -- 10
}
#typev service_manager_c1813 126 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfWaitLockCreate() failed: status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1791 125 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Unable to get the device context 0x%10!08x!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters
{
status, ItemLong -- 10
}
#typev service_manager_c1783 124 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Device handle passed to function is invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters
{
}
#typev service_manager_c1777 123 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_InitHypProtectionParameters
{
}
#typev service_manager_c1832 129 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_InitHypProtectionParameters$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1827 128 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Hypervisor Protection feature not enabled for this target." //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_InitHypProtectionParameters$fin$0
{
}
#typev service_manager_c1821 127 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: OpenPilIoTarget() failed.  status = 0x%10!08X!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c1813 126 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfWaitLockCreate() failed: status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1791 125 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Unable to get the device context 0x%10!08x!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c1783 124 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Device handle passed to function is invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_InitHypProtectionParameters$fin$0
{
}
#typev service_manager_c1777 123 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_InitHypProtectionParameters$fin$0
{
}
#typev service_manager_c391 25 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceAdd
{
}
#typev service_manager_c376 24 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoQueueCreate() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c362 23 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceCreateSymbolicLink() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c353 22 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceCreateDeviceInterface() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c337 21 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceCreate() failed!  status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c328 20 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceInitAssignName() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c307 19 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: Getting the driver context failed. " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd
{
}
#typev service_manager_c300 18 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceAdd
{
}
#typev service_manager_c391 25 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceAdd$fin$0
{
}
#typev service_manager_c376 24 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoQueueCreate() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c362 23 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceCreateSymbolicLink() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c353 22 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceCreateDeviceInterface() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c337 21 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceCreate() failed!  status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c328 20 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDeviceInitAssignName() failed!  status = %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c307 19 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: Getting the driver context failed. " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceAdd$fin$0
{
}
#typev service_manager_c300 18 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceAdd$fin$0
{
}
#typev service_manager_c718 50 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceCleanup
{
}
#typev service_manager_c706 49 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Freeing up memory allocated for deviceContext->memRegion " //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_OnDeviceCleanup
{
}
#typev service_manager_c694 48 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceCleanup
{
}
#typev service_manager_c718 50 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceCleanup$fin$0
{
}
#typev service_manager_c706 49 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Freeing up memory allocated for deviceContext->memRegion " //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_OnDeviceCleanup$fin$0
{
}
#typev service_manager_c694 48 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceCleanup$fin$0
{
}
#typev service_manager_c642 45 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Entry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c632 44 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get thread object handle" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry
{
}
#typev service_manager_c614 43 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to create server thread" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry
{
}
#typev service_manager_c592 42 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() succeeded." //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry
{
}
#typev service_manager_c587 41 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() failed.with status = 0x%10!08X!, Only dump collection of DHMS regions gets effected" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry
{
status, ItemLong -- 10
}
#typev service_manager_c581 40 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Rpen driver is not yet loaded, proceed with other registrations as Rpe library had required handling." //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceD0Entry
{
}
#typev service_manager_c566 39 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry
{
}
#typev service_manager_c558 38 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Entry
{
}
#typev service_manager_c642 45 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Entry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c632 44 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get thread object handle" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry$fin$0
{
}
#typev service_manager_c614 43 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to create server thread" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry$fin$0
{
}
#typev service_manager_c592 42 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() succeeded." //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry$fin$0
{
}
#typev service_manager_c587 41 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() failed.with status = 0x%10!08X!, Only dump collection of DHMS regions gets effected" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c581 40 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Rpen driver is not yet loaded, proceed with other registrations as Rpe library had required handling." //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceD0Entry$fin$0
{
}
#typev service_manager_c566 39 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceD0Entry$fin$0
{
}
#typev service_manager_c558 38 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Entry$fin$0
{
}
#typev service_manager_c673 47 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Exit
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c665 46 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Exit
{
}
#typev service_manager_c673 47 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Exit$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c665 46 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceD0Exit$fin$0
{
}
#typev service_manager_c534 37 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceInit
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c472 34 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reading QSM Platform Configuration info from ACPI failed with status = 0x%10!08X!" //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit
{
status, ItemLong -- 10
}
#typev service_manager_c525 36 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get thread object handle" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c507 35 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to create server thread" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c464 33 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM Platform Configuration not found in ACPI tables" //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c458 32 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Initializing Hypervisor Protection parameters failed with status = 0x%10!08X!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit
{
status, ItemLong -- 10
}
#typev service_manager_c454 31 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM Platform Configuration successfully read from ACPI tables" //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c445 30 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() succeeded." //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c440 29 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() failed.with status = 0x%10!08X!, Only dump collection of DHMS regions gets effected" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit
{
status, ItemLong -- 10
}
#typev service_manager_c434 28 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Rpen driver is not yet loaded, proceed with other registrations as Rpe library had required handling." //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c420 27 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c414 26 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceInit
{
}
#typev service_manager_c534 37 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceInit$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c472 34 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reading QSM Platform Configuration info from ACPI failed with status = 0x%10!08X!" //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c525 36 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get thread object handle" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c507 35 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to create server thread" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c464 33 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM Platform Configuration not found in ACPI tables" //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c458 32 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Initializing Hypervisor Protection parameters failed with status = 0x%10!08X!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c454 31 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM Platform Configuration successfully read from ACPI tables" //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c445 30 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() succeeded." //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c440 29 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::RpeInit() failed.with status = 0x%10!08X!, Only dump collection of DHMS regions gets effected" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c434 28 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Rpen driver is not yet loaded, proceed with other registrations as Rpe library had required handling." //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c420 27 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c414 26 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceInit$fin$0
{
}
#typev service_manager_c906 61 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceIoControl
{
}
#typev service_manager_c887 60 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: ObReferenceObjectByHandle failed with status: %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceIoControl
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c875 59 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: ObReferenceObjectByHandle failed with status: %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceIoControl
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c862 58 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: Couldn't retrieve the inbuf for IOCTL_REGISTER_SHUTDOWN_COMMAND, status: %10!s! " //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OnDeviceIoControl
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c849 57 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Received IOCTL_REGISTER_SHUTDOWN_COMMAND " //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_OnDeviceIoControl
{
}
#typev service_manager_c841 56 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OnDeviceIoControl
{
}
#typev service_manager_c1452 96 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OpenPilIoTarget
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1446 95 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: WdfRequestCreate() failed!  status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1432 94 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: WdfIoTargetOpen() failed to PIL driver with status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1418 93 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoTargetCreate() failed to PIL driver with status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1408 92 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget
{
}
#typev service_manager_c1402 91 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OpenPilIoTarget
{
}
#typev service_manager_c1452 96 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OpenPilIoTarget$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1446 95 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: WdfRequestCreate() failed!  status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1432 94 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: WdfIoTargetOpen() failed to PIL driver with status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1418 93 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoTargetCreate() failed to PIL driver with status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1408 92 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_OpenPilIoTarget$fin$0
{
}
#typev service_manager_c1402 91 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_OpenPilIoTarget$fin$0
{
}
#typev service_manager_c1227 82 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Returning %10!s! memory of 0x%11!X! bytes at address 0x%12!X! to HLOS" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_PrepareHardware
{
memRegion->memoryRegionName, ItemWString -- 10
memRegion->bufferSize, ItemLong -- 11
(ULONG)memRegion->bufferAddr, ItemLong -- 12
}
#typev service_manager_c1214 81 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM BufferAddr: 0x%10!X!, BufferSize: 0x%11!x!" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_PrepareHardware
{
(ULONG)memRegion->bufferAddr, ItemLong -- 10
memRegion->bufferSize, ItemLong -- 11
}
#typev service_manager_c1187 80 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM ResourceList is NULL" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_PrepareHardware
{
}
#typev service_manager_c1175 79 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDriverOpenParametersRegistryKey() failed. status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_PrepareHardware
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1168 78 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM_PrepareHardware: ACPI Package info read error" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_PrepareHardware
{
}
#typev service_manager_c1259 83 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_PrepareHardware
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1160 77 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_PrepareHardware
{
}
#typev service_manager_c1152 76 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_PrepareHardware
{
}
#typev service_manager_c1227 82 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Returning %10!s! memory of 0x%11!X! bytes at address 0x%12!X! to HLOS" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_PrepareHardware$fin$0
{
memRegion->memoryRegionName, ItemWString -- 10
memRegion->bufferSize, ItemLong -- 11
(ULONG)memRegion->bufferAddr, ItemLong -- 12
}
#typev service_manager_c1214 81 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM BufferAddr: 0x%10!X!, BufferSize: 0x%11!x!" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_PrepareHardware$fin$0
{
(ULONG)memRegion->bufferAddr, ItemLong -- 10
memRegion->bufferSize, ItemLong -- 11
}
#typev service_manager_c1187 80 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM ResourceList is NULL" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_PrepareHardware$fin$0
{
}
#typev service_manager_c1175 79 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfDriverOpenParametersRegistryKey() failed. status = %10!s!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_PrepareHardware$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1168 78 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM_PrepareHardware: ACPI Package info read error" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_PrepareHardware$fin$0
{
}
#typev service_manager_c1259 83 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_PrepareHardware$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1160 77 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_PrepareHardware$fin$0
{
}
#typev service_manager_c1152 76 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_PrepareHardware$fin$0
{
}
#typev service_manager_c1106 74 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reading of Memory regions from ACPI tables for online dump collection failed" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry
{
}
#typev service_manager_c1118 75 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReadPackageInfoFromRegistry
{
}
#typev service_manager_c1050 70 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::wrong package information" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry
{
}
#typev service_manager_c1095 73 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed RtlUnicodeStringToInteger with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1084 72 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed RtlGUIDFromString with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1062 71 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM_ReadPackageInfoFromRegistry Unable to allocate required descriptor memory to read memory information from ACPI tables." //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry
{
}
#typev service_manager_c1042 69 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfRegistryQueryMultiString with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1027 68 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfCollectionCreate with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1018 67 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfRegistryOpenKey with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1008 66 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfDeviceOpenRegistryKey with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c994 65 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry
{
}
#typev service_manager_c987 64 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reading memory regions information from ACPI tables" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry
{
}
#typev service_manager_c1106 74 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reading of Memory regions from ACPI tables for online dump collection failed" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
}
#typev service_manager_c1118 75 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
}
#typev service_manager_c1050 70 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::wrong package information" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
}
#typev service_manager_c1095 73 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed RtlUnicodeStringToInteger with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1084 72 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed RtlGUIDFromString with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1062 71 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM_ReadPackageInfoFromRegistry Unable to allocate required descriptor memory to read memory information from ACPI tables." //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
}
#typev service_manager_c1042 69 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfRegistryQueryMultiString with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1027 68 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfCollectionCreate with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1018 67 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfRegistryOpenKey with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1008 66 "%0 [%!LEVEL!] service_manager.c::%!FUNC!:: Failed WdfDeviceOpenRegistryKey with %10!s!" //   LEVEL=LOG_ERR_ FLAGS=Core FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c994 65 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
}
#typev service_manager_c987 64 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reading memory regions information from ACPI tables" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReadPackageInfoFromRegistry$fin$0
{
}
#typev service_manager_c1535 104 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReadPlatformConfigurationFromRegistry
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1524 103 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: Unable to read the default QSMG Enabled flag from registry, default will be set to disabled " //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_ReadPlatformConfigurationFromRegistry
{
}
#typev service_manager_c1516 102 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Unable to get the device context 0x%10!08x!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPlatformConfigurationFromRegistry
{
status, ItemLong -- 10
}
#typev service_manager_c1508 101 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Device handle passed to function is invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPlatformConfigurationFromRegistry
{
}
#typev service_manager_c1502 100 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReadPlatformConfigurationFromRegistry
{
}
#typev service_manager_c1535 104 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReadPlatformConfigurationFromRegistry$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1524 103 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::FAILURE: Unable to read the default QSMG Enabled flag from registry, default will be set to disabled " //   LEVEL=LOG_WARN FLAGS=QSM FUNC=QSM_ReadPlatformConfigurationFromRegistry$fin$0
{
}
#typev service_manager_c1516 102 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Unable to get the device context 0x%10!08x!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPlatformConfigurationFromRegistry$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c1508 101 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Device handle passed to function is invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReadPlatformConfigurationFromRegistry$fin$0
{
}
#typev service_manager_c1502 100 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReadPlatformConfigurationFromRegistry$fin$0
{
}
#typev service_manager_c1747 121 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Modem DHMS region address: 0x%10!08X! and length: 0x%11!08X! reclaimed successfully" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
(ULONG)PhyAddr.u.LowPart, ItemLong -- 10
RegLength, ItemLong -- 11
}
#typev service_manager_c1743 120 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoTargetSendIoctlSynchronously IOCTL_PIL_TZ_MODEM_ACCESS_MEMORY_REGION request to PIL failed with status = %10!d!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
status, ItemLong -- 10
}
#typev service_manager_c1729 119 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Passing PIL driver Modem DHMS region information" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
}
#typev service_manager_c1718 118 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::DHMS region already reclaimed from PIL, skipping region reclaim from PIL." //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
}
#typev service_manager_c1708 117 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reclaim DHMS region from PIL. " //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
}
#typev service_manager_c1760 122 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1694 116 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to acquire lock to travel through DHMS region list" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
}
#typev service_manager_c1684 115 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Parameters passed to function are invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
}
#typev service_manager_c1679 114 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReclaimDhmsRegionInfoFromPIL
{
}
#typev service_manager_c1747 121 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Modem DHMS region address: 0x%10!08X! and length: 0x%11!08X! reclaimed successfully" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
(ULONG)PhyAddr.u.LowPart, ItemLong -- 10
RegLength, ItemLong -- 11
}
#typev service_manager_c1743 120 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoTargetSendIoctlSynchronously IOCTL_PIL_TZ_MODEM_ACCESS_MEMORY_REGION request to PIL failed with status = %10!d!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c1729 119 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Passing PIL driver Modem DHMS region information" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
}
#typev service_manager_c1718 118 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::DHMS region already reclaimed from PIL, skipping region reclaim from PIL." //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
}
#typev service_manager_c1708 117 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Reclaim DHMS region from PIL. " //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
}
#typev service_manager_c1760 122 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1694 116 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to acquire lock to travel through DHMS region list" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
}
#typev service_manager_c1684 115 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Parameters passed to function are invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
}
#typev service_manager_c1679 114 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReclaimDhmsRegionInfoFromPIL$fin$0
{
}
#typev service_manager_c1300 86 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReleaseHardware
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1295 85 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Freeing up memory allocated for deviceContext->memRegion " //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReleaseHardware
{
}
#typev service_manager_c1283 84 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReleaseHardware
{
}
#typev service_manager_c1300 86 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReleaseHardware$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1295 85 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Freeing up memory allocated for deviceContext->memRegion " //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_ReleaseHardware$fin$0
{
}
#typev service_manager_c1283 84 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_ReleaseHardware$fin$0
{
}
#typev service_manager_c201 16 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM QMI event" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_Thread
{
}
#typev service_manager_c264 17 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_Thread
{
}
#typev service_manager_c192 15 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM Cleanup event" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_Thread
{
}
#typev service_manager_c152 14 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to allocate pWaitBlocks" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread
{
}
#typev service_manager_c141 13 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to allocate waitEvents" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread
{
}
#typev service_manager_c114 12 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread
{
}
#typev service_manager_c107 11 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Invalid startContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread
{
}
#typev service_manager_c101 10 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_Thread
{
}
#typev service_manager_c201 16 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM QMI event" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_Thread$fin$0
{
}
#typev service_manager_c264 17 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_Thread$fin$0
{
}
#typev service_manager_c192 15 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::QSM Cleanup event" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_Thread$fin$0
{
}
#typev service_manager_c152 14 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to allocate pWaitBlocks" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread$fin$0
{
}
#typev service_manager_c141 13 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to allocate waitEvents" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread$fin$0
{
}
#typev service_manager_c114 12 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to get deviceContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread$fin$0
{
}
#typev service_manager_c107 11 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Invalid startContext" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_Thread$fin$0
{
}
#typev service_manager_c101 10 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_Thread$fin$0
{
}
#typev service_manager_c1645 112 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Modem DHMS region address: 0x%10!08X! and length: 0x%11!08X! updated to PIL successfully" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
(ULONG)PhyAddr.u.LowPart, ItemLong -- 10
RegLength, ItemLong -- 11
}
#typev service_manager_c1637 111 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoTargetSendIoctlSynchronously IOCTL_PIL_TZ_MODEM_ACCESS_MEMORY_REGION request to PIL failed with status = %10!d!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
status, ItemLong -- 10
}
#typev service_manager_c1623 110 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Passing PIL driver Modem DHMS region information" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
}
#typev service_manager_c1614 109 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to allocated required memory for DHMS region block" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
}
#typev service_manager_c1655 113 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1601 108 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::DHMS region already updated to PIL, skipping region update to PIL." //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
}
#typev service_manager_c1574 107 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to acquire lock to travel through DHMS region list" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
}
#typev service_manager_c1564 106 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Parameters passed to function are invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
}
#typev service_manager_c1559 105 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_UpdateDhmsRegionInfoToPIL
{
}
#typev service_manager_c1645 112 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Modem DHMS region address: 0x%10!08X! and length: 0x%11!08X! updated to PIL successfully" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
(ULONG)PhyAddr.u.LowPart, ItemLong -- 10
RegLength, ItemLong -- 11
}
#typev service_manager_c1637 111 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::WdfIoTargetSendIoctlSynchronously IOCTL_PIL_TZ_MODEM_ACCESS_MEMORY_REGION request to PIL failed with status = %10!d!" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
status, ItemLong -- 10
}
#typev service_manager_c1623 110 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Passing PIL driver Modem DHMS region information" //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
}
#typev service_manager_c1614 109 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to allocated required memory for DHMS region block" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
}
#typev service_manager_c1655 113 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Exit from %!FUNC! with status %10!s! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
status, ItemNTSTATUS -- 10
}
#typev service_manager_c1601 108 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::DHMS region already updated to PIL, skipping region update to PIL." //   LEVEL=LOG_INFO FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
}
#typev service_manager_c1574 107 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Failed to acquire lock to travel through DHMS region list" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
}
#typev service_manager_c1564 106 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Parameters passed to function are invalid" //   LEVEL=LOG_ERR_ FLAGS=QSM FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
}
#typev service_manager_c1559 105 "%0 [%!LEVEL!] service_manager.c::%!FUNC!::Entry to %!FUNC! " //   LEVEL=LOG_INFO FLAGS=EntryExit FUNC=QSM_UpdateDhmsRegionInfoToPIL$fin$0
{
}
