// PDB:  qcpep7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:20:368 (UTC) [tracepdb]
b80d3b07-a815-3438-347f-9cd7700989ce PEP // SRC=PEP_DCVS_Utility.c MJ= MN=
#typev PEP_DCVS_Utility_c105 10 "%0 [Info] PEP_DCVS_Utility.c::%!FUNC! :status = %10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_THERMAL_FLAG_LMH FUNC=CollectCPUComponentRundown
{
status, ItemLong -- 10
}
#typev PEP_DCVS_Utility_c635 26 "%0 [Info] PEP_DCVS_Utility.c::%!FUNC! :DcvsL3CachePerfSet: Setting a FLOOR on L3 cache frequency to: %10!d! for testing" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=RegistryAppliedL3PerfContraints
{
pL3CacheProp->desiredPerfLevel, ItemLong -- 10
}
#typev PEP_DCVS_Utility_c624 25 "%0 [Info] PEP_DCVS_Utility.c::%!FUNC! :DcvsL3CachePerfSet: Setting a CEILING on L3 cache frequency to: %10!d! for testing" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=RegistryAppliedL3PerfContraints
{
pL3CacheProp->desiredPerfLevel, ItemLong -- 10
}
#typev PEP_DCVS_Utility_c550 24 "%0Failed to get max frequency for Big CPU from ClkRgm status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR IFRLOG=gPepDrvIfrHandle FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
status, ItemLong -- 10
}
#typev PEP_DCVS_Utility_c548 23 "%0 [Err ] PEP_DCVS_Utility.c::%!FUNC!::548 :Failed to get max frequency for Big CPU from ClkRgm" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
}
#typev PEP_DCVS_Utility_c538 22 "%0Failed to get max frequency for Little CPU from ClkRgm status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR IFRLOG=gPepDrvIfrHandle FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
status, ItemLong -- 10
}
#typev PEP_DCVS_Utility_c536 21 "%0 [Err ] PEP_DCVS_Utility.c::%!FUNC!::536 :Failed to get max frequency for Little CPU from ClkRgm" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
}
#typev PEP_DCVS_Utility_c526 20 "%0Failed to get max perf level for Big CPU from ClkRgm status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR IFRLOG=gPepDrvIfrHandle FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
status, ItemLong -- 10
}
#typev PEP_DCVS_Utility_c524 19 "%0 [Err ] PEP_DCVS_Utility.c::%!FUNC!::524 :Failed to get max perf level for Big CPU from ClkRgm" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
}
#typev PEP_DCVS_Utility_c515 18 "%0Failed to get max perf level for Little CPU from ClkRgm status 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR IFRLOG=gPepDrvIfrHandle FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
status, ItemLong -- 10
}
#typev PEP_DCVS_Utility_c513 17 "%0 [Err ] PEP_DCVS_Utility.c::%!FUNC!::513 :Failed to get max perf level for Little CPU from ClkRgm" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
}
#typev PEP_DCVS_Utility_c504 16 "%0Normalizing factor is less than 1" //   LEVEL=TRACE_LEVEL_ERROR IFRLOG=gPepDrvIfrHandle FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
}
#typev PEP_DCVS_Utility_c502 15 "%0 [Err ] PEP_DCVS_Utility.c::%!FUNC!::502 :Normalizing factor is less than 1" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
}
#typev PEP_DCVS_Utility_c484 14 "%0CPU normalization is disabled" //   LEVEL=TRACE_LEVEL_CRITICAL IFRLOG=gPepDrvIfrHandle FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
}
#typev PEP_DCVS_Utility_c482 13 "%0 [Crit] PEP_DCVS_Utility.c::%!FUNC! :CPU normalization is disabled" //   LEVEL=TRACE_LEVEL_CRITICAL FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
}
