// PDB:  qcdx11arm32um7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:45:538 (UTC) [tracepdb]
58a885a4-3e85-367e-1e62-ff8b079cb920 video // SRC=dxencodeif.cpp MJ= MN=
#typev dxencodeif_cpp734 12 "%0video encode allocate failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=DxDecodeDevice::Allocate
{
result, ItemLong -- 10
}
#typev dxencodeif_cpp1315 13 "%0Potential Integer Buffer Overflow detected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=DxDecodeDevice::EncodeCreateResource
{
}
#typev dxencodeif_cpp1550 14 "%0Invalid Arguments" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=DxDecodeDevice::EncodeGetResourceUsage
{
}
#typev dxencodeif_cpp1562 15 "%4!s!::[%!FUNC!]EncodeGetResourceUsage: Res=0x%10!p! UBWC=%11!u! HasLinear=%12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=DxDecodeDevice::EncodeGetResourceUsage
{
pDxResource, ItemPtr -- 10
pResUsageOut->isUBWCompressedRes, ItemLong -- 11
pResUsageOut->hasLinearData, ItemLong -- 12
}
// PDB:  qcdx11arm32um7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:45:538 (UTC) [tracepdb]
#typev dxencodeif_cpp552 11 "%4!s!::[%!FUNC!]Adding Buffer with handle = %10!u!. and permission = %11!u!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=DxDecodeDevice::Render
{
handleBufferType, ItemLong -- 10
handleReadWriteUsage, ItemLong -- 11
}
// PDB:  qcdx11arm32um7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:45:538 (UTC) [tracepdb]
#typev dxencodeif_cpp540 10 "%0DxResource::VideoMem  subresIndex=%10!d!, NumSubResources=%11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=core FUNC=DxDecodeDevice::Render
{
pRenderData->pResourceList[i].subResIndex, ItemLong -- 10
pResource->NumSubResources(), ItemLong -- 11
}
// PDB:  qcdx11arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:19:368 (UTC) [tracepdb]
#typev dxencodeif_cpp734 12 "%0video encode allocate failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=DxDecodeDevice::Allocate
{
result, ItemLong -- 10
}
// PDB:  qcdx11arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:19:368 (UTC) [tracepdb]
#typev dxencodeif_cpp1550 14 "%0Invalid Arguments" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=DxDecodeDevice::EncodeGetResourceUsage
{
}
#typev dxencodeif_cpp1562 15 "%4!s!::[%!FUNC!]EncodeGetResourceUsage: Res=0x%10!p! UBWC=%11!u! HasLinear=%12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=DxDecodeDevice::EncodeGetResourceUsage
{
pDxResource, ItemPtr -- 10
pResUsageOut->isUBWCompressedRes, ItemLong -- 11
pResUsageOut->hasLinearData, ItemLong -- 12
}
// PDB:  qcdx11arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:19:368 (UTC) [tracepdb]
#typev dxencodeif_cpp552 11 "%4!s!::[%!FUNC!]Adding Buffer with handle = %10!u!. and permission = %11!u!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=DxDecodeDevice::Render
{
handleBufferType, ItemLong -- 10
handleReadWriteUsage, ItemLong -- 11
}
// PDB:  qcdx11arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:19:368 (UTC) [tracepdb]
#typev dxencodeif_cpp540 10 "%0DxResource::VideoMem  subresIndex=%10!d!, NumSubResources=%11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=core FUNC=DxDecodeDevice::Render
{
pRenderData->pResourceList[i].subResIndex, ItemLong -- 10
pResource->NumSubResources(), ItemLong -- 11
}
// PDB:  qcdx11arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:19:368 (UTC) [tracepdb]
#typev dxencodeif_cpp734 12 "%0video encode allocate failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=DxDecodeDevice::Allocate
{
result, ItemLong -- 10
}
// PDB:  qcdx11arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:19:368 (UTC) [tracepdb]
#typev dxencodeif_cpp1550 14 "%0Invalid Arguments" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=DxDecodeDevice::EncodeGetResourceUsage
{
}
#typev dxencodeif_cpp1562 15 "%4!s!::[%!FUNC!]EncodeGetResourceUsage: Res=0x%10!p! UBWC=%11!u! HasLinear=%12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=DxDecodeDevice::EncodeGetResourceUsage
{
pDxResource, ItemPtr -- 10
pResUsageOut->isUBWCompressedRes, ItemLong -- 11
pResUsageOut->hasLinearData, ItemLong -- 12
}
// PDB:  qcdx11arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:19:368 (UTC) [tracepdb]
#typev dxencodeif_cpp552 11 "%4!s!::[%!FUNC!]Adding Buffer with handle = %10!u!. and permission = %11!u!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=DxDecodeDevice::Render
{
handleBufferType, ItemLong -- 10
handleReadWriteUsage, ItemLong -- 11
}
// PDB:  qcdx11arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:19:368 (UTC) [tracepdb]
#typev dxencodeif_cpp540 10 "%0DxResource::VideoMem  subresIndex=%10!d!, NumSubResources=%11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=core FUNC=DxDecodeDevice::Render
{
pRenderData->pResourceList[i].subResIndex, ItemLong -- 10
pResource->NumSubResources(), ItemLong -- 11
}
// PDB:  qcdx11chpeum7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:46:698 (UTC) [tracepdb]
#typev dxencodeif_cpp734 12 "%0video encode allocate failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=DxDecodeDevice::Allocate
{
result, ItemLong -- 10
}
// PDB:  qcdx11chpeum7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:46:698 (UTC) [tracepdb]
#typev dxencodeif_cpp1315 13 "%0Potential Integer Buffer Overflow detected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=DxDecodeDevice::EncodeCreateResource
{
}
#typev dxencodeif_cpp1550 14 "%0Invalid Arguments" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=DxDecodeDevice::EncodeGetResourceUsage
{
}
#typev dxencodeif_cpp1562 15 "%4!s!::[%!FUNC!]EncodeGetResourceUsage: Res=0x%10!p! UBWC=%11!u! HasLinear=%12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=DxDecodeDevice::EncodeGetResourceUsage
{
pDxResource, ItemPtr -- 10
pResUsageOut->isUBWCompressedRes, ItemLong -- 11
pResUsageOut->hasLinearData, ItemLong -- 12
}
// PDB:  qcdx11chpeum7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:46:698 (UTC) [tracepdb]
#typev dxencodeif_cpp552 11 "%4!s!::[%!FUNC!]Adding Buffer with handle = %10!u!. and permission = %11!u!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=DxDecodeDevice::Render
{
handleBufferType, ItemLong -- 10
handleReadWriteUsage, ItemLong -- 11
}
// PDB:  qcdx11chpeum7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:46:698 (UTC) [tracepdb]
#typev dxencodeif_cpp540 10 "%0DxResource::VideoMem  subresIndex=%10!d!, NumSubResources=%11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=core FUNC=DxDecodeDevice::Render
{
pRenderData->pResourceList[i].subResIndex, ItemLong -- 10
pResource->NumSubResources(), ItemLong -- 11
}
// PDB:  qcdx11x86um7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:35:308 (UTC) [tracepdb]
#typev dxencodeif_cpp734 12 "%0video encode allocate failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=DxDecodeDevice::Allocate
{
result, ItemLong -- 10
}
#typev dxencodeif_cpp1315 13 "%0Potential Integer Buffer Overflow detected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=DxDecodeDevice::EncodeCreateResource
{
}
#typev dxencodeif_cpp1550 14 "%0Invalid Arguments" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=DxDecodeDevice::EncodeGetResourceUsage
{
}
#typev dxencodeif_cpp1562 15 "%4!s!::[%!FUNC!]EncodeGetResourceUsage: Res=0x%10!p! UBWC=%11!u! HasLinear=%12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=DxDecodeDevice::EncodeGetResourceUsage
{
pDxResource, ItemPtr -- 10
pResUsageOut->isUBWCompressedRes, ItemLong -- 11
pResUsageOut->hasLinearData, ItemLong -- 12
}
// PDB:  qcdx11x86um7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:35:308 (UTC) [tracepdb]
#typev dxencodeif_cpp552 11 "%4!s!::[%!FUNC!]Adding Buffer with handle = %10!u!. and permission = %11!u!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=DxDecodeDevice::Render
{
handleBufferType, ItemLong -- 10
handleReadWriteUsage, ItemLong -- 11
}
// PDB:  qcdx11x86um7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:35:308 (UTC) [tracepdb]
#typev dxencodeif_cpp540 10 "%0DxResource::VideoMem  subresIndex=%10!d!, NumSubResources=%11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=core FUNC=DxDecodeDevice::Render
{
pRenderData->pResourceList[i].subResIndex, ItemLong -- 10
pResource->NumSubResources(), ItemLong -- 11
}
