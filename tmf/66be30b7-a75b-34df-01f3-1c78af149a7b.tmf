// PDB:  qcbattmngr850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
66be30b7-a75b-34df-01f3-1c78af149a7b BattMngr // SRC=BattMngrTech_Jeita_R1.c MJ= MN=
#typev BattMngrPlat_SMChg_FGGge_R3_c3131 10 "%0BattMngrTech_Jeita_Populate_Jeita_Tables:: JEITA : Current Battery Temp = %10!d! deg C, Set Jeita Voltage = %11!d! mV, Jeita Current = %12!d! mA, Jeita Zone = %13!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrPlat_SMChg_FGGge_R3_ChargerConfig
{
batteryTemp, ItemLong -- 10
*pJeitaVoltage, ItemLong -- 11
*pJeitaCurrent, ItemLong -- 12
nextJeitaZone, ItemLong -- 13
}
// PDB:  qcbattmngr850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev BattMngrTech_Jeita_R1_c193 11 "%0BattMngrStateMachineLevel_Get_JEITA_Zone::ERROR::Previous Jeita Zone calculated Invalid, set it back to Standard Zone" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrTech_Jeita_Get_SWJEITA_Zone
{
}
#typev BattMngrTech_Jeita_R1_c332 14 "%0BattMngrTech_Jeita_ParseAndFill_AcpiData::Value of %10!s! is %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_acpi FUNC=BattMngrTech_Jeita_ParseAndFill_AcpiData
{
currentArgNum, ItemEnum(BATTMNGR_TECH_JEITA_R1_ACPI_ENTRY_TYPE) -- 10
currentArgument->Argument, ItemLong -- 11
}
#typev BattMngrTech_Jeita_R1_c340 15 "%0BattMngrTech_Jeita_ParseAndFill_AcpiData::ERROR::Failed to parse acpi for Jeita, Error Code =%10!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_acpi FUNC=BattMngrTech_Jeita_ParseAndFill_AcpiData
{
status, ItemLong -- 10
}
#typev BattMngrTech_Jeita_R1_c306 13 "%0qcbattmngr::ERROR::Incorrect number of acpi JEITA entries,expected >= %10!d!,received = %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=BattMngrWPP_SelfHost FUNC=BattMngrTech_Jeita_ParseAndFill_AcpiData
{
BATTMNGR_TECH_JEITA_R1_ACPI_ARGS, ItemLong -- 10
numberOfConfigItems, ItemLong -- 11
}
#typev BattMngrTech_Jeita_R1_c296 12 "%0BattMngrTech_Jeita_ParseAndFill_AcpiData::++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_acpi FUNC=BattMngrTech_Jeita_ParseAndFill_AcpiData
{
}
#typev BattMngrTech_Jeita_R1_c379 16 "%0BattMngrTech_Jeita_ParseAndFill_AcpiData_For_ChargeTable::ERROR::Invalid Input argument" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=BattMngrWPP_acpi FUNC=BattMngrTech_Jeita_ParseAndFill_AcpiData_For_ChargeTable
{
}
#typev BattMngrTech_Jeita_R1_c432 18 "%0qcbattmngr::ERROR::Invalid JEITA configuration" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=BattMngrWPP_SelfHost FUNC=BattMngrTech_Jeita_ParseAndFill_AcpiData_For_ChargeTable
{
}
#typev BattMngrTech_Jeita_R1_c421 17 "%0BattMngrTech_Jeita_ParseAndFill_AcpiData_For_ChargeTable::Value of %10!s! is %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_acpi FUNC=BattMngrTech_Jeita_ParseAndFill_AcpiData_For_ChargeTable
{
currentArgNum, ItemEnum(BATTMNGR_TECH_JEITA_TABLE_R1_ACPI_ENTRY_TYPE) -- 10
currentArgument->Argument, ItemLong -- 11
}
#typev BattMngrTech_Jeita_R1_c706 32 "%0BattMngrTech_Jeita_Set_HW_SoftLimit_Comp_En_Mask:: Error: Invalid CC compensation value!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrTech_Jeita_Set_HW_SoftLimit_Comp_En_Mask
{
}
#typev BattMngrTech_Jeita_R1_c698 31 "%0BattMngrTech_Jeita_Set_HW_SoftLimit_Comp_En_Mask:: Error: Invalid FV compensation value!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrTech_Jeita_Set_HW_SoftLimit_Comp_En_Mask
{
}
#typev BattMngrTech_Jeita_R1_c638 30 "%0BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData::Registry for COLD_SL_CCC is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData
{
pJeitaConfigTable->ColdSL_CCC, ItemLong -- 10
}
#typev BattMngrTech_Jeita_R1_c630 29 "%0BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData::Registry for HOT_SL_CCC is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData
{
pJeitaConfigTable->HotSL_CCC, ItemLong -- 10
}
#typev BattMngrTech_Jeita_R1_c622 28 "%0BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData::Registry for COLD_SL_FVC is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData
{
pJeitaConfigTable->ColdSL_FVC, ItemLong -- 10
}
#typev BattMngrTech_Jeita_R1_c614 27 "%0BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData::Registry for HOT_SL_FVC is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData
{
pJeitaConfigTable->HotSL_FVC, ItemLong -- 10
}
#typev BattMngrTech_Jeita_R1_c606 26 "%0BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData::Registry for HARD_HOT_LIM is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData
{
pJeitaConfigTable->TempHotHard, ItemLong -- 10
}
#typev BattMngrTech_Jeita_R1_c598 25 "%0BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData::Registry for SOFT_HOT_LIM is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData
{
pJeitaConfigTable->TempHotSoft, ItemLong -- 10
}
#typev BattMngrTech_Jeita_R1_c590 24 "%0BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData::Registry for SOFT_COLD_LIM is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData
{
pJeitaConfigTable->TempColdSoft, ItemLong -- 10
}
#typev BattMngrTech_Jeita_R1_c582 23 "%0BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData::Registry for HARD_COLD_LIM is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData
{
pJeitaConfigTable->TempColdHard, ItemLong -- 10
}
#typev BattMngrTech_Jeita_R1_c574 22 "%0BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData::Registry for FULL_CHARGE_CURRENT is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData
{
pJeitaConfigTable->FullChargeCurrent, ItemLong -- 10
}
#typev BattMngrTech_Jeita_R1_c566 21 "%0BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData::Registry for FLOAT_VOLTAGE is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrTech_Jeita_UpdateJeitaConfigTableRegistryData
{
pJeitaConfigTable->FloatVoltage, ItemLong -- 10
}
#typev BattMngrTech_Jeita_R1_c509 20 "%0BattMngrTech_Jeita_UpdateJeitaTableRegistryData::Registry for BATTMNGR_REGISTRY_TEMP_HYST is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrTech_Jeita_UpdateJeitaTableRegistryData
{
pJeitaConfig->TempHyst, ItemLong -- 10
}
#typev BattMngrTech_Jeita_R1_c501 19 "%0BattMngrTech_Jeita_UpdateJeitaTableRegistryData::Registry for BATTMNGR_REGISTRY_SELECT_JEITA_CONFIG is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_SWJEITA FUNC=BattMngrTech_Jeita_UpdateJeitaTableRegistryData
{
pJeitaConfig->SelectConfig, ItemLong -- 10
}
#enumv BATTMNGR_TECH_JEITA_R1_ACPI_ENTRY_TYPE
{
BATTMNGR_TECH_JEITA_R1_ACPI_SELECT_CONFIG,0x0
BATTMNGR_TECH_JEITA_R1_ACPI_TEMP_HYST,0x1
BATTMNGR_TECH_JEITA_R1_ACPI_BATTERY_CHARGE_TABLE,0x2
BATTMNGR_TECH_JEITA_R1_ACPI_ARGS,0x3
}
#enumv BATTMNGR_TECH_JEITA_TABLE_R1_ACPI_ENTRY_TYPE
{
BATTMNGR_TECH_JEITA_R1_JEITA_TABLE_ACPI_FLOAT_VOLTAGE,0x0
BATTMNGR_TECH_JEITA_R1_JEITA_TABLE_ACPI_FULL_CHARGE_CURRENT,0x1
BATTMNGR_TECH_JEITA_R1_JEITA_TABLE_ACPI_HARD_COLD_LIM,0x2
BATTMNGR_TECH_JEITA_R1_JEITA_TABLE_ACPI_SOFT_COLD_LIM,0x3
BATTMNGR_TECH_JEITA_R1_JEITA_TABLE_ACPI_SOFT_HOT_LIM,0x4
BATTMNGR_TECH_JEITA_R1_JEITA_TABLE_ACPI_HARD_HOT_LIM,0x5
BATTMNGR_TECH_JEITA_R1_JEITA_TABLE_ACPI_HOT_SL_FV_COMPENSATION,0x6
BATTMNGR_TECH_JEITA_R1_JEITA_TABLE_ACPI_COLD_SL_FV_COMPENSATION,0x7
BATTMNGR_TECH_JEITA_R1_JEITA_TABLE_ACPI_HOT_SL_CC_COMPENSATION,0x8
BATTMNGR_TECH_JEITA_R1_JEITA_TABLE_ACPI_COLD_SL_CC_COMPENSATION,0x9
BATTMNGR_TECH_JEITA_R1_JEITA_TABLE_ACPI_ARGS,0xA
}
