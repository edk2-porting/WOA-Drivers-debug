// PDB:  qcpep7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:20:368 (UTC) [tracepdb]
4a2bb588-7f37-3055-3b37-80139de81918 PEP // SRC=Idle_MicroPep.c MJ= MN=
#typev Idle_MicroPep_c194 15 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleFinishInitialization
{
}
#typev Idle_MicroPep_c174 14 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleFinishInitialization
{
}
#typev Idle_MicroPep_c3039 155 "%0 [Verb] :Create HWDripstimeout Timer failed 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInitializeHWDripsTest
{
}
#typev Idle_MicroPep_c1500 75 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInitializeHibernateVeto
{
}
#typev Idle_MicroPep_c1481 74 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInitializeHibernateVeto
{
}
#typev Idle_MicroPep_c168 13 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInitializeInternal
{
}
#typev Idle_MicroPep_c142 12 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInitializeInternal
{
}
#typev Idle_MicroPep_c478 26 "%0 [Info] :Cluster %10!d!, numCoresPerCluster = %11!d! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInitializeSyncFlags
{
i, ItemLong -- 10
IdleGetActiveCpusInCluster(i), ItemLong -- 11
}
#typev Idle_MicroPep_c472 25 "%0 [Info] :numClusters = %10!d! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInitializeSyncFlags
{
IdleGetActiveClusterCount(), ItemLong -- 10
}
#typev Idle_MicroPep_c1239 62 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalAppendBootVeto
{
}
#typev Idle_MicroPep_c1221 61 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalAppendBootVeto
{
}
#typev Idle_MicroPep_c925 49 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalAppendToModeCallbackList
{
}
#typev Idle_MicroPep_c899 48 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalAppendToModeCallbackList
{
}
#typev Idle_MicroPep_c499 27 "%0 [Info] :Applying additional latency of %10!d! to %11!s!.%12!s! break-even (new break-even: %13!d!) 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalApplyUsbDebuggerBreakEvenOffset
{
ctxt->DebuggerHostLatency, ItemLong -- 10
&ctxt->LprArray[mode->LprId].LprName, ItemPWString -- 11
&mode->ModeName, ItemPWString -- 12
mode->Attributes[0].BreakEven, ItemLong -- 13
}
#typev Idle_MicroPep_c248 22 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalCompareQueryString
{
}
#typev Idle_MicroPep_c245 21 "%0 [Verb] :Match returned is %10!s! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalCompareQueryString
{
match, ItemEnum(QueryMatchType) -- 10
}
#typev Idle_MicroPep_c240 20 "%0 [Verb] :String lengths mismatch, but difference is wild 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalCompareQueryString
{
}
#typev Idle_MicroPep_c224 19 "%0 [Verb] :Character mismatch at offset %10!d! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalCompareQueryString
{
j, ItemLong -- 10
}
#typev Idle_MicroPep_c216 18 "%0 [Verb] :Found * at offset %10!d! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalCompareQueryString
{
j, ItemLong -- 10
}
#typev Idle_MicroPep_c205 17 "%0 [Verb] :Comparing %10!s! of length %11!d! (search) to %12!s! of length %13!d! (query) 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalCompareQueryString
{
searchString, ItemWString -- 10
searchStringLength, ItemLong -- 11
queryString, ItemWString -- 12
queryStringLength, ItemLong -- 13
}
#typev Idle_MicroPep_c204 16 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalCompareQueryString
{
}
#typev Idle_MicroPep_c1317 65 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalEnumerateBootVetoes
{
}
#typev Idle_MicroPep_c1253 64 "%0 [Info] :Enumerating boot vetoes 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalEnumerateBootVetoes
{
}
#typev Idle_MicroPep_c1245 63 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalEnumerateBootVetoes
{
}
#typev Idle_MicroPep_c822 44 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalExecuteCallbackList
{
}
#typev Idle_MicroPep_c810 43 "%0 [Verb] :Invoking registered callback at %10!p! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalExecuteCallbackList
{
PCallbackList->cb, ItemPtr -- 10
}
#typev Idle_MicroPep_c801 42 "%0 [Verb] :enter - CallbackList = %10!p!, CoreMask = %11!08x!, ModeId = %12!d! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalExecuteCallbackList
{
CallbackList, ItemPtr -- 10
CoreMask, ItemLong -- 11
ModeId, ItemLong -- 12
}
#typev Idle_MicroPep_c841 45 "%0 [Verb] :Invoking callback at %10!p!, passing %11!p! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalExecuteInitializedCbList
{
cb->cb, ItemPtr -- 10
cb->context, ItemPtr -- 11
}
#typev Idle_MicroPep_c2322 111 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetCoordinatedStateDependency
{
}
#typev Idle_MicroPep_c2313 110 "%0 [Err ] :Get dependency data for coordinated mode %10!d! failed.  (mode=%11!p!, index=%12!d!, arraysize=%13!d!) 	[Idle_MicroPep.c::%!FUNC!::2313]" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetCoordinatedStateDependency
{
DependentStates->StateIndex, ItemLong -- 10
mode, ItemPtr -- 11
DependentStates->DependencyIndex, ItemLong -- 12
mode ? mode->DependencyContainerArraySize : 0, ItemLong -- 13
}
#typev Idle_MicroPep_c2306 109 "%0 [Err ] :Actual dependency count, %10!d!, greater than allocated size, %11!d!. 	[Idle_MicroPep.c::%!FUNC!::2306]" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetCoordinatedStateDependency
{
tmpDepCon.Count, ItemLong -- 10
DependentStates->DependencySize, ItemLong -- 11
}
#typev Idle_MicroPep_c2300 108 "%0 [Info] :Dependencies above for TargetProcessor: %10!p! (%11!d!) 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetCoordinatedStateDependency
{
DependentStates->TargetProcessor, ItemPtr -- 10
expectedLpr, ItemLong -- 11
}
#typev Idle_MicroPep_c2276 107 "%0 [Info] :Option %10!d! 
    ExpectedStateIndex: %11!d!
    Flags: %12!s!%13!s!%14!s! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetCoordinatedStateDependency
{
i, ItemLong -- 10
DependentStates->Options[i].ExpectedStateIndex, ItemLong -- 11
DependentStates->Options[i].InitiatingState ? 'InitiatingState ' : ' ', ItemString -- 12
DependentStates->Options[i].LooseDependency ? 'LooseDependency ' : ' ', ItemString -- 13
DependentStates->Options[i].DependentState ? 'DependentState ' : ' ', ItemString -- 14
}
#typev Idle_MicroPep_c2240 106 "%0 [Info] :Get dependency data at index %10!d! for coordinated mode %11!d! (%12!s!.%13!s!) 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetCoordinatedStateDependency
{
DependentStates->DependencyIndex, ItemLong -- 10
DependentStates->StateIndex, ItemLong -- 11
&Cntxt->LprArray[mode->LprId].LprName, ItemPWString -- 12
&mode->ModeName, ItemPWString -- 13
}
#typev Idle_MicroPep_c2227 105 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetCoordinatedStateDependency
{
}
#typev Idle_MicroPep_c2080 91 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetCoordinatedStatesCount
{
}
#typev Idle_MicroPep_c2079 90 "%0 [Info] :returned count = %10!d! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetCoordinatedStatesCount
{
count, ItemLong -- 10
}
#typev Idle_MicroPep_c2064 89 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetCoordinatedStatesCount
{
}
#typev Idle_MicroPep_c2176 100 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetProcessorStateData
{
}
#typev Idle_MicroPep_c2172 99 "%0 [Err ] : IdleGetProcessorStateData Failed  	[Idle_MicroPep.c::%!FUNC!::2172]" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetProcessorStateData
{
}
#typev Idle_MicroPep_c2150 98 "%0 [Info] :State %10!d! details 
    Latency: %11!d! 
    BreakEvenDuration: %12!d!
    CStateType: %13!d!
    Flags: %14!s!%15!s!%16!s!%17!s!%18!s!%19!s! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetProcessorStateData
{
i, ItemLong -- 10
IdleStates[i].Latency, ItemLong -- 11
IdleStates[i].BreakEvenDuration, ItemLong -- 12
IdleStates[i].CStateType, ItemLong -- 13
IdleStates[i].Interruptible ? 'Interruptible. ' : ' ', ItemString -- 14
IdleStates[i].CacheCoherent ? 'CacheCoherent. ' : ' ', ItemString -- 15
IdleStates[i].ThreadContextRetained ? 'ContextRetained ' : ' ', ItemString -- 16
IdleStates[i].PlatformOnly ? 'Platform ' : ' ', ItemString -- 17
IdleStates[i].WakesSpuriously ? 'WakesSpuriously ' : ' ', ItemString -- 18
IdleStates[i].Autonomous ? 'Autonomous ' : ' ', ItemString -- 19
}
#typev Idle_MicroPep_c2122 97 "%0 [Err ] : IdleGetProcessorStateData - State Count doesn't match with internal count  	[Idle_MicroPep.c::%!FUNC!::2122]" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetProcessorStateData
{
}
#typev Idle_MicroPep_c2115 96 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetProcessorStateData
{
}
#typev Idle_MicroPep_c2105 95 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetProcessorStatesCount
{
}
#typev Idle_MicroPep_c2103 94 "%0 [Info] :processor = %10!d!, returned count = %11!d! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetProcessorStatesCount
{
ProcNum, ItemLong -- 10
count, ItemLong -- 11
}
#typev Idle_MicroPep_c2099 93 "%0 [Err ] : IdleGetProcessorStatesCount Failed  	[Idle_MicroPep.c::%!FUNC!::2099]" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetProcessorStatesCount
{
}
#typev Idle_MicroPep_c2090 92 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalGetProcessorStatesCount
{
}
#typev Idle_MicroPep_c1472 73 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalInitAndApplyRegistryVetoes
{
}
#typev Idle_MicroPep_c1399 72 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalInitAndApplyRegistryVetoes
{
}
#typev Idle_MicroPep_c785 41 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalLookupLprMode
{
}
#typev Idle_MicroPep_c776 40 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalLookupLprMode
{
}
#typev Idle_MicroPep_c772 39 "%0 [Info] :Found mode %10!s!.%11!s! - LprId: %12!d!, ModeId: %13!d!, CoordinatedModeId: %14!d! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalLookupLprMode
{
Lpr, ItemPWString -- 10
Mode, ItemPWString -- 11
ModeIdx->LprId, ItemLong -- 12
ModeIdx->ModeId, ItemLong -- 13
ModeIdx->CoordinatedModeId, ItemLong -- 14
}
#typev Idle_MicroPep_c749 38 "%0 [Warn] :exit - No LPRs found 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalLookupLprMode
{
}
#typev Idle_MicroPep_c744 37 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalLookupLprMode
{
}
#typev Idle_MicroPep_c733 36 "%0 [Warn] :exit - No functions found (%10!s!.%11!s!) 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalMapInternalFunctions
{
lpr, ItemPWString -- 10
mode, ItemPWString -- 11
}
#typev Idle_MicroPep_c729 35 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalMapInternalFunctions
{
}
#typev Idle_MicroPep_c725 34 "%0 [Info] :Found %10!s!.%11!s! match on lpr (%12!s!) and mode (%13!s!) 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalMapInternalFunctions
{
context->InternalFuncTable[j].LprQueryString, ItemWString -- 10
context->InternalFuncTable[j].ModeQueryString, ItemWString -- 11
savedLpr, ItemEnum(QueryMatchType) -- 12
savedMode, ItemEnum(QueryMatchType) -- 13
}
#typev Idle_MicroPep_c712 33 "%0 [Verb] :Found a strong match -- search is done 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalMapInternalFunctions
{
}
#typev Idle_MicroPep_c703 32 "%0 [Verb] :Found a weak match -- continue searching for strong match 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalMapInternalFunctions
{
}
#typev Idle_MicroPep_c677 31 "%0 [Verb] :Checking table entry %10!d! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalMapInternalFunctions
{
i, ItemLong -- 10
}
#typev Idle_MicroPep_c664 30 "%0 [Warn] :exit - Input contains NULL data- context=%10!p! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalMapInternalFunctions
{
context, ItemPtr -- 10
}
#typev Idle_MicroPep_c657 29 "%0 [Info] :Searching function mapping for %10!s!.%11!s! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalMapInternalFunctions
{
lpr, ItemPWString -- 10
mode, ItemPWString -- 11
}
#typev Idle_MicroPep_c656 28 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalMapInternalFunctions
{
}
#typev Idle_MicroPep_c344 24 "%0 [Err ] :Not ready for coordinated mode change. 	[Idle_MicroPep.c::%!FUNC!::344]" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalModeUpdateThreadStart
{
}
#typev Idle_MicroPep_c323 23 "%0 [Err ] :KeWaitForSingleObject failed 	[Idle_MicroPep.c::%!FUNC!::323]" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalModeUpdateThreadStart
{
}
#typev Idle_MicroPep_c1916 81 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalPerformOperation
{
}
#typev Idle_MicroPep_c1873 80 "%0 [Verb] :Invoking registered complete function at %10!p! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalPerformOperation
{
params.Mode->IdleModeFunctions.CompleteFunction, ItemPtr -- 10
}
#typev Idle_MicroPep_c1859 79 "%0 [Verb] :Invoking registered execute function at %10!p! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalPerformOperation
{
params.Mode->IdleModeFunctions.ExecuteFunction, ItemPtr -- 10
}
#typev Idle_MicroPep_c1845 78 "%0 [Verb] :Invoking registered preexecute function at %10!p! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalPerformOperation
{
params.Mode->IdleModeFunctions.PreExecuteFunction, ItemPtr -- 10
}
#typev Idle_MicroPep_c1802 77 "%0 [Verb] :Handling %10!s! for mode %11!s!.%12!s! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalPerformOperation
{
params.Type, ItemEnum(PEP_IDLE_NOTIFY_ENUM) -- 10
&cntxt->LprArray[params.Mode->LprId].LprName, ItemPWString -- 11
&params.Mode->ModeName, ItemPWString -- 12
}
#typev Idle_MicroPep_c1795 76 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalPerformOperation
{
}
#typev Idle_MicroPep_c2391 117 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalQueryStateName
{
}
#typev Idle_MicroPep_c2384 116 "%0 [Info] :Returning name of %10!s! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalQueryStateName
{
StateName->Name, ItemWString -- 10
}
#typev Idle_MicroPep_c2380 115 "%0 [Err ] : Error in swprintf_s 	[Idle_MicroPep.c::%!FUNC!::2380]" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalQueryStateName
{
}
#typev Idle_MicroPep_c2367 114 "%0 [Info] :Returning size of %10!d! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalQueryStateName
{
StateName->NameSize, ItemLong -- 10
}
#typev Idle_MicroPep_c2338 113 "%0 [Info] :Query state name for processor %10!d!, index %11!d! (size=%12!d!) 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalQueryStateName
{
ProcNum, ItemLong -- 10
StateName->StateIndex, ItemLong -- 11
StateName->NameSize, ItemLong -- 12
}
#typev Idle_MicroPep_c2330 112 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalQueryStateName
{
}
#typev Idle_MicroPep_c1369 71 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalQueryVetoReason
{
}
#typev Idle_MicroPep_c1363 70 "%0 [Err ] :No data to return - unexpected NULL ctxt=%10!p!, QueryVetoReason=%11!p! 	[Idle_MicroPep.c::%!FUNC!::1363]" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalQueryVetoReason
{
ctxt, ItemPtr -- 10
QueryVetoReason, ItemPtr -- 11
}
#typev Idle_MicroPep_c1357 69 "%0 [Warn] :No data to return - veto reason #%10!d!, registered count %11!d! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalQueryVetoReason
{
QueryVetoReason->VetoReason, ItemLong -- 10
ctxt->VetoInformation.RegisteredVetoCount, ItemLong -- 11
}
#typev Idle_MicroPep_c1349 68 "%0 [Info] :Veto reason #%10!d!, returning name of %11!s! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalQueryVetoReason
{
QueryVetoReason->VetoReason, ItemLong -- 10
QueryVetoReason->Name, ItemWString -- 11
}
#typev Idle_MicroPep_c1339 67 "%0 [Info] :Veto reason #%10!d!, returning size of %11!d! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalQueryVetoReason
{
QueryVetoReason->VetoReason, ItemLong -- 10
QueryVetoReason->NameSize, ItemLong -- 11
}
#typev Idle_MicroPep_c1324 66 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalQueryVetoReason
{
}
#typev Idle_MicroPep_c890 47 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalRegisterForInit
{
}
#typev Idle_MicroPep_c856 46 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalRegisterForInit
{
}
#typev Idle_MicroPep_c1046 53 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalRegisterForInitiateWakeCallback
{
}
#typev Idle_MicroPep_c1020 52 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalRegisterForInitiateWakeCallback
{
}
#typev Idle_MicroPep_c1012 51 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalRegisterForModeCallback
{
}
#typev Idle_MicroPep_c937 50 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalRegisterForModeCallback
{
}
#typev Idle_MicroPep_c1121 57 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalRegisterVetoReason
{
}
#typev Idle_MicroPep_c1116 56 "%0 [Info] :Assigned veto id %10!d! for "%11!s!" 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalRegisterVetoReason
{
*VetoId, ItemLong -- 10
VetoReason, ItemWString -- 11
}
#typev Idle_MicroPep_c1063 55 "%0 [Warn] :exit on NULL check 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalRegisterVetoReason
{
}
#typev Idle_MicroPep_c1058 54 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalRegisterVetoReason
{
}
#typev Idle_MicroPep_c1138 58 "%0 [Verb] :Veto state %10!s! for %11!s!.%12!s!, new count is %13!d! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalSendVeto
{
increment ? 'incremented' : 'decremented', ItemString -- 10
&ctxt->LprArray[mode->LprId].LprName, ItemPWString -- 11
&mode->ModeName, ItemPWString -- 12
newCount, ItemLong -- 13
}
#typev Idle_MicroPep_c1212 60 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalUpdateVeto
{
}
#typev Idle_MicroPep_c1154 59 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdleInternalUpdateVeto
{
}
#typev Idle_MicroPep_c137 11 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdlePreInitializeInternal
{
}
#typev Idle_MicroPep_c121 10 "%0 [Verb] :enter 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=IdlePreInitializeInternal
{
}
#typev Idle_MicroPep_c2469 124 "%0 [Func]:%!FUNC! 	[Idle_MicroPep.c]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=PepQueryCoordinatedIdleDependency
{
}
#typev Idle_MicroPep_c2543 130 "%0 [Func]:%!FUNC! 	[Idle_MicroPep.c]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=PepQueryCoordinatedStateName
{
}
#typev Idle_MicroPep_c2515 128 "%0 [Func]:%!FUNC! 	[Idle_MicroPep.c]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=PepQueryEnumerateBootVetoes
{
}
#typev Idle_MicroPep_c2645 137 "%0 [Func]:%!FUNC! 	[Idle_MicroPep.c]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=PepQueryPlatformStatesMicroPEP
{
}
#typev Idle_MicroPep_c2673 139 "%0 [Verb] :exit 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=PEP_IDLE_FLAG_COMMON FUNC=PepQueryProcessorIdleStates
{
}
#typev Idle_MicroPep_c2660 138 "%0 [Func]:%!FUNC! 	[Idle_MicroPep.c]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=PepQueryProcessorIdleStates
{
}
#typev Idle_MicroPep_c2530 129 "%0 [Func]:%!FUNC! 	[Idle_MicroPep.c]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=PepQueryProcessorStateName
{
}
#typev Idle_MicroPep_c2503 127 "%0 [Func]:%!FUNC! 	[Idle_MicroPep.c]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=PepQueryVetoReason
{
}
#typev Idle_MicroPep_c2487 126 "%0 [Info] :VetoReasonCount = %10!d! 	[Idle_MicroPep.c::%!FUNC!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=PepQueryVetoReasons
{
QueryReasons->VetoReasonCount, ItemLong -- 10
}
#typev Idle_MicroPep_c2484 125 "%0 [Func]:%!FUNC! 	[Idle_MicroPep.c]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_IDLE_FLAG_COMMON FUNC=PepQueryVetoReasons
{
}
#enumv QueryMatchType
{
NO_MATCH,0x0
WEAK_MATCH,0x1
STRONG_MATCH,0x2
}
#enumv PEP_IDLE_NOTIFY_ENUM
{
PEP_INTERNAL_NOTIFY_INVALID,0x0
PEP_INTERNAL_PREEXECUTE,0x1
PEP_INTERNAL_EXECUTE,0x2
PEP_INTERNAL_COMPLETE,0x3
PEP_INTERNAL_NOTIFY_ENUM_MAX,0x4
}
