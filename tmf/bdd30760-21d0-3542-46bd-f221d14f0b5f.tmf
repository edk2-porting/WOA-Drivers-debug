// PDB:  qcaudminiport850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
bdd30760-21d0-3542-46bd-f221d14f0b5f 10.4.1 // SRC=minwavert.cpp MJ= MN=
#typev minwavert_cpp6864 327 "%0:CKeywordDetector::CKeywordDetector: Leaving Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::CKeywordDetector
{
}
#typev minwavert_cpp6859 423 "%0CKeywordDetector::ResetFifo: Leaving Method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::CKeywordDetector
{
}
#typev minwavert_cpp6859 422 "%0CKeywordDetector::ResetFifo: Entering Method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::CKeywordDetector
{
}
#typev minwavert_cpp6786 326 "%0:CKeywordDetector::CKeywordDetector: Entering Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::CKeywordDetector
{
}
#typev minwavert_cpp202 325 "%0CMiniportWaveRT::ValidateKwDetectionSupport,  Leaving method. Filter: %10!s!,  %11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::CMiniportWaveRT
{
pFilterRegName, ItemWString -- 10
m_bKwDetectionSupported, ItemLong -- 11
}
#typev minwavert_cpp202 324 "%0CMiniportWaveRT::ValidateKwDetectionSupport: Failed to allocate memory for pRegistryPath. Filter: %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::CMiniportWaveRT
{
pFilterRegName, ItemWString -- 10
}
#typev minwavert_cpp202 323 "%0CMiniportWaveRT::ValidateKwDetectionSupport: Adapater Common is NULL" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::CMiniportWaveRT
{
}
#typev minwavert_cpp202 322 "%0Entering CMiniportWaveRT::ValidateKwDetectionSupport" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::CMiniportWaveRT
{
}
#typev minwavert_cpp6934 331 "%0CKeywordDetector::~CKeywordDetector: Leaving Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::~CKeywordDetector
{
}
#typev minwavert_cpp6927 330 "%0CKeywordDetector::~CKeywordDetector: Entering Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::~CKeywordDetector
{
}
#typev minwavert_cpp504 11 "%0CMiniportWaveRT::~CMiniportWaveRT: Exiting destructor, device type %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::~CMiniportWaveRT
{
m_DeviceType, ItemLong -- 10
}
#typev minwavert_cpp304 10 "%0CMiniportWaveRT::~CMiniportWaveRT: Entering destructor, device type %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::~CMiniportWaveRT
{
m_DeviceType, ItemLong -- 10
}
#typev minwavert_cpp3106 141 "%0CMiniportWaveRT::CMiniportWaveRT_EventHandler_PinCapsChange leaving method status=0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT_EventHandler_PinCapsChange
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp3101 140 "%0CMiniportWaveRT::CMiniportWaveRT_EventHandler_PinCapsChange  method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT_EventHandler_PinCapsChange
{
}
#typev minwavert_cpp4433 220 "%0CMiniportWaveRT::CMiniportWaveRT_EventHandler_SoundDetectorMatchDetected leaving method status=0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT_EventHandler_SoundDetectorMatchDetected
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp4427 219 "%0CMiniportWaveRT::CMiniportWaveRT_EventHandler_SoundDetectorMatchDetected entering method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT_EventHandler_SoundDetectorMatchDetected
{
}
#typev minwavert_cpp4382 338 "%0CKeywordDetector::GetMatchedDataSize: Leaving Method matchedDataSize %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT_Get_SoundDetectorMatchResult
{
matchedDataSize, ItemLong -- 10
}
#typev minwavert_cpp4382 337 "%0CKeywordDetector::GetMatchedDataSize: matched data not available " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT_Get_SoundDetectorMatchResult
{
}
#typev minwavert_cpp4382 336 "%0CKeywordDetector::GetMatchedDataSize: Entering Method %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT_Get_SoundDetectorMatchResult
{
GetPowerType(), ItemLong -- 10
}
#typev minwavert_cpp4311 217 "%0Set_SoundDetectorArmed: OS request to change SVA state to %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT_Set_SoundDetectorArmed
{
armed, ItemLong -- 10
}
#typev minwavert_cpp4194 216 "%0Set_SoundDetectorPatterns: OS request to download detector data" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT_Set_SoundDetectorPatterns
{
}
#typev minwavert_cpp4194 215 "%0Set_SoundDetectorPatterns: OS request to reset detector" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT_Set_SoundDetectorPatterns
{
}
#typev minwavert_cpp6485 314 "%0CMiniportWaveRT::CalculatePinDataRange Invalid StreamType" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::CalculatePinDataRange
{
}
#typev minwavert_cpp6565 317 "%0CMiniportWaveRT::CalculatePinDataRange GetPinDataRangeIndex Failed m_DeviceFormatsAndModes[%10!d!].ModeAndDefaultFormat[%11!d!].SupportedFormats[%12!d!]" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::CalculatePinDataRange
{
_FormatsAndModesIndex, ItemLong -- 10
j, ItemLong -- 11
k, ItemLong -- 12
}
#typev minwavert_cpp6533 316 "%0CMiniportWaveRT::CalculatePinDataRange UpdatePinDataRange Failed m_DeviceFormatsAndModes[%10!d!].ModeAndDefaultFormat[%11!d!].SupportedFormats[%12!d!]" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::CalculatePinDataRange
{
_FormatsAndModesIndex, ItemLong -- 10
j, ItemLong -- 11
k, ItemLong -- 12
}
#typev minwavert_cpp6491 315 "%0CMiniportWaveRT::CalculatePinDataRange AudioDataRanges %10!d! for PinId %11!d! eDevicetype %12!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::CalculatePinDataRange
{
nAudioDataRangesCount, ItemLong -- 10
PinId, ItemLong -- 11
m_DeviceType, ItemLong -- 12
}
#typev minwavert_cpp6482 313 "%0CMiniportWaveRT::CalculatePinDataRange KWS AudioDataRanges %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::CalculatePinDataRange
{
nAudioDataRangesCount, ItemLong -- 10
}
#typev minwavert_cpp6477 312 "%0CMiniportWaveRT::CalculatePinDataRange host capture AudioDataRanges %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::CalculatePinDataRange
{
nAudioDataRangesCount, ItemLong -- 10
}
#typev minwavert_cpp6472 311 "%0CMiniportWaveRT::CalculatePinDataRange loopback AudioDataRanges %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::CalculatePinDataRange
{
nAudioDataRangesCount, ItemLong -- 10
}
#typev minwavert_cpp6467 310 "%0CMiniportWaveRT::CalculatePinDataRange offload AudioDataRanges %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::CalculatePinDataRange
{
nAudioDataRangesCount, ItemLong -- 10
}
#typev minwavert_cpp6462 309 "%0CMiniportWaveRT::CalculatePinDataRange Host render AudioDataRanges %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::CalculatePinDataRange
{
nAudioDataRangesCount, ItemLong -- 10
}
#typev minwavert_cpp6456 308 "%0Entering CMiniportWaveRT::CalculatePinDataRange streamType %10!d!, FormatsAndModesIndex %11!d!, DeviceType %12!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::CalculatePinDataRange
{
_streamType, ItemLong -- 10
_FormatsAndModesIndex, ItemLong -- 11
m_DeviceType, ItemLong -- 12
}
#typev minwavert_cpp6918 329 "%0:CKeywordDetector::CleanUp: Leaving Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::CleanUp
{
}
#typev minwavert_cpp6874 328 "%0CKeywordDetector::CleanUp Entering method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::CleanUp
{
}
#typev minwavert_cpp7046 340 "%0CMiniportWaveRT::CleanUp Leaving Method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::CleanUp
{
}
#typev minwavert_cpp7017 339 "%0CMiniportWaveRT::CleanUp Entering method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::CleanUp
{
}
#typev minwavert_cpp619 13 "%0CMiniportWaveRT::DataRangeIntersection not KSDATAFORMAT_SPECIFIER_WAVEFORMATEX,  Leaving method %10!s!,  status = STATUS_NOT_IMPLEMENTED." //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::DataRangeIntersection
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp653 17 "%0CMiniportWaveRT::DataRangeIntersection let Port Class handle - Leaving method %10!s!,  status = STATUS_NOT_IMPLEMENTED." //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::DataRangeIntersection
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp646 16 "%0CMiniportWaveRT::DataRangeIntersection Leaving method %10!s!,  status = STATUS_NO_MATCH." //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::DataRangeIntersection
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp638 15 "%0CMiniportWaveRT::DataRangeIntersection Leaving method %10!s!,  status = STATUS_BUFFER_TOO_SMALL." //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::DataRangeIntersection
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp633 14 "%0CMiniportWaveRT::DataRangeIntersection Leaving method %10!s!, requiredsize = %11!d! status = STATUS_BUFFER_OVERFLOW." //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::DataRangeIntersection
{
m_pMiniportPair->WaveName, ItemWString -- 10
requiredSize, ItemLong -- 11
}
#typev minwavert_cpp610 12 "%0CMiniportWaveRT::DataRangeIntersection Entering method %10!s!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::DataRangeIntersection
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp8419 461 "%0CKeywordDetector::DeinitBufferingStream: Leaving Method ntStatus 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::DeinitBufferingStream
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8400 460 "%0CKeywordDetector::DeinitBufferingStream: Entering Method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::DeinitBufferingStream
{
}
#typev minwavert_cpp7935 421 "%0CKeywordDetector::DownloadDetectorData: Leaving Method ntStatus 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::DownloadDetectorData
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp7784 409 "%0CKeywordDetector::DownloadDetectorData: Invalid Keyword configuration" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::DownloadDetectorData
{
}
#typev minwavert_cpp7862 416 "%0CKeywordDetector::DownloadDetectorData: OpenListenSession failed with status 0x%10!x!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::DownloadDetectorData
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp7888 419 "%0CKeywordDetector::DownloadDetectorData: RegisterSoundModel failed with status 0x%10!x! PowerType %11!d!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::DownloadDetectorData
{
ntStatus, ItemLong -- 10
m_SupporterdPowerTypes[i], ItemLong -- 11
}
#typev minwavert_cpp7906 420 "%0CKeywordDetector::DownloadDetectorData: SetSessionParams failed with status 0x%10!x! PowerType %11!d!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::DownloadDetectorData
{
ntStatus, ItemLong -- 10
m_SupporterdPowerTypes[i], ItemLong -- 11
}
#typev minwavert_cpp7879 418 "%0CKeywordDetector::DownloadDetectorData: Enable LAB Data dump - 0x%10!x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::DownloadDetectorData
{
m_bEnableDataDump, ItemLong -- 10
}
#typev minwavert_cpp7878 417 "%0CKeywordDetector::DownloadDetectorData: Enable LAB - 0x%10!x! Buffer Duration - 0x%11!x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::DownloadDetectorData
{
m_bEnableLAB, ItemLong -- 10
pListenDeviceInfo->lab_duration_in_ms, ItemLong -- 11
}
#typev minwavert_cpp7842 415 "%0CKeywordDetector::DownloadDetectorData,  status = 0x%10!08x!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CKeywordDetector::DownloadDetectorData
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp7835 414 "%0CMiniportWaveRT::DownloadDetectorData : Downloading for Subsystem %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::DownloadDetectorData
{
i, ItemLong -- 10
}
#typev minwavert_cpp7832 413 "%0CKeywordDetector::DownloadDetectorData: Only %10!d! required, skipping.%11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::DownloadDetectorData
{
LISTEN_USE_HIGH_POWER, ItemLong -- 10
m_SupporterdPowerTypes[i], ItemLong -- 11
}
#typev minwavert_cpp7812 412 "%0CKeywordDetector::DownloadDetectorData: Fail to allocate memory for m_pconfidenceLevels" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::DownloadDetectorData
{
}
#typev minwavert_cpp7803 411 "%0CKeywordDetector::DownloadDetectorData: Fail to allocate memory for m_pSoundModelConfigData" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::DownloadDetectorData
{
}
#typev minwavert_cpp7791 410 "%0CKeywordDetector::DownloadDetectorData: Fail to allocate memory for listenRegisterModel.modelAddress" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::DownloadDetectorData
{
}
#typev minwavert_cpp7776 408 "%0CKeywordDetector::DownloadDetectorData " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::DownloadDetectorData
{
}
#typev minwavert_cpp7761 407 "%0CKeywordDetector::DownloadDetectorData: ResetDetector failed with status 0x%10!x!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::DownloadDetectorData
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp7751 406 "%0CKeywordDetector::DownloadDetectorData: pListenManager is NULL " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::DownloadDetectorData
{
}
#typev minwavert_cpp7743 405 "%0CKeywordDetector::DownloadDetectorData: Keyword Configuration is NULL." //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::DownloadDetectorData
{
}
#typev minwavert_cpp7736 404 "%0CKeywordDetector::DownloadDetectorData: Keyword Configuration already set on another filter. Cannot set this again." //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::DownloadDetectorData
{
}
#typev minwavert_cpp7732 403 "%0CKeywordDetector::DownloadDetectorData: Entering Method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::DownloadDetectorData
{
}
#typev minwavert_cpp3138 143 "%0CMiniportWaveRT::EventHandler_AllEvents leaving method status=0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EventHandler_AllEvents
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp3119 142 "%0CMiniportWaveRT::EventHandler_AllEvents entering method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EventHandler_AllEvents
{
}
#typev minwavert_cpp3088 139 "%0CMiniportWaveRT::EvtFormatChangeHandler leaving method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtFormatChangeHandler
{
}
#typev minwavert_cpp3051 138 "%0CMiniportWaveRT::EvtFormatChangeHandler Entering method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtFormatChangeHandler
{
}
#typev minwavert_cpp7325 366 "%0CMiniportWaveRT::EvtKwsTransitionWorkItem : Leaving method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtKwsTransitionWorkItem
{
}
#typev minwavert_cpp7308 365 "%0CMiniportWaveRT::EvtKwsTransitionWorkItem invalid action %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::EvtKwsTransitionWorkItem
{
task->Action, ItemLong -- 10
}
#typev minwavert_cpp7301 364 "%0CMiniportWaveRT::EvtKwsTransitionWorkItem : Idle timer expired, Caching PowerType %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtKwsTransitionWorkItem
{
This->m_pKeywordDetector->m_CachedPowerType, ItemLong -- 10
}
#typev minwavert_cpp7293 363 "%0CMiniportWaveRT::EvtKwsTransitionWorkItem : Idle timer expired, Current PowerType %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtKwsTransitionWorkItem
{
This->m_pKeywordDetector->m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp7283 362 "%0CMiniportWaveRT::EvtKwsTransitionWorkItem : Offload playback started, Current PowerType %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtKwsTransitionWorkItem
{
This->m_pKeywordDetector->m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp7276 361 "%0CMiniportWaveRT::EvtKwsTransitionWorkItem : AC Power Off Caching PowerType %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtKwsTransitionWorkItem
{
This->m_pKeywordDetector->m_CachedPowerType, ItemLong -- 10
}
#typev minwavert_cpp7268 360 "%0CMiniportWaveRT::EvtKwsTransitionWorkItem : AC Power Off Current powerType %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtKwsTransitionWorkItem
{
This->m_pKeywordDetector->m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp7259 359 "%0CMiniportWaveRT::EvtKwsTransitionWorkItem : AC Power On Current powerType %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtKwsTransitionWorkItem
{
This->m_pKeywordDetector->m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp7251 358 "%0CMiniportWaveRT::EvtKwsTransitionWorkItem : Display Off Caching PowerType %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtKwsTransitionWorkItem
{
This->m_pKeywordDetector->m_CachedPowerType, ItemLong -- 10
}
#typev minwavert_cpp7245 357 "%0CMiniportWaveRT::EvtKwsTransitionWorkItem : Display Off Current powerType %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtKwsTransitionWorkItem
{
This->m_pKeywordDetector->m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp7237 356 "%0CMiniportWaveRT::EvtKwsTransitionWorkItem : Display On Current powerType %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtKwsTransitionWorkItem
{
This->m_pKeywordDetector->m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp7225 355 "%0CMiniportWaveRT::EvtKwsTransitionWorkItem : SVA session started, Powertype = %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtKwsTransitionWorkItem
{
This->m_pKeywordDetector->m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp7217 354 "%0CMiniportWaveRT::EvtKwsTransitionWorkItem : SVA disable request, Powertype = %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtKwsTransitionWorkItem
{
This->m_pKeywordDetector->m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp7211 353 "%0CMiniportWaveRT::EvtKwsTransitionWorkItem : SVA enable request, Powertype = %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtKwsTransitionWorkItem
{
This->m_pKeywordDetector->m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp7168 352 "%0CMiniportWaveRT::EvtKwsTransitionWorkItem : Entering method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::EvtKwsTransitionWorkItem
{
}
#typev minwavert_cpp2678 104 "%0CMiniportWaveRT::GetAttributesFromAttributeList: Leaving method,  status = 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::GetAttributesFromAttributeList
{
status, ItemLong -- 10
}
#typev minwavert_cpp2624 103 "%0CMiniportWaveRT::GetAttributesFromAttributeList Entering method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::GetAttributesFromAttributeList
{
}
#typev minwavert_cpp2582 102 "%0CMiniportWaveRT::GetDefaultProcessingMode leaving method  %10!s!,  status = 0x%11!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::GetDefaultProcessingModeForPin
{
m_pMiniportPair->WaveName, ItemWString -- 10
ntStatus, ItemLong -- 11
}
#typev minwavert_cpp2554 100 "%0CMiniportWaveRT::GetDefaultProcessingModeForPin: unsupported pin id! %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::GetDefaultProcessingModeForPin
{
_ulPin, ItemLong -- 10
}
#typev minwavert_cpp2549 99 "%0CMiniportWaveRT::GetDefaultProcessingModeForPin loopback pin doesnt have any modes " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::GetDefaultProcessingModeForPin
{
}
#typev minwavert_cpp2563 101 "%0CMiniportWaveRT::GetDefaultProcessingModeForPin: Mode: %10!08X!-%11!04X!-%12!04X!-%13!02X!%14!02X!-%15!02X!%16!02X!%17!02X!%18!02X!%19!02X!%20!02X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::GetDefaultProcessingModeForPin
{
_pSignalProcessingMode->Data1, ItemLong -- 10
_pSignalProcessingMode->Data2, ItemLong -- 11
_pSignalProcessingMode->Data3, ItemLong -- 12
_pSignalProcessingMode->Data4[0], ItemLong -- 13
_pSignalProcessingMode->Data4[1], ItemLong -- 14
_pSignalProcessingMode->Data4[2], ItemLong -- 15
_pSignalProcessingMode->Data4[3], ItemLong -- 16
_pSignalProcessingMode->Data4[4], ItemLong -- 17
_pSignalProcessingMode->Data4[5], ItemLong -- 18
_pSignalProcessingMode->Data4[6], ItemLong -- 19
_pSignalProcessingMode->Data4[7], ItemLong -- 20
}
#typev minwavert_cpp2518 98 "%0CMiniportWaveRT::GetDefaultProcessingModeForPin Entering method  Pin ID %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::GetDefaultProcessingModeForPin
{
_ulPin, ItemLong -- 10
}
#typev minwavert_cpp688 19 "%0CMiniportWaveRT::GetDescription Leaving method %10!s!,  status = STATUS_SUCCESS" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::GetDescription
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp685 18 "%0CMiniportWaveRT::GetDescription Entering method %10!s!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::GetDescription
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp2173 88 "%0CMiniportWaveRT::GetDeviceDescription: Leaving method,  status = STATUS_SUCCESS." //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::GetDeviceDescription
{
}
#typev minwavert_cpp2159 87 "%0CMiniportWaveRT::GetDeviceDescription Entering method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::GetDeviceDescription
{
}
#typev minwavert_cpp7371 371 "%0CKeywordDetector::GetMatchedData: Leaving Method ntStatus 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::GetMatchedData
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp7339 368 "%0CKeywordDetector::GetMatchedData: matchedData param or m_pMatchedData is NULL " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::GetMatchedData
{
}
#typev minwavert_cpp7355 370 "%0CKeywordDetector::GetMatchedData,  keyword_end_timestamp %10!I64d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCLISTEN_INFO FUNC=CKeywordDetector::GetMatchedData
{
matchedData->keywordEndTimestamp, ItemLongLong -- 10
}
#typev minwavert_cpp7354 369 "%0CKeywordDetector::GetMatchedData,  keyword_start_timestamp %10!I64d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCLISTEN_INFO FUNC=CKeywordDetector::GetMatchedData
{
matchedData->keywordStartTimestamp, ItemLongLong -- 10
}
#typev minwavert_cpp7335 367 "%0CKeywordDetector::GetMatchedData: Entering Method %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::GetMatchedData
{
GetPowerType(), ItemLong -- 10
}
#typev minwavert_cpp2293 93 "%0CMiniportWaveRT::GetModes: Leaving method,  status = 0x%10!08X!." //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::GetModes
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp2278 92 "%0CMiniportWaveRT::GetModes: Buffer UNDERFLOW Error,  status = 0x%10!08X!." //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::GetModes
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp2267 91 "%0CMiniportWaveRT::GetModes: Leaving method,  status = 0x%10!08X!,  error." //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::GetModes
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp2262 90 "%0CMiniportWaveRT::GetModes: PinId %10!d!, numModes %11!d!, devicetype %12!d!, status = 0x%13!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::GetModes
{
Pin, ItemLong -- 10
numModes, ItemLong -- 11
m_DeviceType, ItemLong -- 12
ntStatus, ItemLong -- 13
}
#typev minwavert_cpp2202 89 "%0CMiniportWaveRT::GetModes Entering method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::GetModes
{
}
#typev minwavert_cpp7710 402 "%0CKeywordDetector::GetPowerType: %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::GetPowerType
{
m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp8732 484 "%0CKeywordDetector::GetReadPacket: Leaving Method : Status : 0x%10!x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::GetReadPacket
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8707 483 "%0CKeywordDetector::GetReadPacket: RtlLongLongToULong returned ntStatus 0x%10!x!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::GetReadPacket
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8695 482 "%0CKeywordDetector::GetReadPacket: WaveRT Buffer Size is not matching to the Internal Packet Size!!! WaveRTBufferSize - %10!d! - Number of bytes per packet - %11!d! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::GetReadPacket
{
WaveRtBufferSize, ItemLong -- 10
num_bytes_per_packet, ItemLong -- 11
}
#typev minwavert_cpp8686 481 "%0CKeywordDetector::GetReadPacket: packetListEntry is NULL" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::GetReadPacket
{
}
#typev minwavert_cpp8682 480 "%0CKeywordDetector::GetReadPacket: Entering Method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::GetReadPacket
{
}
#typev minwavert_cpp7508 384 "%0CKeywordDetector::GetSessionInitParamsIndex: Leaving Method ntStatus 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::GetSessionInitParamsIndex
{
status, ItemLong -- 10
}
#typev minwavert_cpp7502 383 "%0CKeywordDetector::GetSessionInitParamsIndex: Index = %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::GetSessionInitParamsIndex
{
*pIndex, ItemLong -- 10
}
#typev minwavert_cpp7495 382 "%0CKeywordDetector::GetSessionInitParamsIndex: Entering Method %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::GetSessionInitParamsIndex
{
powerType, ItemLong -- 10
}
#typev minwavert_cpp1447 41 "%0CMiniportWaveRT::GetStreamConfig Could not enable ULLPP session" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::GetStreamConfig
{
}
#typev minwavert_cpp1443 40 "%0CMiniportWaveRT::GetStreamConfig:ULL can not be enabled now,  reverting to LLNP Rxx mode = 0x%10!x!,  sessiontype = 0x%11!x!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::GetStreamConfig
{
mode, ItemLong -- 10
(*ppstreamConfig)->sessionType, ItemLong -- 11
}
#typev minwavert_cpp1424 47 "%0Leaving CMiniportWaveRT::SearchThroughModes,  bFound = %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::GetStreamConfig
{
bFound, ItemLong -- 10
}
#typev minwavert_cpp1424 46 "%0Entering CMiniportWaveRT::SearchThroughModes" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::GetStreamConfig
{
}
#typev minwavert_cpp1460 43 "%0CMiniportWaveRT::GetStreamConfig: Leaving method,  status = 0x%10!08X!." //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::GetStreamConfig
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp1455 42 "%0CMiniportWaveRT::GetStreamConfig Could not find Stream configuration" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::GetStreamConfig
{
}
#typev minwavert_cpp1395 39 "%0CMiniportWaveRT::GetStreamConfig:  Entering method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::GetStreamConfig
{
}
#typev minwavert_cpp7462 381 "%0CKeywordDetector::GetSupportedPatterns: Leaving Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::GetSupportedPatterns
{
}
// PDB:  qcaudminiport850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev minwavert_cpp7454 380 "%0CKeywordDetector::GetSupportedPatterns: pListenManager is NULL " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::GetSupportedPatterns
{
}
#typev minwavert_cpp7449 379 "%0CKeywordDetector::GetSupportedPatterns:Entering Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::GetSupportedPatterns
{
}
#typev minwavert_cpp9001 505 "%0:CKeywordDetector::HandleBuffReady: Leaving Method: Status -  0x%10!x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::HandleBuffReady
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8986 504 "%0:CKeywordDetector::HandleBuffReady: Packet Number : %10!I64d! QPC : %11!I64d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::HandleBuffReady
{
packetEntry->PacketNumber, ItemLongLong -- 10
packetEntry->QpcWhenSampled, ItemLongLong -- 11
}
#typev minwavert_cpp8975 503 "%0CKeywordDetector::HandleBuffReady: Invalid Buffer Address - Hw Pool Packet Virtual Addr - %10!p! Buff Ready - %11!p! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::HandleBuffReady
{
packetEntry->pVirtAddr, ItemPtr -- 10
pBuff->pVirtAddr, ItemPtr -- 11
}
#typev minwavert_cpp8958 502 "%0CKeywordDetector::HandleBuffReady: LAB streaming stopped!!! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::HandleBuffReady
{
}
#typev minwavert_cpp8951 501 "%0CKeywordDetector::HandleBuffReady: Buffer Payload is NULL  " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::HandleBuffReady
{
}
#typev minwavert_cpp8947 500 "%0:CKeywordDetector::HandleBuffReady: Entering Method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::HandleBuffReady
{
}
#typev minwavert_cpp7437 378 "%0CKeywordDetector::HandleDetectionCallBack: Leaving Method ntStatus 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::HandleDetectionCallBack
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp7424 377 "%0CKeywordDetector::HandleDetectionCallBack: WDSP SSR detected." //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::HandleDetectionCallBack
{
}
#typev minwavert_cpp7417 376 "%0CKeywordDetector::HandleDetectionCallBack,  keyword_end_timestamp %10!I64d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCLISTEN_INFO FUNC=CKeywordDetector::HandleDetectionCallBack
{
m_pMatchedData->keywordEndTimestamp, ItemLongLong -- 10
}
#typev minwavert_cpp7416 375 "%0CKeywordDetector::HandleDetectionCallBack,  keyword_start_timestamp %10!I64d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCLISTEN_INFO FUNC=CKeywordDetector::HandleDetectionCallBack
{
m_pMatchedData->keywordStartTimestamp, ItemLongLong -- 10
}
#typev minwavert_cpp7409 374 "%0CKeywordDetector::HandleDetectionCallBack: Memory allocation failed for m_pMatchedData " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::HandleDetectionCallBack
{
}
#typev minwavert_cpp7388 373 "%0CKeywordDetector::HandleDetectionCallBack: detectionPayload is NULL  " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::HandleDetectionCallBack
{
}
#typev minwavert_cpp7384 372 "%0CKeywordDetector::HandleDetectionCallBack: Entering Method %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::HandleDetectionCallBack
{
GetPowerType(), ItemLong -- 10
}
#typev minwavert_cpp8660 479 "%0CKeywordDetector::InitBufferingStream: Leaving Method,  Status : 0x%10!x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::InitBufferingStream
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8647 478 "%0CKeywordDetector::InitBufferingStream: ObReferenceObjectByHandle failed! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::InitBufferingStream
{
}
#typev minwavert_cpp8639 477 "%0CKeywordDetector::InitBufferingStream: Worker Thread creation failed! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::InitBufferingStream
{
}
#typev minwavert_cpp8630 476 "%0CKeywordDetector::InitBufferingStream: Dereferencing the thread object " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::InitBufferingStream
{
}
#typev minwavert_cpp8623 475 "%0CKeywordDetector::InitBufferingStream: LAB Session is not in armed state,  state:%10!d!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::InitBufferingStream
{
m_KeywordDetectorState, ItemLong -- 10
}
#typev minwavert_cpp8619 474 "%0CKeywordDetector::InitBufferingStream: Entering Method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::InitBufferingStream
{
}
#typev minwavert_cpp2900 119 "%0CMiniportWaveRT::IsFormatSupported: Leaving method %10!s!,  status = 0x%11!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::IsFormatSupported
{
m_pMiniportPair->WaveName, ItemWString -- 10
ntStatus, ItemLong -- 11
}
#typev minwavert_cpp2894 118 "%0CMiniportWaveRT::IsFormatSupported: Format not supported for given pin Filter %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::IsFormatSupported
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp2887 117 "%0CMiniportWaveRT::IsFormatSupported: Format supported in Pin format list Filter %10!s!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::IsFormatSupported
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp2868 116 "%0CMiniportWaveRT::IsFormatSupported: Pin does not support signal processing modes Filter %10!s!, Pin %11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::IsFormatSupported
{
m_pMiniportPair->WaveName, ItemWString -- 10
_ulPin, ItemLong -- 11
}
#typev minwavert_cpp2863 115 "%0CMiniportWaveRT::IsFormatSupported: Format not supported Filter for given mode! %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::IsFormatSupported
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp2856 114 "%0CMiniportWaveRT::IsFormatSupported: Format supported for given mode! Filter %10!s!, Count %11!d! status 0x%12!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::IsFormatSupported
{
m_pMiniportPair->WaveName, ItemWString -- 10
i, ItemLong -- 11
ntStatus, ItemLong -- 12
}
#typev minwavert_cpp2852 113 "%0CMiniportWaveRT::IsFormatSupported: Validated Default mode Filter %10!s!, Count %11!d! status 0x%12!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::IsFormatSupported
{
m_pMiniportPair->WaveName, ItemWString -- 10
i, ItemLong -- 11
ntStatus, ItemLong -- 12
}
#typev minwavert_cpp2842 112 "%0CMiniportWaveRT::IsFormatSupported: Unsupported mode Filter %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::IsFormatSupported
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp2815 111 "%0Mode Param: %10!08X!-%11!04X!-%12!04X!-%13!02X!%14!02X!-%15!02X!%16!02X!%17!02X!%18!02X!%19!02X!%20!02X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::IsFormatSupported
{
_pSignalProcessingMode->Data1, ItemLong -- 10
_pSignalProcessingMode->Data2, ItemLong -- 11
_pSignalProcessingMode->Data3, ItemLong -- 12
_pSignalProcessingMode->Data4[0], ItemLong -- 13
_pSignalProcessingMode->Data4[1], ItemLong -- 14
_pSignalProcessingMode->Data4[2], ItemLong -- 15
_pSignalProcessingMode->Data4[3], ItemLong -- 16
_pSignalProcessingMode->Data4[4], ItemLong -- 17
_pSignalProcessingMode->Data4[5], ItemLong -- 18
_pSignalProcessingMode->Data4[6], ItemLong -- 19
_pSignalProcessingMode->Data4[7], ItemLong -- 20
}
#typev minwavert_cpp2814 110 "%0CMiniportWaveRT::IsFormatSupported: Pin supports signal processing modes Filter %10!s!, Pin %11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::IsFormatSupported
{
m_pMiniportPair->WaveName, ItemWString -- 10
_ulPin, ItemLong -- 11
}
#typev minwavert_cpp2768 109 "%0CMiniportWaveRT::IsFormatSupported: Entering method %10!s!, Pin %11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::IsFormatSupported
{
m_pMiniportPair->WaveName, ItemWString -- 10
_ulPin, ItemLong -- 11
}
#typev minwavert_cpp7077 342 "%0CMiniportWaveRT::IsLowPowerKwsAllowed Leaving Method LowPowerKwsAllowed %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::IsLowPowerKwsAllowed
{
bLowPowerKwsAllowed, ItemLong -- 10
}
#typev minwavert_cpp7067 341 "%0CMiniportWaveRT::IsLowPowerKwsAllowed: Entering method States: Ac Power %10!d!, Display %11!d!, Offload %12!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::IsLowPowerKwsAllowed
{
m_pKeywordDetector->m_bAcPowerState, ItemLong -- 10
m_pKeywordDetector->m_bDisplayState, ItemLong -- 11
m_pKeywordDetector->m_bOffloadPlaybackState, ItemLong -- 12
}
#typev minwavert_cpp9055 513 "%0:CKeywordDetector::KeywordDetectorCB: Leaving Method - ntStatus :  0x%10!x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::KeywordDetectorCB
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp9022 508 "%0CKeywordDetector::KeywordDetectorCB:, failed, pPayload(NULL) or Size is (Zero) " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCLISTEN_ERROR FUNC=CKeywordDetector::KeywordDetectorCB
{
}
#typev minwavert_cpp9036 510 "%0CKeywordDetector::KeywordDetectorCB: HandleDetectionCallBack failed with status 0x%10!x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::KeywordDetectorCB
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp9044 511 "%0CKeywordDetector::KeywordDetectorCB: HandleBuffReady failed with status 0x%10!x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::KeywordDetectorCB
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp9050 512 "%0CKeywordDetector::KeywordDetectorCB: Invalid Detector Type " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::KeywordDetectorCB
{
}
#typev minwavert_cpp9027 509 "%0CKeywordDetector::KeywordDetectorCB: detectorType is 0x%10!x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::KeywordDetectorCB
{
detectorType, ItemLong -- 10
}
#typev minwavert_cpp9015 507 "%0CKeywordDetector::KeywordDetectorCB: keywordDetector is NULL " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::KeywordDetectorCB
{
}
#typev minwavert_cpp9012 506 "%0:CKeywordDetector::KeywordDetectorCB: Entering Method - Detector Type  0x%10!x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::KeywordDetectorCB
{
detectorType, ItemLong -- 10
}
#typev minwavert_cpp4373 402 "%0CKeywordDetector::GetPowerType: %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::KeywordDetectorCB
{
m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp4367 218 "%0CMiniportWaveRT::DetectionCallBack: contextData is NULL" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::KeywordDetectorCB
{
}
#typev minwavert_cpp8931 499 "%0:CKeywordDetector::KeywordDetectorEventWorkerThread: Leaving Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::KeywordDetectorEventWorkerThread
{
}
#typev minwavert_cpp8898 495 "%0:CKeywordDetector::KeywordDetectorEventWorkerThread: StopBufferingStream status = 0x%10!x! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::KeywordDetectorEventWorkerThread
{
Status, ItemLong -- 10
}
#typev minwavert_cpp8908 497 "%0:CKeywordDetector::KeywordDetectorEventWorkerThread: Initializing LAB Stream Failed status = 0x%10!x! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::KeywordDetectorEventWorkerThread
{
Status, ItemLong -- 10
}
#typev minwavert_cpp8904 496 "%0:CKeywordDetector::KeywordDetectorEventWorkerThread: Run Event is triggered " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::KeywordDetectorEventWorkerThread
{
}
#typev minwavert_cpp8919 498 "%0:CKeywordDetector::KeywordDetectorEventWorkerThread: Read Event is triggered " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::KeywordDetectorEventWorkerThread
{
}
#typev minwavert_cpp8864 494 "%0:CKeywordDetector::KeywordDetectorEventWorkerThread: Entering Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::KeywordDetectorEventWorkerThread
{
}
#typev minwavert_cpp1928 83 "%0CMiniportWaveRT::MiniportStreamCreator: Leaving method,  status = 0x%10!08X!." //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::MiniportStreamCreator
{
ntStatus, ItemLong -- 10
}
// PDB:  qcaudminiport850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev minwavert_cpp1867 82 "%0CMiniportWaveRT::MiniportStreamCreator: Entering method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::MiniportStreamCreator
{
}
#typev minwavert_cpp2044 86 "%0CMiniportWaveRT::NonDelegatingQueryInterface: Leaving method,  status = STATUS_INVALID_PARAMETER" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::NonDelegatingQueryInterface
{
}
#typev minwavert_cpp2039 85 "%0CMiniportWaveRT::NonDelegatingQueryInterface: Leaving method,  status = STATUS_SUCCESS" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::NonDelegatingQueryInterface
{
}
#typev minwavert_cpp1988 84 "%0CMiniportWaveRT::NonDelegatingQueryInterface: Entering method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::NonDelegatingQueryInterface
{
}
#typev minwavert_cpp3977 202 "%0CMiniportWaveRT::OverrideLoopbackStreamMute: Leaving method,  status = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::OverrideLoopbackStreamMute
{
ntStatus, ItemLong -- 10
}
// PDB:  qcaudminiport850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev minwavert_cpp3967 201 "%0CMiniportWaveRT::OverrideLoopbackStreamMute: Failed for Stream %10!d!,  status = 0x%11!08X!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::OverrideLoopbackStreamMute
{
i, ItemLong -- 10
ntStatus, ItemLong -- 11
}
#typev minwavert_cpp3957 200 "%0CMiniportWaveRT::OverrideLoopbackStreamMute: Entering method %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::OverrideLoopbackStreamMute
{
bMute, ItemLong -- 10
}
#typev minwavert_cpp7142 351 "%0CMiniportWaveRT::PerformKwsTransition: Leaving Method ntStatus 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PerformKwsTransition
{
status, ItemLong -- 10
}
#typev minwavert_cpp7137 350 "%0CKeywordDetector::PerformKwsTransition: Failed to enable SVA, PowerType %10!d! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PerformKwsTransition
{
m_pKeywordDetector->m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp7133 349 "%0CMiniportWaveRT::PerformKwsTransition: Enabling SVA %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PerformKwsTransition
{
m_pKeywordDetector->m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp7125 348 "%0CKeywordDetector::PerformKwsTransition: Failed to disable SVA, PowerType %10!d! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PerformKwsTransition
{
m_pKeywordDetector->m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp7121 347 "%0CMiniportWaveRT::PerformKwsTransition: Disabling SVA %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PerformKwsTransition
{
m_pKeywordDetector->m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp7116 346 "%0CMiniportWaveRT::PerformKwsTransition: Power type has not changed; do not transition %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PerformKwsTransition
{
m_pKeywordDetector->m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp7110 345 "%0CMiniportWaveRT::PerformKwsTransition: SVA is not enabled; do not transition" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PerformKwsTransition
{
}
#typev minwavert_cpp7104 344 "%0CMiniportWaveRT::PerformKwsTransition: SVA LAB session is active; do not transition" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PerformKwsTransition
{
}
#typev minwavert_cpp7099 343 "%0CMiniportWaveRT::PerformKwsTransition: Entering method Change powerType %10!d! to %11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PerformKwsTransition
{
m_pKeywordDetector->m_CurrentPowerType, ItemLong -- 10
m_pKeywordDetector->m_CachedPowerType, ItemLong -- 11
}
#typev minwavert_cpp9073 515 "%0Leaving CMiniportWaveRT::PowerChangeNotify powerstate  %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::PowerChangeNotify
{
PowerState.DeviceState, ItemLong -- 10
}
#typev minwavert_cpp9071 514 "%0Entering CMiniportWaveRT::PowerChangeNotify powerstate %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::PowerChangeNotify
{
PowerState.DeviceState, ItemLong -- 10
}
#typev minwavert_cpp1794 70 "%0Specifier: %10!08X!-%11!04X!-%12!04X!-%13!02X!%14!02X!-%15!02X!%16!02X!%17!02X!%18!02X!%19!02X!%20!02X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintKsDataFormat
{
_pKsDataFormat->Specifier.Data1, ItemLong -- 10
_pKsDataFormat->Specifier.Data2, ItemLong -- 11
_pKsDataFormat->Specifier.Data3, ItemLong -- 12
_pKsDataFormat->Specifier.Data4[0], ItemLong -- 13
_pKsDataFormat->Specifier.Data4[1], ItemLong -- 14
_pKsDataFormat->Specifier.Data4[2], ItemLong -- 15
_pKsDataFormat->Specifier.Data4[3], ItemLong -- 16
_pKsDataFormat->Specifier.Data4[4], ItemLong -- 17
_pKsDataFormat->Specifier.Data4[5], ItemLong -- 18
_pKsDataFormat->Specifier.Data4[6], ItemLong -- 19
_pKsDataFormat->Specifier.Data4[7], ItemLong -- 20
}
#typev minwavert_cpp1782 69 "%0SubFormat: %10!08X!-%11!04X!-%12!04X!-%13!02X!%14!02X!-%15!02X!%16!02X!%17!02X!%18!02X!%19!02X!%20!02X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintKsDataFormat
{
_pKsDataFormat->SubFormat.Data1, ItemLong -- 10
_pKsDataFormat->SubFormat.Data2, ItemLong -- 11
_pKsDataFormat->SubFormat.Data3, ItemLong -- 12
_pKsDataFormat->SubFormat.Data4[0], ItemLong -- 13
_pKsDataFormat->SubFormat.Data4[1], ItemLong -- 14
_pKsDataFormat->SubFormat.Data4[2], ItemLong -- 15
_pKsDataFormat->SubFormat.Data4[3], ItemLong -- 16
_pKsDataFormat->SubFormat.Data4[4], ItemLong -- 17
_pKsDataFormat->SubFormat.Data4[5], ItemLong -- 18
_pKsDataFormat->SubFormat.Data4[6], ItemLong -- 19
_pKsDataFormat->SubFormat.Data4[7], ItemLong -- 20
}
#typev minwavert_cpp1770 68 "%0MajorFormat: %10!08X!-%11!04X!-%12!04X!-%13!02X!%14!02X!-%15!02X!%16!02X!%17!02X!%18!02X!%19!02X!%20!02X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintKsDataFormat
{
_pKsDataFormat->MajorFormat.Data1, ItemLong -- 10
_pKsDataFormat->MajorFormat.Data2, ItemLong -- 11
_pKsDataFormat->MajorFormat.Data3, ItemLong -- 12
_pKsDataFormat->MajorFormat.Data4[0], ItemLong -- 13
_pKsDataFormat->MajorFormat.Data4[1], ItemLong -- 14
_pKsDataFormat->MajorFormat.Data4[2], ItemLong -- 15
_pKsDataFormat->MajorFormat.Data4[3], ItemLong -- 16
_pKsDataFormat->MajorFormat.Data4[4], ItemLong -- 17
_pKsDataFormat->MajorFormat.Data4[5], ItemLong -- 18
_pKsDataFormat->MajorFormat.Data4[6], ItemLong -- 19
_pKsDataFormat->MajorFormat.Data4[7], ItemLong -- 20
}
#typev minwavert_cpp1769 67 "%0SampleSize: 0x%10!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintKsDataFormat
{
_pKsDataFormat->SampleSize, ItemLong -- 10
}
#typev minwavert_cpp1768 66 "%0Flags: 0x%10!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintKsDataFormat
{
_pKsDataFormat->Flags, ItemLong -- 10
}
#typev minwavert_cpp1767 65 "%0FormatSize: 0x%10!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintKsDataFormat
{
_pKsDataFormat->FormatSize, ItemLong -- 10
}
#typev minwavert_cpp1656 55 "%0CMiniportWaveRT::PrintPinDataRange Invalid StreamType" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::PrintPinDataRange
{
}
#typev minwavert_cpp1669 56 "%0CMiniportWaveRT::PrintPinDataRange PinId %10!d! DataRangeIndex %11!d! Max/Min SR 0x%12!08X! 0x%13!08X!, Max/Min bps 0x%14!08X! 0x%15!08X!, Max ch 0x%16!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::PrintPinDataRange
{
PinId, ItemLong -- 10
i, ItemLong -- 11
TmpKsDataRange_Audio->MaximumSampleFrequency, ItemLong -- 12
TmpKsDataRange_Audio->MinimumSampleFrequency, ItemLong -- 13
TmpKsDataRange_Audio->MaximumBitsPerSample, ItemLong -- 14
TmpKsDataRange_Audio->MinimumBitsPerSample, ItemLong -- 15
TmpKsDataRange_Audio->MaximumChannels, ItemLong -- 16
}
#typev minwavert_cpp1651 54 "%0CMiniportWaveRT::PrintPinDataRange KWS" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::PrintPinDataRange
{
}
#typev minwavert_cpp1646 53 "%0CMiniportWaveRT::PrintPinDataRange host capture" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::PrintPinDataRange
{
}
#typev minwavert_cpp1641 52 "%0CMiniportWaveRT::PrintPinDataRange loopback" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::PrintPinDataRange
{
}
#typev minwavert_cpp1636 51 "%0CMiniportWaveRT::PrintPinDataRange offload" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::PrintPinDataRange
{
}
#typev minwavert_cpp1631 50 "%0CMiniportWaveRT::PrintPinDataRange Host render" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::PrintPinDataRange
{
}
#typev minwavert_cpp1622 49 "%0Entering CMiniportWaveRT::PrintPinDataRange streamType %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::PrintPinDataRange
{
_streamType, ItemLong -- 10
}
#typev minwavert_cpp1732 64 "%0 DeviceFormatsAndModes[%10!d!]:NodeOrPinWaveFormatsCount[%11!d!]: " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFilterFormats
{
i, ItemLong -- 10
j, ItemLong -- 11
}
#typev minwavert_cpp1729 63 "%0DeviceFormatsAndModes[%10!d!].NodeOrPinWaveFormatsCount %11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFilterFormats
{
i, ItemLong -- 10
m_DeviceFormatsAndModes[i].NodeOrPinWaveFormatsCount, ItemLong -- 11
}
#typev minwavert_cpp1721 62 "%0DeviceFormatsAndModes[%10!d!].ModeAndDefaultFormat[%11!d!].DefaultFormat" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFilterFormats
{
i, ItemLong -- 10
j, ItemLong -- 11
}
#typev minwavert_cpp1715 61 "%0DeviceFormatsAndModes[%10!d!]:ModeAndDefaultFormatCount[%11!d!]:WaveFormatCount[%12!d!]: " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFilterFormats
{
i, ItemLong -- 10
j, ItemLong -- 11
k, ItemLong -- 12
}
#typev minwavert_cpp1712 60 "%0DeviceFormatsAndModes[%10!d!].ModeAndDefaultFormat[%11!d!].WaveFormatCount %12!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFilterFormats
{
i, ItemLong -- 10
j, ItemLong -- 11
m_DeviceFormatsAndModes[i].ModeAndDefaultFormat[j].WaveFormatCount, ItemLong -- 12
}
#typev minwavert_cpp1698 59 "%0Mode: %10!08X!-%11!04X!-%12!04X!-%13!02X!%14!02X!-%15!02X!%16!02X!%17!02X!%18!02X!%19!02X!%20!02X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFilterFormats
{
m_DeviceFormatsAndModes[i].ModeAndDefaultFormat[j].Mode.Data1, ItemLong -- 10
m_DeviceFormatsAndModes[i].ModeAndDefaultFormat[j].Mode.Data2, ItemLong -- 11
m_DeviceFormatsAndModes[i].ModeAndDefaultFormat[j].Mode.Data3, ItemLong -- 12
m_DeviceFormatsAndModes[i].ModeAndDefaultFormat[j].Mode.Data4[0], ItemLong -- 13
m_DeviceFormatsAndModes[i].ModeAndDefaultFormat[j].Mode.Data4[1], ItemLong -- 14
m_DeviceFormatsAndModes[i].ModeAndDefaultFormat[j].Mode.Data4[2], ItemLong -- 15
m_DeviceFormatsAndModes[i].ModeAndDefaultFormat[j].Mode.Data4[3], ItemLong -- 16
m_DeviceFormatsAndModes[i].ModeAndDefaultFormat[j].Mode.Data4[4], ItemLong -- 17
m_DeviceFormatsAndModes[i].ModeAndDefaultFormat[j].Mode.Data4[5], ItemLong -- 18
m_DeviceFormatsAndModes[i].ModeAndDefaultFormat[j].Mode.Data4[6], ItemLong -- 19
m_DeviceFormatsAndModes[i].ModeAndDefaultFormat[j].Mode.Data4[7], ItemLong -- 20
}
#typev minwavert_cpp1697 58 "%0DeviceFormatsAndModes[%10!d!]:ModeAndDefaultFormatCount[%11!d!]: " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFilterFormats
{
i, ItemLong -- 10
j, ItemLong -- 11
}
#typev minwavert_cpp1693 57 "%0DeviceFormatsAndModes[%10!d!].ModeAndDefaultFormatCount: %11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFilterFormats
{
i, ItemLong -- 10
m_DeviceFormatsAndModes[i].ModeAndDefaultFormatCount, ItemLong -- 11
}
#typev minwavert_cpp1819 77 "%0    cbSize: 0x%10!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFormatEx
{
pWaveFmt->cbSize, ItemLong -- 10
}
#typev minwavert_cpp1818 76 "%0    wBitsPerSample: 0x%10!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFormatEx
{
pWaveFmt->wBitsPerSample, ItemLong -- 10
}
#typev minwavert_cpp1817 75 "%0    nBlockAlign: 0x%10!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFormatEx
{
pWaveFmt->nBlockAlign, ItemLong -- 10
}
#typev minwavert_cpp1816 74 "%0    nAvgBytesPerSec: 0x%10!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFormatEx
{
pWaveFmt->nAvgBytesPerSec, ItemLong -- 10
}
#typev minwavert_cpp1815 73 "%0    nSamplesPerSec: 0x%10!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFormatEx
{
pWaveFmt->nSamplesPerSec, ItemLong -- 10
}
#typev minwavert_cpp1814 72 "%0    nChannels: 0x%10!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFormatEx
{
pWaveFmt->nChannels, ItemLong -- 10
}
#typev minwavert_cpp1813 71 "%0    wFormatTag: 0x%10!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFormatEx
{
pWaveFmt->wFormatTag, ItemLong -- 10
}
#typev minwavert_cpp1837 81 "%0        SubFormat: %10!08X!-%11!04X!-%12!04X!-%13!02X!%14!02X!-%15!02X!%16!02X!%17!02X!%18!02X!%19!02X!%20!02X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFormatExt
{
pWaveFmtExt->SubFormat.Data1, ItemLong -- 10
pWaveFmtExt->SubFormat.Data2, ItemLong -- 11
pWaveFmtExt->SubFormat.Data3, ItemLong -- 12
pWaveFmtExt->SubFormat.Data4[0], ItemLong -- 13
pWaveFmtExt->SubFormat.Data4[1], ItemLong -- 14
pWaveFmtExt->SubFormat.Data4[2], ItemLong -- 15
pWaveFmtExt->SubFormat.Data4[3], ItemLong -- 16
pWaveFmtExt->SubFormat.Data4[4], ItemLong -- 17
pWaveFmtExt->SubFormat.Data4[5], ItemLong -- 18
pWaveFmtExt->SubFormat.Data4[6], ItemLong -- 19
pWaveFmtExt->SubFormat.Data4[7], ItemLong -- 20
}
#typev minwavert_cpp1836 80 "%0        dwChannelMask: 0x%10!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFormatExt
{
pWaveFmtExt->dwChannelMask, ItemLong -- 10
}
#typev minwavert_cpp1835 79 "%0        Samples.wSamplesPerBlock: 0x%10!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFormatExt
{
pWaveFmtExt->Samples.wSamplesPerBlock, ItemLong -- 10
}
#typev minwavert_cpp1834 78 "%0        Samples.wValidBitsPerSample: 0x%10!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PrintWaveFormatExt
{
pWaveFmtExt->Samples.wValidBitsPerSample, ItemLong -- 10
}
#typev minwavert_cpp3834 194 "%0CMiniportWaveRT::PropertyHandlerEffectListRequest: Leaving method,  status = STATUS_INVALID_DEVICE_REQUEST" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerEffectListRequest
{
}
#typev minwavert_cpp3830 193 "%0CMiniportWaveRT::PropertyHandlerEffectListRequest: Leaving method,  status = STATUS_SUCCESS" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerEffectListRequest
{
}
#typev minwavert_cpp3815 192 "%0CMiniportWaveRT::PropertyHandlerEffectListRequest: Leaving method,  status = STATUS_BUFFER_TOO_SMALL" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerEffectListRequest
{
}
#typev minwavert_cpp3810 191 "%0CMiniportWaveRT::PropertyHandlerEffectListRequest: Leaving method,  status = STATUS_BUFFER_OVERFLOW" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerEffectListRequest
{
}
#typev minwavert_cpp3792 190 "%0CMiniportWaveRT::PropertyHandlerEffectListRequest: Leaving method,  status = STATUS_INVALID_PARAMETER" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerEffectListRequest
{
}
#typev minwavert_cpp3785 189 "%0CMiniportWaveRT::PropertyHandlerEffectListRequest: Leaving method,  status = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerEffectListRequest
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp3775 188 "%0CMiniportWaveRT::PropertyHandlerEffectListRequest: Entering method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerEffectListRequest
{
}
#typev minwavert_cpp3675 187 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: Leaving method %10!s!,  status = 0x%11!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
m_pMiniportPair->WaveName, ItemWString -- 10
ntStatus, ItemLong -- 11
}
#typev minwavert_cpp3514 173 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: Unsupported pin %10!d!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
kspPin->PinId, ItemLong -- 10
}
#typev minwavert_cpp3520 174 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: Invalid pin %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
kspPin->PinId, ItemLong -- 10
}
#typev minwavert_cpp3621 181 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: RtlULongAdd failed" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
}
#typev minwavert_cpp3667 186 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: KSPROPERTY_TYPE_GET DataFormat:" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
}
#typev minwavert_cpp3652 185 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: Invalid property request" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
}
#typev minwavert_cpp3644 184 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: status = STATUS_BUFFER_TOO_SMALL" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
}
#typev minwavert_cpp3638 183 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: status = STATUS_BUFFER_OVERFLOW" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
}
#typev minwavert_cpp3629 182 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: cbMinSize = 0" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
}
#typev minwavert_cpp3612 180 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: Failed cbItemsList > MAXULONG" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
}
#typev minwavert_cpp3598 179 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: Failed Mode / DefaultFormat not found" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
}
#typev minwavert_cpp3569 178 "%0Mode Param: %10!08X!-%11!04X!-%12!04X!-%13!02X!%14!02X!-%15!02X!%16!02X!%17!02X!%18!02X!%19!02X!%20!02X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
signalProcessingMode.Data1, ItemLong -- 10
signalProcessingMode.Data2, ItemLong -- 11
signalProcessingMode.Data3, ItemLong -- 12
signalProcessingMode.Data4[0], ItemLong -- 13
signalProcessingMode.Data4[1], ItemLong -- 14
signalProcessingMode.Data4[2], ItemLong -- 15
signalProcessingMode.Data4[3], ItemLong -- 16
signalProcessingMode.Data4[4], ItemLong -- 17
signalProcessingMode.Data4[5], ItemLong -- 18
signalProcessingMode.Data4[6], ItemLong -- 19
signalProcessingMode.Data4[7], ItemLong -- 20
}
#typev minwavert_cpp3565 177 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: GetAttributesFromAttributeList failed 0x%10!08X!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp3557 176 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: KSPROPERTY_TYPE_GET PinId %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
kspPin->PinId, ItemLong -- 10
}
#typev minwavert_cpp3530 175 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: KSPROPERTY_TYPE_BASICSUPPORT" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
}
#typev minwavert_cpp3466 172 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: Cannot event store KSP_PIN" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
}
#typev minwavert_cpp3457 171 "%0CMiniportWaveRT::PropertyHandlerProposedFormat2: Entering method %10!s!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat2
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp3431 170 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: Leaving method %10!s!,  status = 0x%11!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
m_pMiniportPair->WaveName, ItemWString -- 10
ntStatus, ItemLong -- 11
}
#typev minwavert_cpp3424 169 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: Default / Raw mode does not support requested format, status = 0x%10!08X!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp3418 168 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: Setting new format %10!s! PinID = %11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
m_pMiniportPair->WaveName, ItemWString -- 10
kspPin->PinId, ItemLong -- 11
}
#typev minwavert_cpp3414 167 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: Loopback pin " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
}
#typev minwavert_cpp3409 166 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: ValidateStreamCreate failed Leaving method %10!s!,  status = 0x%11!08X!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
m_pMiniportPair->WaveName, ItemWString -- 10
ntStatus, ItemLong -- 11
}
#typev minwavert_cpp3403 165 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_SET PinID = %10!d! Default OR Raw mode supports requested format" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
kspPin->PinId, ItemLong -- 10
}
#typev minwavert_cpp3397 164 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_SET PinID = %10!d! Default mode supports requested format" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
kspPin->PinId, ItemLong -- 10
}
#typev minwavert_cpp3392 163 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_SET PinID = %10!d! Raw mode does not support requested format" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
kspPin->PinId, ItemLong -- 10
}
#typev minwavert_cpp3375 160 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_SET PinID = %10!d! IsFormatSupported returns status = 0x%11!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
kspPin->PinId, ItemLong -- 10
ntStatus, ItemLong -- 11
}
#typev minwavert_cpp3388 162 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_SET PinID = %10!d! Raw mode supports requested format" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
kspPin->PinId, ItemLong -- 10
}
#typev minwavert_cpp3383 161 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_SET PinID = %10!d! Default mode does not support requested format" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
kspPin->PinId, ItemLong -- 10
}
#typev minwavert_cpp3356 159 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_SET PinID = %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
kspPin->PinId, ItemLong -- 10
}
#typev minwavert_cpp3349 158 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_GET Unsupported pin without modes PinID = %10!d!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
kspPin->PinId, ItemLong -- 10
}
#typev minwavert_cpp3333 157 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_GET No mode support PinID = %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
kspPin->PinId, ItemLong -- 10
}
#typev minwavert_cpp3319 155 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_GET returning data format Default / raw mode" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
}
#typev minwavert_cpp3309 154 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_GET Raw mode supported" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
}
#typev minwavert_cpp3295 153 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_GET Default mode supported" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
}
#typev minwavert_cpp3282 152 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_GET Speech mode supported" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
}
#typev minwavert_cpp3328 156 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_GET Default / Raw mode not supported" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
}
#typev minwavert_cpp3231 151 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_GET PinID = %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
kspPin->PinId, ItemLong -- 10
}
#typev minwavert_cpp3224 150 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: Leaving method %10!s!,  status = STATUS_BUFFER_TOO_SMALL" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp3216 149 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: status = STATUS_BUFFER_OVERFLOW" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
}
#typev minwavert_cpp3197 147 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: Invalid Pin %10!d!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
kspPin->PinId, ItemLong -- 10
}
#typev minwavert_cpp3191 146 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: Invalid Pin - Bridge Pin %10!d!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
kspPin->PinId, ItemLong -- 10
}
#typev minwavert_cpp3207 148 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: KSPROPERTY_TYPE_BASICSUPPORT " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
}
#typev minwavert_cpp3168 145 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: Cannot event store KSP_PIN" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
}
#typev minwavert_cpp3161 144 "%0CMiniportWaveRT::PropertyHandlerProposedFormat: Entering method %10!s!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRT::PropertyHandlerProposedFormat
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp3921 197 "%0CMiniportWaveRT::PropertyHandlerStreamRequest: Leaving method,  status = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerStreamRequest
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp3891 196 "%0CMiniportWaveRT::PropertyHandlerStreamRequest: Pin type 0x%10!8x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerStreamRequest
{
uPin, ItemLong -- 10
}
#typev minwavert_cpp3849 195 "%0CMiniportWaveRT::PropertyHandlerStreamRequest: Entering method DeviceType %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::PropertyHandlerStreamRequest
{
m_pMiniportPair->DeviceType, ItemLong -- 10
}
#typev minwavert_cpp4561 222 "%0PropertyHandler_WaveFilter GetStreamPeakMeter. " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=PropertyHandler_WaveFilter
{
}
#typev minwavert_cpp4539 221 "%0CMiniportWaveRT::PropertyHandler_WaveFilter Failed to get peakmeter volume provider " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=PropertyHandler_WaveFilter
{
}
#typev minwavert_cpp1172 35 "%0CMiniportWaveRT::QCInit Leaving method,  status = 0x%10!08X!." //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::QCInit
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp1158 34 "%0CMiniportWaveRT::Init RegisterForPowerStateNotification failed" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::QCInit
{
}
// PDB:  qcaudminiport850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev minwavert_cpp1098 269 "%0Leaving CMiniportWaveRT::ReadDefaultDeviceVolumeFromRegistry" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::QCInit
{
}
#typev minwavert_cpp1098 268 "%0CMiniportWaveRT::ReadDefaultDeviceVolumeFromRegistry ERROR reading mode from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::QCInit
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp1098 267 "%0Entering CMiniportWaveRT::ReadDefaultDeviceVolumeFromRegistry" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::QCInit
{
}
#typev minwavert_cpp1090 33 "%0CMiniportWaveRT:: QCInit: ReadVolumeSteppings failed " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::QCInit
{
}
// PDB:  qcaudminiport850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev minwavert_cpp1071 31 "%0CMiniportWaveRT:: QCInit: Failed to allocate memory to m_pDeviceHelpers " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::QCInit
{
}
#typev minwavert_cpp1052 30 "%0CMiniportWaveRT:: QCInit: Failed to allocate memory to m_plVolumeLevel " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::QCInit
{
}
#typev minwavert_cpp1025 28 "%0CMiniportWaveRT:: QCInit: Failed to allocate memory to m_pKeywordDetector " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::QCInit
{
}
#typev minwavert_cpp1043 29 "%0CMiniportWaveRT:: QCInit: Failed to allocate memory to m_pbMuted " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::QCInit
{
}
#typev minwavert_cpp1020 27 "%0CMiniportWaveRT:: QCInit: Keyword Detector Initializaiton failed : Status: 0x%10!x!  " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::QCInit
{
ntListenStatus, ItemLong -- 10
}
#typev minwavert_cpp1017 335 "%0CKeywordDetector::Init: Leaving Method ntStatus 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::QCInit
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp1017 334 "%0CKeywordDetector::Init: Setting Default powerType to %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::QCInit
{
DefaultPowerType, ItemLong -- 10
}
#typev minwavert_cpp1017 333 "%0CKeywordDetector::Init: m_pListenManager is NULL " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::QCInit
{
}
#typev minwavert_cpp1017 332 "%0CKeywordDetector::Init: Entering Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::QCInit
{
}
#typev minwavert_cpp1007 26 "%0CMiniportWaveRT::QCInit,  WdfWorkItemCreate failed status = 0x%10!08x!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::QCInit
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp990 25 "%0CMiniportWaveRT:: QCInit: Listen registry info not found for the endpoint Filter: %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::QCInit
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp984 24 "%0CMiniportWaveRT:: QCInit: Listen Manager is not initialized: " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::QCInit
{
}
#typev minwavert_cpp820 22 "%0CMiniportWaveRT::QCInit Failed to get Toplogy filter handle" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::QCInit
{
}
#typev minwavert_cpp814 21 "%0CMiniportWaveRT::QCInit:: GetFilters Failed to get ToplogyMiniport" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::QCInit
{
}
#typev minwavert_cpp788 20 "%0CMiniportWaveRT::QCInit Entering method %10!s!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::QCInit
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp1374 38 "%0CMiniportWaveRT::QCNewStream: Leaving method %10!s!,  status = 0x%11!08X!." //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::QCNewStream
{
m_pMiniportPair->WaveName, ItemWString -- 10
ntStatus, ItemLong -- 11
}
#typev minwavert_cpp1272 37 "%0CMiniportWaveRT::QCNewStream: filter %10!s!, Pin ID %11!d!, mode %12!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::QCNewStream
{
m_pMiniportPair->WaveName, ItemWString -- 10
Pin, ItemLong -- 11
mode, ItemLong -- 12
}
#typev minwavert_cpp1239 36 "%0CMiniportWaveRT::QCNewStream: Entering method %10!s!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::QCNewStream
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
#typev minwavert_cpp8843 493 "%0:CKeywordDetector::QueueFreeBuffertoHardware: Leaving Method - Status: 0x%10!x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::QueueFreeBuffertoHardware
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8806 491 "%0:CKeywordDetector::QueueFreeBuffertoHardware: Internal LAB Overflow - Moving to Stop state " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::QueueFreeBuffertoHardware
{
}
#typev minwavert_cpp8835 492 "%0CKeywordDetector::QueueFreeBuffertoHardware: Queue to Buffer failed with status 0x%10!x! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::QueueFreeBuffertoHardware
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8790 490 "%0CKeywordDetector::QueueFreeBuffertoHardware: Invalid InitSessionIndex, PowerType %10!d! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::QueueFreeBuffertoHardware
{
powerType, ItemLong -- 10
}
#typev minwavert_cpp8784 489 "%0:CKeywordDetector::QueueFreeBuffertoHardware: Entering Method %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::QueueFreeBuffertoHardware
{
powerType, ItemLong -- 10
}
#typev minwavert_cpp8781 402 "%0CKeywordDetector::GetPowerType: %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::QueueFreeBuffertoHardware
{
m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp8167 441 "%0CKeywordDetector::QueueKwsTransitionTask: Leaving Method ntStatus 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::QueueKwsTransitionTask
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8159 440 "%0CKeywordDetector::QueueKwsTransitionTask: Wait for SyncEvent" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::QueueKwsTransitionTask
{
}
#typev minwavert_cpp8134 439 "%0CMiniportWaveRT::QueueKwsTransitionTask: unable to allocate pKwsWorkTask->pSyncEvt, out of memory" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::QueueKwsTransitionTask
{
}
#typev minwavert_cpp8120 438 "%0CMiniportWaveRT::QueueKwsTransitionTask: unable to allocate KwsTransitionWorkTask, out of memory" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::QueueKwsTransitionTask
{
}
#typev minwavert_cpp8112 437 "%0CKeywordDetector::QueueKwsTransitionTask: Entering Method Action %10!d!, Sync %11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::QueueKwsTransitionTask
{
Action, ItemLong -- 10
bSynchronous, ItemLong -- 11
}
#typev minwavert_cpp9202 521 "%0Leaving CMiniportWaveRT::ReadBufferConfigFromRegistry status = 0x%10!08x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadBufferConfigFromRegistry
{
status, ItemLong -- 10
}
#typev minwavert_cpp9186 520 "%0CMiniportWaveRT::ReadBufferConfigFromRegistry After: Render = %10!u!,  RenderRaw = %11!u!,  RenderDefault = %12!u!,  RenderCommunications = %13!u!,                                                     RenderNotification = %14!u!, RenderMedia = %15!u!, RenderMovie = %16!u!, Capture = %17!u!,                                                      CaptureRaw = %18!u!, CaptureDefault = %19!u!, CaptureCommunications = %20!u!, CaptureSpeech = %21!u! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::ReadBufferConfigFromRegistry
{
m_MinBufferSizes.Render, ItemLong -- 10
m_MinBufferSizes.RenderRaw, ItemLong -- 11
m_MinBufferSizes.RenderDefault, ItemLong -- 12
m_MinBufferSizes.RenderCommunications, ItemLong -- 13
m_MinBufferSizes.RenderNotification, ItemLong -- 14
m_MinBufferSizes.RenderMedia, ItemLong -- 15
m_MinBufferSizes.RenderMovie, ItemLong -- 16
m_MinBufferSizes.Capture, ItemLong -- 17
m_MinBufferSizes.CaptureRaw, ItemLong -- 18
m_MinBufferSizes.CaptureDefault, ItemLong -- 19
m_MinBufferSizes.CaptureCommunications, ItemLong -- 20
m_MinBufferSizes.CaptureSpeech, ItemLong -- 21
}
#typev minwavert_cpp9154 519 "%0CMiniportWaveRT::ReadBufferConfigFromRegistry Before: Render = %10!u!,  RenderRaw = %11!u!,  RenderDefault = %12!u!,  RenderCommunications = %13!u!,                                                     RenderNotification = %14!u!, RenderMedia = %15!u!, RenderMovie = %16!u!, Capture = %17!u!,                                                      CaptureRaw = %18!u!, CaptureDefault = %19!u!, CaptureCommunications = %20!u!, CaptureSpeech = %21!u! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::ReadBufferConfigFromRegistry
{
m_MinBufferSizes.Render, ItemLong -- 10
m_MinBufferSizes.RenderRaw, ItemLong -- 11
m_MinBufferSizes.RenderDefault, ItemLong -- 12
m_MinBufferSizes.RenderCommunications, ItemLong -- 13
m_MinBufferSizes.RenderNotification, ItemLong -- 14
m_MinBufferSizes.RenderMedia, ItemLong -- 15
m_MinBufferSizes.RenderMovie, ItemLong -- 16
m_MinBufferSizes.Capture, ItemLong -- 17
m_MinBufferSizes.CaptureRaw, ItemLong -- 18
m_MinBufferSizes.CaptureDefault, ItemLong -- 19
m_MinBufferSizes.CaptureCommunications, ItemLong -- 20
m_MinBufferSizes.CaptureSpeech, ItemLong -- 21
}
#typev minwavert_cpp9152 518 "%0Entering CMiniportWaveRT::ReadBufferConfigFromRegistry" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadBufferConfigFromRegistry
{
}
#typev minwavert_cpp5619 266 "%0Leaving CMiniportWaveRT::ReadFormatStreamConfigFromRegistry,  status = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadFormatStreamConfigFromRegistry
{
status, ItemLong -- 10
}
#typev minwavert_cpp5599 265 "%0CMiniportWaveRT::ReadFormatStreamConfigFromRegistry: Failed to allocate memory. for streamConfig " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadFormatStreamConfigFromRegistry
{
}
#typev minwavert_cpp5588 264 "%0Entering CMiniportWaveRT::ReadFormatStreamConfigFromRegistry" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadFormatStreamConfigFromRegistry
{
}
#typev minwavert_cpp4750 226 "%0CMiniportWaveRT::ReadListenRegistryConfiguration: Invalid Number of devices = %10!u!,  Filter: %11!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadListenRegistryConfiguration
{
m_uNumOfListenDeviceTypes, ItemLong -- 10
pRegistryPath, ItemWString -- 11
}
#typev minwavert_cpp4825 231 "%0CMiniportWaveRT::ReadListenRegistryConfiguration: ListenDevice numconfig is zero Filter: %10!s! , ListenDevice Index: %11!d!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadListenRegistryConfiguration
{
pFilterName, ItemWString -- 10
i, ItemLong -- 11
}
#typev minwavert_cpp4832 232 "%0CMiniportWaveRT::ReadListenRegistryConfiguration: Failed to allocate memory for pDeviceConfig. Filter: %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadListenRegistryConfiguration
{
pFilterName, ItemWString -- 10
}
#typev minwavert_cpp4789 230 "%0CMiniportWaveRT::ReadListenRegistryConfiguration: Failed to allocate memory for powerType.Buffer. Filter: %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadListenRegistryConfiguration
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp4777 229 "%0CMiniportWaveRT::ReadListenRegistryConfiguration: Failed to allocate memory for pDeviceConfig. Filter: %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadListenRegistryConfiguration
{
pFilterName, ItemWString -- 10
}
#typev minwavert_cpp4889 234 "%0Leaving CHeadsetMiniportTopology::ReadListenRegistryConfiguration,  status = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::ReadListenRegistryConfiguration
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp4769 228 "%0CMiniportWaveRT::ReadListenRegistryConfiguration: Failed to allocate memory for pDevices. Filter: %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadListenRegistryConfiguration
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp4758 227 "%0CMiniportWaveRT::ReadListenRegistryConfiguration: Failed to allocate memory for pDeviceInfo. Devices = %10!u!,  Filter: %11!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadListenRegistryConfiguration
{
m_uNumOfListenDeviceTypes, ItemLong -- 10
pRegistryPath, ItemWString -- 11
}
#typev minwavert_cpp4737 225 "%0CMiniportWaveRT::ReadListenRegistryConfiguration: Failed to allocate memory for pRegistryPath. Filter: %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadListenRegistryConfiguration
{
pFilterName, ItemWString -- 10
}
#typev minwavert_cpp4729 224 "%0CMiniportWaveRT::ReadListenRegistryConfiguration: Adapater Common is NULL" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadListenRegistryConfiguration
{
}
#typev minwavert_cpp4725 223 "%0Entering CMiniportWaveRT::ReadListenRegistryConfiguration" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::ReadListenRegistryConfiguration
{
}
#typev minwavert_cpp5203 244 "%0CMiniportWaveRT::ReadModeInfoFromRegistry Invalid numPinWaveFormats = %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadModeInfoFromRegistry
{
numPinWaveFormats, ItemLong -- 10
}
#typev minwavert_cpp5361 250 "%0Leaving CMiniportWaveRT::ReadModeInfoFromRegistry status = 0x%10!08x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadModeInfoFromRegistry
{
status, ItemLong -- 10
}
#typev minwavert_cpp5302 248 "%0CMiniportWaveRT::ReadModeInfoFromRegistry DefaultFormat allocation failed m_DeviceFormatsAndModes[%10!d!].ModeAndDefaultFormat[%11!d!]" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadModeInfoFromRegistry
{
i, ItemLong -- 10
j, ItemLong -- 11
}
#typev minwavert_cpp5313 249 "%0CMiniportWaveRT::ReadModeInfoFromRegistry SupportedFormats allocation failed m_DeviceFormatsAndModes[%10!d!].ModeAndDefaultFormat[%11!d!]" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadModeInfoFromRegistry
{
i, ItemLong -- 10
j, ItemLong -- 11
}
#typev minwavert_cpp5241 245 "%0CMiniportWaveRT::ReadModeInfoFromRegistry Not updating KsData range for %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadModeInfoFromRegistry
{
i, ItemLong -- 10
}
#typev minwavert_cpp5279 247 "%0CMiniportWaveRT::ReadModeInfoFromRegistry numWaveFormats %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadModeInfoFromRegistry
{
numWaveFormats, ItemLong -- 10
}
#typev minwavert_cpp5255 246 "%0CMiniportWaveRT::ReadModeInfoFromRegistry numModeAndDefaultFormats %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadModeInfoFromRegistry
{
numModeAndDefaultFormats, ItemLong -- 10
}
#typev minwavert_cpp5148 243 "%0CMiniportWaveRT::ReadModeInfoFromRegistry Mode Info not defined in the registry" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadModeInfoFromRegistry
{
}
#typev minwavert_cpp5144 242 "%0CMiniportWaveRT::ReadModeInfoFromRegistry numPinsAndNodes %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadModeInfoFromRegistry
{
numPinsAndNodes, ItemLong -- 10
}
#typev minwavert_cpp5138 241 "%0Entering CMiniportWaveRT::ReadModeInfoFromRegistry " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadModeInfoFromRegistry
{
}
#typev minwavert_cpp5849 290 "%0CMiniportWaveRT::ReadModeStreamConfigFromRegistry ERROR allocating memory for pFormatStreamConfigs" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadModeStreamConfigFromRegistry
{
}
#typev minwavert_cpp5863 291 "%0CMiniportWaveRT::ReadModeStreamConfigFromRegistry ERROR reading FormatStreamConfig from registry %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadModeStreamConfigFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5890 292 "%0Leaving CMiniportWaveRT::ReadModeStreamConfigFromRegistry,  status = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=CMINIPORTWAVERT_VERBOSE FUNC=CMiniportWaveRT::ReadModeStreamConfigFromRegistry
{
status, ItemLong -- 10
}
#typev minwavert_cpp5839 289 "%0CMiniportWaveRT::ReadModeStreamConfigFromRegistry ERROR reading numFormats from registry %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadModeStreamConfigFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5830 288 "%0CMiniportWaveRT::ReadModeStreamConfigFromRegistry ERROR reading StreamConfig %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadModeStreamConfigFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5820 287 "%0CMiniportWaveRT::ReadModeStreamConfigFromRegistry: Failed to allocate memory. for streamConfig " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadModeStreamConfigFromRegistry
{
}
#typev minwavert_cpp5811 286 "%0CMiniportWaveRT::ReadModeStreamConfigFromRegistry ERROR reading mode from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadModeStreamConfigFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5805 285 "%0CMiniportWaveRT::ReadModeStreamConfigFromRegistry ERROR reading mode from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadModeStreamConfigFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5794 284 "%0Entering CMiniportWaveRT::ReadModeStreamConfigFromRegistry" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=CMINIPORTWAVERT_VERBOSE FUNC=CMiniportWaveRT::ReadModeStreamConfigFromRegistry
{
}
#typev minwavert_cpp5425 253 "%0Leaving CMiniportWaveRT::ReadStreamConfigDBFromRegistry,  status = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadStreamConfigDBFromRegistry
{
status, ItemLong -- 10
}
#typev minwavert_cpp5393 252 "%0CMiniportWaveRT::ReadStreamConfigDBFromRegistry ERROR allocating memory for %10!d! StreamTypeStreamConfig structures" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadStreamConfigDBFromRegistry
{
numStreamTypes, ItemLong -- 10
}
#typev minwavert_cpp5377 251 "%0Entering CMiniportWaveRT::ReadStreamConfigDBFromRegistry" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadStreamConfigDBFromRegistry
{
}
#typev minwavert_cpp5998 302 "%0Leaving CMiniportWaveRT::ReadStreamConfigFromRegistry,  status = 0x%10!08x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=CMINIPORTWAVERT_VERBOSE FUNC=CMiniportWaveRT::ReadStreamConfigFromRegistry
{
status, ItemLong -- 10
}
#typev minwavert_cpp5971 300 "%0CMiniportWaveRT::ReadStreamConfigFromRegistry ERROR reading COPP App Type from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadStreamConfigFromRegistry
{
pCoppAppTypeRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5980 301 "%0CMiniportWaveRT::ReadStreamConfigFromRegistry ERROR reading nBitsPerSample from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadStreamConfigFromRegistry
{
pCoppAppTypeRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5956 299 "%0CMiniportWaveRT::ReadStreamConfigFromRegistry ERROR reading Session type from registry %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadStreamConfigFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5949 298 "%0CMiniportWaveRT::ReadStreamConfigFromRegistry ERROR reading FeatureStreamType from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadStreamConfigFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5933 297 "%0CMiniportWaveRT::ReadStreamConfigFromRegistry: Failed to allocate memory. for streamConfig->coppAppTypeConfigs " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadStreamConfigFromRegistry
{
}
#typev minwavert_cpp5926 296 "%0CMiniportWaveRT::ReadStreamConfigFromRegistry numCoppAppConfig is zero from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadStreamConfigFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5919 295 "%0CMiniportWaveRT::ReadStreamConfigFromRegistry ERROR reading COPP App Type from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadStreamConfigFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5911 294 "%0CMiniportWaveRT::ReadStreamConfigFromRegistry ERROR reading POPP App Type from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadStreamConfigFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5906 293 "%0Entering CMiniportWaveRT::ReadStreamConfigFromRegistry" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=CMINIPORTWAVERT_VERBOSE FUNC=CMiniportWaveRT::ReadStreamConfigFromRegistry
{
}
#typev minwavert_cpp5576 263 "%0Leaving CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry,  status = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry
{
status, ItemLong -- 10
}
#typev minwavert_cpp5532 262 "%0CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry ERROR allocating memory for pModeStreamConfigs" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry
{
}
#typev minwavert_cpp5501 260 "%0CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry ERROR allocating memory for pFormatStreamConfigs" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry
{
}
#typev minwavert_cpp5522 261 "%0CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry ERROR reading numModes from registry %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5491 259 "%0CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry ERROR reading numFormats from registry %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5476 258 "%0CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry: Failed to allocate memory. for streamConfig " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry
{
}
#typev minwavert_cpp5468 257 "%0CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry ERROR reading StreamType from registry %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5461 256 "%0CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry ERROR reading StreamType from registry %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5451 255 "%0CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry ERROR allocating memory for stringStreamType" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry
{
}
#typev minwavert_cpp5444 254 "%0Entering CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadStreamTypeStreamConfigFromRegistry
{
}
#typev minwavert_cpp5683 274 "%0Entering CMiniportWaveRT::ReadVolumeLimitParamsFromRegistry" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadVolumeLimitParamsFromRegistry
{
}
#typev minwavert_cpp5677 273 "%0CMiniportWaveRT::ReadVolumeLimitParamsFromRegistry ERROR reading VolumeLimit from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadVolumeLimitParamsFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5671 272 "%0CMiniportWaveRT::ReadVolumeLimitParamsFromRegistry ERROR reading VolumeLimit from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadVolumeLimitParamsFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5662 271 "%0CMiniportWaveRT::ReadVolumeLimitParamsFromRegistry ERROR reading EnableVolumeLimit from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadVolumeLimitParamsFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5654 270 "%0Entering CMiniportWaveRT::ReadVolumeLimitParamsFromRegistry" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadVolumeLimitParamsFromRegistry
{
}
#typev minwavert_cpp5777 283 "%0Leaving CMiniportWaveRT::ReadVolumeSteppings returning with status = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadVolumeSteppings
{
ntStatus, ItemLong -- 10
}
// PDB:  qcaudminiport850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev minwavert_cpp5752 282 "%0CMiniportWaveRT::ReadVolumeSteppings ERROR reading DeviceVolumeSteppingDelta from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadVolumeSteppings
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5745 281 "%0CMiniportWaveRT::ReadVolumeSteppings ERROR reading StreamVolumeSteppingDelta from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadVolumeSteppings
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5738 280 "%0CMiniportWaveRT::ReadVolumeSteppings ERROR reading MinStreamVolume from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadVolumeSteppings
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5731 279 "%0CMiniportWaveRT::ReadVolumeSteppings ERROR reading MaxStreamVolume from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadVolumeSteppings
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp5718 278 "%0CMiniportWaveRT::ReadVolumeSteppings: Failed to allocate memory. for m_pMiniportPair->pVolumeSteppings->pStreamVolumeSteppings %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadVolumeSteppings
{
pFilterRegName, ItemWString -- 10
}
#typev minwavert_cpp5709 277 "%0CMiniportWaveRT::ReadVolumeSteppings: Failed to allocate memory. for m_pMiniportPair->pVolumeSteppings->pDeviceVolumeSteppings %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadVolumeSteppings
{
pFilterRegName, ItemWString -- 10
}
#typev minwavert_cpp5700 276 "%0CMiniportWaveRT::ReadVolumeSteppings: Failed to allocate memory. for m_pMiniportPair->pVolumeSteppings %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ReadVolumeSteppings
{
pFilterRegName, ItemWString -- 10
}
#typev minwavert_cpp5695 275 "%0Entering CMiniportWaveRT::ReadVolumeSteppings" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadVolumeSteppings
{
}
#typev minwavert_cpp6348 307 "%0Leaving CMiniportWaveRT::ReadWaveFormatExFromRegistry,  status = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadWaveFormatExFromRegistry
{
status, ItemLong -- 10
}
#typev minwavert_cpp6335 306 "%0CMiniportWaveRT::ReadWaveFormatExFromRegistry ERROR reading nBitsPerSample from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadWaveFormatExFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp6327 305 "%0CMiniportWaveRT::ReadWaveFormatExFromRegistry ERROR reading nSamplesPerSec from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadWaveFormatExFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp6319 304 "%0CMiniportWaveRT::ReadWaveFormatExFromRegistry ERROR reading nChannels from %10!s!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CMiniportWaveRT::ReadWaveFormatExFromRegistry
{
pRegistryPath, ItemWString -- 10
}
#typev minwavert_cpp6314 303 "%0Entering CMiniportWaveRT::ReadWaveFormatExFromRegistry" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::ReadWaveFormatExFromRegistry
{
}
#typev minwavert_cpp8753 486 "%0CKeywordDetector::RegisterForBufferNotification: Leaving Method : ntStatus : 0x%10!x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::RegisterForBufferNotification
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8746 485 "%0CKeywordDetector::RegisterForBufferNotification: Entering Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::RegisterForBufferNotification
{
}
#typev minwavert_cpp7614 392 "%0CKeywordDetector::ResetDetector: Leaving Method ntStatus 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::ResetDetector
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp7583 391 "%0CKeywordDetector::ResetDetector: ResetDownloadDetectorData failed with status 0x%10!x! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::ResetDetector
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp7572 390 "%0CKeywordDetector::ResetDetector: StopListenSession failed with status 0x%10!x! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::ResetDetector
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp7561 389 "%0CKeywordDetector::ResetDetector: DeinitBufferingStream failed with status 0x%10!x! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::ResetDetector
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp7541 388 "%0CKeywordDetector::ResetDetector: svaHandle is 0 " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::ResetDetector
{
}
#typev minwavert_cpp7534 387 "%0CKeywordDetector::ResetDetector: Invalid InitSessionIndex, PowerType %10!d! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::ResetDetector
{
powerType, ItemLong -- 10
}
#typev minwavert_cpp7526 386 "%0CKeywordDetector::ResetDetector: pListenManager is NULL " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::ResetDetector
{
}
#typev minwavert_cpp7521 385 "%0CKeywordDetector::ResetDetector: Entering Method %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::ResetDetector
{
powerType, ItemLong -- 10
}
#typev minwavert_cpp7518 402 "%0CKeywordDetector::GetPowerType: %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::ResetDetector
{
m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp7689 400 "%0CKeywordDetector::ResetDownloadDetectorData: Leaving Method ntStatus 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::ResetDownloadDetectorData
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp7673 399 "%0CKeywordDetector::ResetDownloadDetectorData: CloseListenSession failed with status 0x%10!x! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::ResetDownloadDetectorData
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp7666 398 "%0CKeywordDetector::ResetDownloadDetectorData: DeregisterSoundModel failed with status 0x%10!x! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::ResetDownloadDetectorData
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp7654 397 "%0CKeywordDetector::ResetDownloadDetectorData: svaHandle is 0 " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::ResetDownloadDetectorData
{
}
#typev minwavert_cpp7647 396 "%0CKeywordDetector::ResetDownloadDetectorData: Invalid InitSessionIndex, PowerType %10!d! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::ResetDownloadDetectorData
{
m_SupporterdPowerTypes[i], ItemLong -- 10
}
#typev minwavert_cpp7641 395 "%0CKeywordDetector::ResetDownloadDetectorData: Looping through power type %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::ResetDownloadDetectorData
{
m_SupporterdPowerTypes[i], ItemLong -- 10
}
#typev minwavert_cpp7633 394 "%0CKeywordDetector::ResetDownloadDetectorData: pListenManager is NULL " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::ResetDownloadDetectorData
{
}
#typev minwavert_cpp7628 393 "%0CKeywordDetector::ResetDownloadDetectorData: Entering Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::ResetDownloadDetectorData
{
}
#typev minwavert_cpp1516 45 "%0Leaving CMiniportWaveRT::SearchThroughFormats,  lastFoundWeight = %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::SearchThroughFormats
{
lastFoundWeight, ItemLong -- 10
}
#typev minwavert_cpp1477 44 "%0Entering CMiniportWaveRT::SearchThroughFormats" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::SearchThroughFormats
{
}
#typev minwavert_cpp9231 522 "%0CMiniportWaveRT::SetAcPowerState %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::SetAcPowerState
{
bState, ItemLong -- 10
}
#typev minwavert_cpp8211 447 "%0CKeywordDetector::SetArmed: Leaving Method ntStatus 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::SetArmed
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8205 446 "%0CMiniportWaveRT::SetArmed: Incorrect SVA state %10!d!, Arm %11!d!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::SetArmed
{
GetSvaState(), ItemLong -- 10
Arm, ItemLong -- 11
}
#typev minwavert_cpp8201 445 "%0CMiniportWaveRT::SetArmed : QueueKwsTransitionTask successfully completed " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::SetArmed
{
}
#typev minwavert_cpp8191 444 "%0CMiniportWaveRT::SetArmed: Incorrect SVA state %10!d!, Arm %11!d!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::SetArmed
{
GetSvaState(), ItemLong -- 10
Arm, ItemLong -- 11
}
#typev minwavert_cpp8187 443 "%0CMiniportWaveRT::SetArmed : QueueKwsTransitionTask successfully completed " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::SetArmed
{
}
#typev minwavert_cpp8180 442 "%0CMiniportWaveRT::SetArmed : Entering method %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::SetArmed
{
Arm, ItemLong -- 10
}
#typev minwavert_cpp9251 523 "%0CMiniportWaveRT::SetDisplayState %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::SetDisplayState
{
bState, ItemLong -- 10
}
#typev minwavert_cpp727 401 "%0CKeywordDetector::SetMatchingDeviceInfo: " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::SetMatchingDeviceInfo
{
}
// PDB:  qcaudminiport850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev minwavert_cpp9271 524 "%0CMiniportWaveRT::SetOffloadPlaybackState %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::SetOffloadPlaybackState
{
bState, ItemLong -- 10
}
#typev minwavert_cpp9307 527 "%0Leaving CMiniportWaveRT::SetPowerState" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::SetPowerState
{
}
#typev minwavert_cpp9301 526 "%0CMiniportWaveRT::SetPowerState calling format change on offload streams" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::SetPowerState
{
}
#typev minwavert_cpp9290 525 "%0CMiniportWaveRT::SetPowerState NewPowerstate %10!d!,  PowerState %11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::SetPowerState
{
NewPowerState, ItemLong -- 10
PowerState, ItemLong -- 11
}
#typev minwavert_cpp8096 436 "%0CKeywordDetector::SetSvaState: Leaving Method ntStatus 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::SetSvaState
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp7985 427 "%0CKeywordDetector::SetSvaState: m_lsmHandle is %10!d! or Keyword detector is in %11!d! state.. Returning Success and doing nothing" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::SetSvaState
{
m_SessionInitParams[InitSessionIndex].svaHandle, ItemLong -- 10
m_KeywordDetectorState, ItemLong -- 11
}
#typev minwavert_cpp8089 435 "%0CKeywordDetector::SetSvaState: StopListenSession failed with status 0x%10!x! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::SetSvaState
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8079 434 "%0CKeywordDetector::SetSvaState: Keyword detector is in invalid state  %10!d!. Returning success and doing nothing." //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::SetSvaState
{
m_KeywordDetectorState, ItemLong -- 10
}
#typev minwavert_cpp8072 433 "%0CKeywordDetector::SetSvaState: DeinitBufferingStream failed with status 0x%10!x! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::SetSvaState
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8052 432 "%0CKeywordDetector::SetSvaState: StartListenSession failed with status 0x%10!x! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::SetSvaState
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8040 431 "%0CMiniportWaveRT::DownloadDetectorData,  status = 0x%10!08x!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=CMINIPORTWAVERT_ERROR FUNC=CKeywordDetector::SetSvaState
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8031 430 "%0CKeywordDetector::SetSvaState: Keyword detector is in invalid state  %10!d!. Returning success and doing nothing." //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::SetSvaState
{
m_KeywordDetectorState, ItemLong -- 10
}
#typev minwavert_cpp8006 429 "%0CKeywordDetector::SetSvaState: DeinitBufferingStream failed with status 0x%10!x! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::SetSvaState
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp7996 428 "%0CKeywordDetector::SetSvaState: Keyword detector is in invalid state  %10!d!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::SetSvaState
{
m_KeywordDetectorState, ItemLong -- 10
}
#typev minwavert_cpp7978 426 "%0CKeywordDetector::SetSvaState: Invalid InitSessionIndex, PowerType %10!d!. Returning Success and doing nothing " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::SetSvaState
{
powerType, ItemLong -- 10
}
#typev minwavert_cpp7970 425 "%0CKeywordDetector::SetSvaState: pListenManager is NULL " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::SetSvaState
{
}
#typev minwavert_cpp7966 424 "%0CKeywordDetector::SetSvaState: Entering Method for Arm %10!d!, powerType %11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::SetSvaState
{
Arm, ItemLong -- 10
powerType, ItemLong -- 11
}
#typev minwavert_cpp7963 402 "%0CKeywordDetector::GetPowerType: %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::SetSvaState
{
m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp5102 240 "%0Leaving CMiniportWaveRT::SetWaveRtPacketSizeConstraints status = 0x%10!08x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::SetWaveRtPacketSizeConstraints
{
status, ItemLong -- 10
}
#typev minwavert_cpp5067 239 "%0CMiniportWaveRT::SetWaveRtPacketSizeConstraints: ProcessingMode = %10!d!,  Guid = {%11!08X!-%12!04X!-%13!04X!-%14!02X!%15!02X!-%16!02X!%17!02X!%18!02X!%19!02X!%20!02X!%21!02X!},  SamplesPerProcessingPacket = %22!u!,  ProcessingPacketDurationInHns = %23!u!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::SetWaveRtPacketSizeConstraints
{
mode, ItemLong -- 10
modeGuid.Data1, ItemLong -- 11
modeGuid.Data2, ItemLong -- 12
modeGuid.Data3, ItemLong -- 13
modeGuid.Data4[0], ItemLong -- 14
modeGuid.Data4[1], ItemLong -- 15
modeGuid.Data4[2], ItemLong -- 16
modeGuid.Data4[3], ItemLong -- 17
modeGuid.Data4[4], ItemLong -- 18
modeGuid.Data4[5], ItemLong -- 19
modeGuid.Data4[6], ItemLong -- 20
modeGuid.Data4[7], ItemLong -- 21
pWaveRtPacketSizeConstraints->ProcessingModeConstraints[j].SamplesPerProcessingPacket, ItemLong -- 22
pWaveRtPacketSizeConstraints->ProcessingModeConstraints[j].ProcessingPacketDurationInHns, ItemLong -- 23
}
#typev minwavert_cpp5064 236 "%0Leaving CMiniportWaveRT::GetDefaultMinimumPacketDurationInHns Mode = %10!d!,  MinBufSizeInMS = %11!u!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::SetWaveRtPacketSizeConstraints
{
processingMode, ItemLong -- 10
ulPacketDurationInHns, ItemLong -- 11
}
#typev minwavert_cpp5064 235 "%0Entering CMiniportWaveRT::GetDefaultMinimumPacketDurationInHns" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::SetWaveRtPacketSizeConstraints
{
}
#typev minwavert_cpp5026 238 "%0CMiniportWaveRT::SetWaveRtPacketSizeConstraints: WaveName = %10!s!,  MinPacketPeriodInHns = %11!u!,  PacketSizeFileAlignment = %12!u!,  NumProcessingModeConstraints = %13!u!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::SetWaveRtPacketSizeConstraints
{
pFilterName, ItemWString -- 10
pWaveRtPacketSizeConstraints->MinPacketPeriodInHns, ItemLong -- 11
pWaveRtPacketSizeConstraints->PacketSizeFileAlignment, ItemLong -- 12
pWaveRtPacketSizeConstraints->NumProcessingModeConstraints, ItemLong -- 13
}
#typev minwavert_cpp4975 237 "%0Entering CMiniportWaveRT::SetWaveRtPacketSizeConstraints " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::SetWaveRtPacketSizeConstraints
{
}
#typev minwavert_cpp8606 473 "%0CKeywordDetector::StartBufferingStream: Leaving Method ntStatus: 0x%10!x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::StartBufferingStream
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8495 467 "%0CKeywordDetector::StartBufferingStream: Cont. Memory Allocation failed! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::StartBufferingStream
{
}
#typev minwavert_cpp8552 472 "%0CKeywordDetector::StartBufferingStream: failed to create dumping data object! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::StartBufferingStream
{
}
#typev minwavert_cpp8530 471 "%0CKeywordDetector::StartBufferingStream: ExAllocatePoolWithTag failed! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::StartBufferingStream
{
}
#typev minwavert_cpp8518 470 "%0CKeywordDetector::StartBufferingStream: Q6 Memory Map command failed! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::StartBufferingStream
{
}
#typev minwavert_cpp8504 469 "%0CKeywordDetector::StartBufferingStream: Physical memory is not write Q6 aligned! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::StartBufferingStream
{
}
#typev minwavert_cpp8499 468 "%0CKeywordDetector::StartBufferingStream: MDL Pointer received 0x%10!x!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::StartBufferingStream
{
(UINT32)m_pLABStreamingMDL, ItemLong -- 10
}
#typev minwavert_cpp8479 466 "%0CKeywordDetector::StartBufferingStream: Alignment failed for the packet size " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::StartBufferingStream
{
}
#typev minwavert_cpp8459 465 "%0CKeywordDetector::StartBufferingStream: ExAllocatePoolWithTag failed! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::StartBufferingStream
{
}
#typev minwavert_cpp8452 464 "%0CKeywordDetector::StartBufferingStream: StartLABStreaming failed! Status : 0x%10!x! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::StartBufferingStream
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8439 463 "%0CKeywordDetector::StartBufferingStream: Invalid InitSessionIndex, PowerType %10!d! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::StartBufferingStream
{
powerType, ItemLong -- 10
}
#typev minwavert_cpp8433 462 "%0CKeywordDetector::StartBufferingStream: Entering Method %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::StartBufferingStream
{
powerType, ItemLong -- 10
}
#typev minwavert_cpp8430 402 "%0CKeywordDetector::GetPowerType: %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::StartBufferingStream
{
m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp8301 455 "%0CKeywordDetector::Stop: Leaving Method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::Stop
{
}
#typev minwavert_cpp8296 454 "%0CKeywordDetector::Stop: SetArmed failed with status 0x%10!x! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::Stop
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8283 453 "%0CKeywordDetector::Stop: LAB is disabled!!! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::Stop
{
}
#typev minwavert_cpp8279 452 "%0CKeywordDetector::Stop: Entering Method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::Stop
{
}
#typev minwavert_cpp8390 459 "%0CKeywordDetector::StopBufferingStream: Leaving Method ntStatus 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::StopBufferingStream
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8353 423 "%0CKeywordDetector::ResetFifo: Leaving Method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::StopBufferingStream
{
}
#typev minwavert_cpp8353 422 "%0CKeywordDetector::ResetFifo: Entering Method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::StopBufferingStream
{
}
#typev minwavert_cpp8334 458 "%0CKeywordDetector::StopBufferingStream: Invalid InitSessionIndex, PowerType %10!d! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::StopBufferingStream
{
powerType, ItemLong -- 10
}
#typev minwavert_cpp8329 457 "%0CKeywordDetector:: StopBufferingStream failed with status 0x%10!x! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CKeywordDetector::StopBufferingStream
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8314 456 "%0CKeywordDetector::StopBufferingStream: Entering Method %10!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::StopBufferingStream
{
powerType, ItemLong -- 10
}
#typev minwavert_cpp8312 402 "%0CKeywordDetector::GetPowerType: %10!d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CKeywordDetector::StopBufferingStream
{
m_CurrentPowerType, ItemLong -- 10
}
#typev minwavert_cpp2485 97 "%0CMiniportWaveRT::StreamCreated: Leaving method,  status = STATUS_SUCCESS." //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::StreamClosed
{
}
#typev minwavert_cpp2412 96 "%0CMiniportWaveRT::StreamClosed Entering method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::StreamClosed
{
}
#typev minwavert_cpp2391 95 "%0CMiniportWaveRT::StreamCreated: Leaving method,  status = SUCCESS." //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::StreamCreated
{
}
#typev minwavert_cpp2314 94 "%0CMiniportWaveRT::StreamCreated Entering method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::StreamCreated
{
}
#typev minwavert_cpp8768 488 "%0CKeywordDetector::UnRegisterForBufferNotification: Leaving Method : ntStatus : 0x%10!x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::UnRegisterForBufferNotification
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp8765 487 "%0CKeywordDetector::UnRegisterForBufferNotification: Entering Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CKeywordDetector::UnRegisterForBufferNotification
{
}
#typev minwavert_cpp4157 214 "%0CMiniportWaveRT::UpdateDrmRights: Leaving method,  status = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::UpdateDrmRights
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp4113 212 "%0CMiniportWaveRT::UpdateDrmRights: OverrideLoopbackStreamMute Failed! status = 0x%10!08X!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::UpdateDrmRights
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp4105 211 "%0CMiniportWaveRT::UpdateDrmRights: UpdateHDCPState Failed! status = 0x%10!08X!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::UpdateDrmRights
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp4100 210 "%0CMiniportWaveRT::UpdateDrmRights: Enabling DRM rights" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::UpdateDrmRights
{
}
#typev minwavert_cpp4125 213 "%0CMiniportWaveRT::UpdateDrmRights: Disabling DRM rights" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::UpdateDrmRights
{
}
#typev minwavert_cpp4094 209 "%0CMiniportWaveRT::UpdateDrmRights: Updated DRM rights - DigitalOutputDisable %10!d!,  CopyProtect %11!d!,  Current DRM State %12!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::UpdateDrmRights
{
MixDrmRights.DigitalOutputDisable, ItemLong -- 10
MixDrmRights.CopyProtect, ItemLong -- 11
m_bDRMEnabled, ItemLong -- 12
}
#typev minwavert_cpp4090 208 "%0CMiniportWaveRT::UpdateDrmRights: GetContentRights Failed! status = 0x%10!08X!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::UpdateDrmRights
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp4077 207 "%0CMiniportWaveRT::UpdateDrmRights: CreateContentMixed Failed! status = 0x%10!08X!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::UpdateDrmRights
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp4059 206 "%0CMiniportWaveRT::UpdateDrmRights: No render streams active" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::UpdateDrmRights
{
}
#typev minwavert_cpp4029 205 "%0CMiniportWaveRT::UpdateDrmRights: Failed to allocate memory" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::UpdateDrmRights
{
}
#typev minwavert_cpp4022 204 "%0CMiniportWaveRT::UpdateDrmRights: Failed! Invalid Drm Port pointer" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::UpdateDrmRights
{
}
#typev minwavert_cpp4008 203 "%0CMiniportWaveRT::UpdateDrmRights: Entering method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::UpdateDrmRights
{
}
#typev minwavert_cpp3943 199 "%0CMiniportWaveRT::UpdateHDCPState: Leaving method,  status = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::UpdateHDCPState
{
ntStatus, ItemLong -- 10
}
#typev minwavert_cpp3934 198 "%0CMiniportWaveRT::UpdateHDCPState: Entering method %10!s!,  State %11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::UpdateHDCPState
{
m_pMiniportPair->WaveName, ItemWString -- 10
bEnable, ItemLong -- 11
}
#typev minwavert_cpp6644 321 "%0Leaving CMiniportWaveRT::UpdatePinDataRange status = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::UpdatePinDataRange
{
status, ItemLong -- 10
}
#typev minwavert_cpp6626 319 "%0CMiniportWaveRT::UpdatePinDataRange New DataRangeIndex %10!d! Max/Min SR 0x%11!08X! 0x%12!08X!, Max/Min bps 0x%13!08X! 0x%14!08X!, Max ch 0x%15!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::UpdatePinDataRange
{
i, ItemLong -- 10
TmpKsDataRange_Audio->MaximumSampleFrequency, ItemLong -- 11
TmpKsDataRange_Audio->MinimumSampleFrequency, ItemLong -- 12
TmpKsDataRange_Audio->MaximumBitsPerSample, ItemLong -- 13
TmpKsDataRange_Audio->MinimumBitsPerSample, ItemLong -- 14
TmpKsDataRange_Audio->MaximumChannels, ItemLong -- 15
}
#typev minwavert_cpp6635 320 "%0CMiniportWaveRT::UpdatePinDataRange Found DataRangeIndex %10!d! Max/Min SR 0x%11!08X! 0x%12!08X!, Max/Min bps 0x%13!08X! 0x%14!08X!, Max ch 0x%15!08X! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::UpdatePinDataRange
{
i, ItemLong -- 10
TmpKsDataRange_Audio->MaximumSampleFrequency, ItemLong -- 11
TmpKsDataRange_Audio->MinimumSampleFrequency, ItemLong -- 12
TmpKsDataRange_Audio->MaximumBitsPerSample, ItemLong -- 13
TmpKsDataRange_Audio->MinimumBitsPerSample, ItemLong -- 14
TmpKsDataRange_Audio->MaximumChannels, ItemLong -- 15
}
#typev minwavert_cpp6608 318 "%0Entering CMiniportWaveRT::UpdatePinDataRange for format NumChannels %10!d!, SampleRate %11!d!, Bps %12!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRT::UpdatePinDataRange
{
_numChannels, ItemLong -- 10
_SampleFrequency, ItemLong -- 11
_wBitsPerSample, ItemLong -- 12
}
#typev minwavert_cpp3008 137 "%0CMiniportWaveRT::ValidateDataFormats: Leaving method Filter %10!s!, status = 0x%11!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::ValidateDataFormats
{
m_pMiniportPair->WaveName, ItemWString -- 10
status, ItemLong -- 11
}
#typev minwavert_cpp2919 121 "%0CMiniportWaveRT::ValidateDataFormats: Invalid MajorFormat" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ValidateDataFormats
{
}
#typev minwavert_cpp2924 122 "%0CMiniportWaveRT::ValidateDataFormats: Invalid SubFormat" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ValidateDataFormats
{
}
#typev minwavert_cpp2929 123 "%0CMiniportWaveRT::ValidateDataFormats: Invalid SubFormat" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ValidateDataFormats
{
}
#typev minwavert_cpp3001 136 "%0CMiniportWaveRT::ValidateDataFormats: Invalid Ext SubFormat" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ValidateDataFormats
{
}
#typev minwavert_cpp2996 135 "%0CMiniportWaveRT::ValidateDataFormats: Invalid dwChannelMask" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ValidateDataFormats
{
}
#typev minwavert_cpp2991 134 "%0CMiniportWaveRT::ValidateDataFormats: Invalid wValidBitsPerSample" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ValidateDataFormats
{
}
#typev minwavert_cpp2988 133 "%0CMiniportWaveRT::ValidateDataFormats: wValidBitsPerSample = %10!d!,  dwChannelMask = %11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::ValidateDataFormats
{
pWaveFormatExt->Samples.wValidBitsPerSample, ItemLong -- 10
pWaveFormatExt->dwChannelMask, ItemLong -- 11
}
#typev minwavert_cpp2983 132 "%0CMiniportWaveRT::ValidateDataFormats: Invalid cbSize" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ValidateDataFormats
{
}
#typev minwavert_cpp2975 131 "%0CMiniportWaveRT::ValidateDataFormats: Format is not WAVE_FORMAT_EXTENSIBLE" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::ValidateDataFormats
{
}
#typev minwavert_cpp2969 130 "%0CMiniportWaveRT::ValidateDataFormats: Invalid wBitsPerSample" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ValidateDataFormats
{
}
#typev minwavert_cpp2964 129 "%0CMiniportWaveRT::ValidateDataFormats: Invalid nBlockAlign" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ValidateDataFormats
{
}
#typev minwavert_cpp2959 128 "%0CMiniportWaveRT::ValidateDataFormats: Invalid nSamplesPerSec" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ValidateDataFormats
{
}
#typev minwavert_cpp2954 127 "%0CMiniportWaveRT::ValidateDataFormats: Invalid nChannels" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ValidateDataFormats
{
}
#typev minwavert_cpp2948 126 "%0CMiniportWaveRT::ValidateDataFormats: Invalid SubFormat" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ValidateDataFormats
{
}
#typev minwavert_cpp2941 125 "%0CMiniportWaveRT::ValidateDataFormats: wFormatTag = 0x%10!x!,  nSamplesPerSec = %11!d!,  nChannels = %12!d!,  wBitsPerSample = %13!d!,  nBlockAlign = %14!d!,  cbSize = %15!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::ValidateDataFormats
{
pWaveFormat->wFormatTag, ItemLong -- 10
pWaveFormat->nSamplesPerSec, ItemLong -- 11
pWaveFormat->nChannels, ItemLong -- 12
pWaveFormat->wBitsPerSample, ItemLong -- 13
pWaveFormat->nBlockAlign, ItemLong -- 14
pWaveFormat->cbSize, ItemLong -- 15
}
#typev minwavert_cpp2934 124 "%0CMiniportWaveRT::ValidateDataFormats: Invalid FormatSize" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRT::ValidateDataFormats
{
}
#typev minwavert_cpp2912 120 "%0CMiniportWaveRT::ValidateDataFormats: Entering method Filter %10!s!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRT::ValidateDataFormats
{
m_pMiniportPair->WaveName, ItemWString -- 10
}
// PDB:  qcaudminiport850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev minwavertstream_cpp1191 517 "%0Leaving CMiniportWaveRT::GetMinBufSizeConfig SessionType : 0x%10!x!,  Mode = %11!d!,  MinBufSizeInMS = %12!u!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRTStream::AllocateBufferWithNotification
{
sessionType, ItemLong -- 10
processingMode, ItemLong -- 11
ulMinBufSizeConfig, ItemLong -- 12
}
#typev minwavertstream_cpp1191 516 "%0Entering CMiniportWaveRT::GetMinBufSizeConfig" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=CMINIPORTWAVERT_INFO FUNC=CMiniportWaveRTStream::AllocateBufferWithNotification
{
}
// PDB:  qcaudminiport850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev MinwavertListenStream_cpp462 451 "%0CKeywordDetector::Run: Leaving Method 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTListenStream::SetState
{
ntStatus, ItemLong -- 10
}
#typev MinwavertListenStream_cpp462 450 "%0CKeywordDetector::Run: m_KeywordDetectorState:%10!d! state not supported" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRTListenStream::SetState
{
m_KeywordDetectorState, ItemLong -- 10
}
#typev MinwavertListenStream_cpp462 449 "%0CKeywordDetector::Run: LAB is disabled!!! " //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRTListenStream::SetState
{
}
#typev MinwavertListenStream_cpp462 448 "%0CKeywordDetector::Run: Entering Method " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTListenStream::SetState
{
}
