// PDB:  QC_BT_BLEAPI_TEST.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
9d8e5666-49d7-3443-8057-8f2f6e958200 qcLIBapi // SRC=qclibBLEAPI.c MJ= MN=
#typev QcLIBapiTest_c707 130 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: device handle=%10!p!. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
Device, ItemPtr -- 10
}
#typev QcLIBapiTest_c707 129 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: invalid handle. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
}
#typev QcLIBapiTest_c707 128 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application call API [%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
__FUNCTION__, ItemString -- 10
}
#typev QcLIBapiTest_c522 146 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: device handle=%10!p!, Monitorhandle=0x%11!x!. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
Device, ItemPtr -- 10
Monitorhandle, ItemLong -- 11
}
#typev QcLIBapiTest_c522 145 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: invalid handle. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
}
#typev QcLIBapiTest_c522 144 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application call API [%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
__FUNCTION__, ItemString -- 10
}
#typev QcLIBapiTest_c394 78 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::instance=0x%10!x! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
pParameters->AdvertisingInstance, ItemLong -- 10
}
#typev QcLIBapiTest_c394 76 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::[%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
__FUNCTION__, ItemString -- 10
}
#typev QcLIBapiTest_c345 99 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send HCI command successfully." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
}
#typev QcLIBapiTest_c345 98 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send HCI command failed. 0x%10!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
status, ItemLong -- 10
}
#typev QcLIBapiTest_c345 97 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!:: input device handle invalid" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
}
#typev QcLIBapiTest_c345 96 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: device handle=%10!p!, LocalAdvertising_Handle=%11!x! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
Device, ItemPtr -- 10
instance, ItemLong -- 11
}
#typev QcLIBapiTest_c345 95 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application call API [%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
__FUNCTION__, ItemString -- 10
}
#typev QcLIBapiTest_c270 111 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting:  device handle=%10!p!, interval=%11!x!, window=%12!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
Device, ItemPtr -- 10
interval, ItemLong -- 11
window, ItemLong -- 12
}
#typev QcLIBapiTest_c270 110 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!:: input device handle invalid" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
}
#typev QcLIBapiTest_c270 109 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application call API [%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
__FUNCTION__, ItemString -- 10
}
#typev QcLIBapiTest_c199 105 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting:  device handle=%10!p!, LE_Scan_Interval=%11!x!, LE_Scan_Window=%12!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
Device, ItemPtr -- 10
interval, ItemLong -- 11
window, ItemLong -- 12
}
#typev QcLIBapiTest_c199 104 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!:: input device handle invalid" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
}
#typev QcLIBapiTest_c199 103 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application call API [%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
__FUNCTION__, ItemString -- 10
}
#typev QcLIBapiTest_c187 108 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::[%10!s!] ioctl failed ad %11!d! (error code=%12!d!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
__FUNCTION__, ItemString -- 10
__LINE__, ItemLong -- 11
dwLastError, ItemLong -- 12
}
#typev QcLIBapiTest_c187 107 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!:: input device handle invalid" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
}
#typev QcLIBapiTest_c187 106 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::[%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=main
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c827 69 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::input device handle is NULL or invalid." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplCloseDevice
{
}
#typev qclibBLEAPI_c916 75 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application call API --[%10!s!]--" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplCloseDevice
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c869 74 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::invalid parameter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplCloseDevice
{
}
#typev qclibBLEAPI_c858 73 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::termianlThreadEvt is NULL. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplCloseDevice
{
}
#typev qclibBLEAPI_c852 72 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::wait terminal thread event successfully. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplCloseDevice
{
}
#typev qclibBLEAPI_c847 71 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::wait terminal thread event result , wait timeout. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplCloseDevice
{
}
#typev qclibBLEAPI_c838 15 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl successfully!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplCloseDevice
{
}
#typev qclibBLEAPI_c838 14 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::[%10!s!] ioctl failed ad %11!d! (error code=%12!d!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplCloseDevice
{
__FUNCTION__, ItemString -- 10
__LINE__, ItemLong -- 11
dwLastError, ItemLong -- 12
}
#typev qclibBLEAPI_c838 13 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::[%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplCloseDevice
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c833 70 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::input device handle doesn't equal to the global value." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplCloseDevice
{
}
#typev qclibBLEAPI_c820 68 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application call API ++[%10!s!]++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplCloseDevice
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c797 67 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::startThreadEvt is NULL. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplOpenDevice
{
}
#typev qclibBLEAPI_c791 66 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::wait start thread event successfully. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplOpenDevice
{
}
#typev qclibBLEAPI_c786 65 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::wait start thread event result , wait timeout. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplOpenDevice
{
}
#typev qclibBLEAPI_c769 64 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::get the device handle successfully. handle=%10!p! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplOpenDevice
{
Devhandle, ItemPtr -- 10
}
#typev qclibBLEAPI_c761 63 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::[%10!s!] ioctl failed ad %11!d! (error code=%12!d!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplOpenDevice
{
__FUNCTION__, ItemString -- 10
__LINE__, ItemLong -- 11
dwLastError, ItemLong -- 12
}
#typev qclibBLEAPI_c738 62 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::handle has been created: gDevhandle=0x%10!p! ." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplOpenDevice
{
gDevhandle, ItemPtr -- 10
}
#typev qclibBLEAPI_c730 61 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::invalid parameter, handle is NULL" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplOpenDevice
{
}
#typev qclibBLEAPI_c726 60 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application call API [%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplOpenDevice
{
__FUNCTION__, ItemString -- 10
}
// PDB:  QC_BT_BLEAPI_TEST.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qclibBLEAPI_c1197 91 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send LEMultiAdvtCommand_SetAdvtEnableMultiSubCmd successfully." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplSendAdv
{
}
#typev qclibBLEAPI_c1191 90 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send LEMultiAdvtCommand_SetAdvtEnableMultiSubCmd failed. 0x%10!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplSendAdv
{
status, ItemLong -- 10
}
#typev qclibBLEAPI_c1150 87 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send LEMultiAdvtCommand_SetAdvtDataMultiSubCmd successfully." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplSendAdv
{
}
#typev qclibBLEAPI_c1143 86 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send LEMultiAdvtCommand_SetAdvtDataMultiSubCmd failed. 0x%10!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplSendAdv
{
status, ItemLong -- 10
}
#typev qclibBLEAPI_c1129 85 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send LEMultiAdvtCommand_SetRandomAddrMultiSubCmd successfully." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplSendAdv
{
}
#typev qclibBLEAPI_c1124 84 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send LEMultiAdvtCommand_SetRandomAddrMultiSubCmd failed. 0x%10!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplSendAdv
{
status, ItemLong -- 10
}
#typev qclibBLEAPI_c1110 83 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!:: input device handle invalid" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplSendAdv
{
}
#typev qclibBLEAPI_c1105 82 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::nAdvIndLen=0x%10!x!, nScanRespLen=0x%11!x!, bRandomMac=0x%12!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplSendAdv
{
nAdvIndLen, ItemLong -- 10
nScanRespLen, ItemLong -- 11
bRandomMac, ItemLong -- 12
}
#typev qclibBLEAPI_c1104 81 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application call API [%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ApplSendAdv
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c2342 172 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DataPrint
{
data[i], ItemLong -- 10
}
#typev qclibBLEAPI_c2338 171 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::HEX:" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DataPrint
{
}
#typev qclibBLEAPI_c2337 170 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::packet type: %10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DataPrint
{
data[4], ItemLong -- 10
}
#typev qclibBLEAPI_c2336 169 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::cmd data length: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DataPrint
{
*data, ItemLong -- 10
}
#typev qclibBLEAPI_c2335 168 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Data send to BT driver, Total Length: %10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DataPrint
{
len, ItemLong -- 10
}
#typev qclibBLEAPI_c1942 135 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send the get the bt status request successfully, status=0x%10!x!. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetBluetoothStatus
{
status, ItemLong -- 10
}
#typev qclibBLEAPI_c1933 12 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl successfully!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetBluetoothStatus
{
}
#typev qclibBLEAPI_c1936 134 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send the get the bt status request failed, status=0x%10!x!. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetBluetoothStatus
{
status, ItemLong -- 10
}
#typev qclibBLEAPI_c1933 11 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::[%10!s!] ioctl failed ad %11!d! (error code=%12!d!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetBluetoothStatus
{
__FUNCTION__, ItemString -- 10
__LINE__, ItemLong -- 11
dwLastError, ItemLong -- 12
}
#typev qclibBLEAPI_c1933 10 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::[%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetBluetoothStatus
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c1928 133 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: device handle=%10!p!. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetBluetoothStatus
{
Device, ItemPtr -- 10
}
#typev qclibBLEAPI_c1922 132 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: invalid handle. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetBluetoothStatus
{
}
#typev qclibBLEAPI_c1917 131 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application call API [%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetBluetoothStatus
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c1828 124 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: device handle=%10!p!. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetConnectRslt
{
Device, ItemPtr -- 10
}
#typev qclibBLEAPI_c1822 123 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: invalid handle. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetConnectRslt
{
}
#typev qclibBLEAPI_c1816 122 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application call API [%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetConnectRslt
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c1795 121 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: device handle=%10!p!. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetDisconnReason
{
Device, ItemPtr -- 10
}
#typev qclibBLEAPI_c1789 120 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: invalid handle. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetDisconnReason
{
}
#typev qclibBLEAPI_c1784 119 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application call API [%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetDisconnReason
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c1860 127 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: device handle=%10!p!. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetHwRslt
{
Device, ItemPtr -- 10
}
#typev qclibBLEAPI_c1854 126 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: invalid handle. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetHwRslt
{
}
#typev qclibBLEAPI_c1849 125 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application call API [%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetHwRslt
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c2278 163 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::readRssiHandleEvt is NULL. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetRSSI
{
}
#typev qclibBLEAPI_c2272 162 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::evtStatus=0x%10!x!. rssi=0x%11!x!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetRSSI
{
glibContext.readRssiStatus, ItemLong -- 10
glibContext.readRssiValue, ItemLong -- 11
}
#typev qclibBLEAPI_c2261 161 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::wait readRssiHandleEvt result , wait timeout. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetRSSI
{
}
#typev qclibBLEAPI_c2250 160 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send read rssi command bt driver successfully, status=0x%10!x!. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetRSSI
{
status, ItemLong -- 10
}
#typev qclibBLEAPI_c2244 159 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send read rssi command to bt driver failed, status=0x%10!x!. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetRSSI
{
status, ItemLong -- 10
}
#typev qclibBLEAPI_c2237 158 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application call API [%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvGetRSSI
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c2142 150 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: NULL pointer. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvSetAdvOption
{
}
#typev qclibBLEAPI_c2214 157 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::getMonitorHandleEvt is NULL. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvSetAdvOption
{
}
#typev qclibBLEAPI_c2207 156 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::evtStatus=0x%10!x!. monitor handle=0x%11!x!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvSetAdvOption
{
glibContext.getMonitorHandleStatus, ItemLong -- 10
glibContext.getMonitorHandle, ItemLong -- 11
}
#typev qclibBLEAPI_c2202 155 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::wait getMonitorHandleEvt result , wait timeout. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvSetAdvOption
{
}
#typev qclibBLEAPI_c2197 154 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::wait getMonitorHandleEvt result , waitEventRslt=0x%10!x!. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvSetAdvOption
{
waitEventRslt, ItemLong -- 10
}
#typev qclibBLEAPI_c2188 153 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send cmd to bt driver successfully, status=0x%10!x!. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvSetAdvOption
{
status, ItemLong -- 10
}
#typev qclibBLEAPI_c2182 152 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send cmd to bt driver failed, status=0x%10!x!. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvSetAdvOption
{
status, ItemLong -- 10
}
#typev qclibBLEAPI_c2133 149 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: device handle=%10!p!, type=0x%11!x!, dataLen=0x%12!x!. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvSetAdvOption
{
Device, ItemPtr -- 10
ConditionType, ItemLong -- 11
dataLen, ItemLong -- 12
}
#typev qclibBLEAPI_c2127 148 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: invalid handle. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvSetAdvOption
{
}
#typev qclibBLEAPI_c2122 147 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application call API [%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvSetAdvOption
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c2052 143 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl successfully!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvSetDebugSwitch
{
}
#typev qclibBLEAPI_c2046 142 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::[%10!s!] ioctl failed ad %11!d! (error code=%12!d!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvSetDebugSwitch
{
__FUNCTION__, ItemString -- 10
__LINE__, ItemLong -- 11
dwLastError, ItemLong -- 12
}
#typev qclibBLEAPI_c2009 141 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: device handle=%10!p!, control=0x%11!x!, persistent=0x%12!x!. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvSetDebugSwitch
{
Device, ItemPtr -- 10
control, ItemLong -- 11
persistent, ItemLong -- 12
}
#typev qclibBLEAPI_c2003 140 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Upper layer application parameter setting: invalid handle. " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvSetDebugSwitch
{
}
#typev qclibBLEAPI_c1998 139 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::[%10!s!]" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=DrvSetDebugSwitch
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c595 49 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::break the while loop." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c509 42 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::DEBUG_INFO_TERMINAL_THREAD." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c609 50 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::notify the close api to close." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c269 26 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::device handle is NULL." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c588 48 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::un-defined reqeust." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c573 47 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::DEBUG_INFO_GET_BT_STATUS." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c554 46 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!:: _BluetoothStatusOnOffCallback is NULL." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c545 45 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::DEBUG_INFO_BT_STATUS_OFF." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c526 44 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!:: _BluetoothStatusOnOffCallback is NULL." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c517 43 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::DEBUG_INFO_BT_STATUS_ON." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c491 41 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::DEBUG_INFO_GET_MONITOR_HANDLE." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c472 40 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::DEBUG_INFO_READ_RSSI." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c454 39 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!:: _HwRsltCallback is NULL." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c445 38 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::DEBUG_INFO_SOC_ERROR." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c427 37 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!:: _HwRsltCallback is NULL." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c418 36 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::DEBUG_INFO_BUS_ERROR." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c404 35 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!:: _DisconnectReasonCallback is NULL." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c392 34 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::DEBUG_INFO_DISCONNECTION_COMPLETE_EVENT." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c384 33 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::DEBUG_INFO_CONNECTION_COMPLETE_EVENT, unknow complete event." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c371 32 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::DEBUG_INFO_CONNECTION_COMPLETE_EVENT, LINK_CONNECTION_TYPE_SCO" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c342 31 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::DEBUG_INFO_CONNECTION_COMPLETE_EVENT, LINK_CONNECTION_TYPE_BLE" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c313 30 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::DEBUG_INFO_CONNECTION_COMPLETE_EVENT, LINK_CONNECTION_TYPE_ACL" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c296 29 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!:: _ConnectRsltCallback is NULL." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c288 28 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::DEBUG_INFO_CONNECTION_COMPLETE_EVENT." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c278 27 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::debugInfoLen is 0." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c250 25 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::get debug info length=0x%10!x!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
debugInfoLen, ItemLong -- 10
}
#typev qclibBLEAPI_c246 24 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send read request." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInfoThread
{
}
#typev qclibBLEAPI_c697 59 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::GetDebugInofInIt: Thread creation successful." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInofInIt
{
}
#typev qclibBLEAPI_c690 58 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::GetDebugInofInIt: Creating thread failed." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInofInIt
{
}
#typev qclibBLEAPI_c673 57 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::GetDebugInofInIt:create start thread event handle event failed." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInofInIt
{
}
#typev qclibBLEAPI_c664 56 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::GetDebugInofInIt:create terminal thread event handle event failed." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInofInIt
{
}
#typev qclibBLEAPI_c655 55 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::GetDebugInofInIt:create get bluetooth status handle event failed." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInofInIt
{
}
#typev qclibBLEAPI_c646 54 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::GetDebugInofInIt: create get monitor handle event failed." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInofInIt
{
}
#typev qclibBLEAPI_c637 53 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::GetDebugInofInIt: create read rssi event for async failed." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInofInIt
{
}
#typev qclibBLEAPI_c629 52 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::GetDebugInofInIt: create event for overlapReadAsync failed." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInofInIt
{
}
#typev qclibBLEAPI_c621 51 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::GetDebugInofInIt: handle=%10!p!, ghandle=%11!p! ." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=GetDebugInofInIt
{
DeviceHandle, ItemPtr -- 10
gDevhandle, ItemPtr -- 11
}
#typev qclibBLEAPI_c3182 225 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] --" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=HCIVSMSFTLECancelMonitorAdvertisementCommand
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c3178 224 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl successfully!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=HCIVSMSFTLECancelMonitorAdvertisementCommand
{
}
#typev qclibBLEAPI_c3172 223 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl failed (error code=%10!d!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=HCIVSMSFTLECancelMonitorAdvertisementCommand
{
dwLastError, ItemLong -- 10
}
#typev qclibBLEAPI_c3134 222 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::invalid handle!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=HCIVSMSFTLECancelMonitorAdvertisementCommand
{
}
#typev qclibBLEAPI_c3130 221 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] ++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=HCIVSMSFTLECancelMonitorAdvertisementCommand
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c3111 220 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] --" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=HCIVSMSFTLEMonitorAdvertisementCommand
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c3107 219 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl successfully!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=HCIVSMSFTLEMonitorAdvertisementCommand
{
}
#typev qclibBLEAPI_c3101 218 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl failed (error code=%10!d!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=HCIVSMSFTLEMonitorAdvertisementCommand
{
dwLastError, ItemLong -- 10
}
#typev qclibBLEAPI_c3045 217 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] ++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=HCIVSMSFTLEMonitorAdvertisementCommand
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c2653 193 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] --" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetAdvtDataMultiSubCmd
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c2648 192 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl successfully!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetAdvtDataMultiSubCmd
{
}
#typev qclibBLEAPI_c2642 191 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl failed (error code=%10!d!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetAdvtDataMultiSubCmd
{
dwLastError, ItemLong -- 10
}
#typev qclibBLEAPI_c2598 190 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] ++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetAdvtDataMultiSubCmd
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c2431 180 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] --" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetAdvtEnableMultiSubCmd
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c2427 179 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl successfully!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetAdvtEnableMultiSubCmd
{
}
#typev qclibBLEAPI_c2421 178 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl failed (error code=%10!d!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetAdvtEnableMultiSubCmd
{
dwLastError, ItemLong -- 10
}
#typev qclibBLEAPI_c2381 177 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::invalid handle!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetAdvtEnableMultiSubCmd
{
}
#typev qclibBLEAPI_c2377 176 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] ++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetAdvtEnableMultiSubCmd
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c2743 198 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] --" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetAdvtParamMultiSubCmd
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c2739 197 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl successfully!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetAdvtParamMultiSubCmd
{
}
#typev qclibBLEAPI_c2733 196 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl failed (error code=%10!d!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetAdvtParamMultiSubCmd
{
dwLastError, ItemLong -- 10
}
#typev qclibBLEAPI_c2675 195 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::invalid handle!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetAdvtParamMultiSubCmd
{
}
#typev qclibBLEAPI_c2671 194 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] ++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetAdvtParamMultiSubCmd
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c2503 185 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] --" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetRandomAddrMultiSubCmd
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c2499 184 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl successfully!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetRandomAddrMultiSubCmd
{
}
#typev qclibBLEAPI_c2493 183 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl failed (error code=%10!d!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetRandomAddrMultiSubCmd
{
dwLastError, ItemLong -- 10
}
#typev qclibBLEAPI_c2453 182 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::invalid handle!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetRandomAddrMultiSubCmd
{
}
#typev qclibBLEAPI_c2449 181 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] ++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LEMultiAdvtCommand_SetRandomAddrMultiSubCmd
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c3557 245 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] --" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LESetScanParametersCommand
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c3553 244 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl successfully!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LESetScanParametersCommand
{
}
#typev qclibBLEAPI_c3547 243 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl failed (error code=%10!d!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LESetScanParametersCommand
{
dwLastError, ItemLong -- 10
}
#typev qclibBLEAPI_c3501 242 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] ++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=LESetScanParametersCommand
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c2810 203 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] --" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ReadRSSICommand
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c2806 202 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl successfully!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ReadRSSICommand
{
}
#typev qclibBLEAPI_c2800 201 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl failed (error code=%10!d!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ReadRSSICommand
{
dwLastError, ItemLong -- 10
}
#typev qclibBLEAPI_c2764 200 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::invalid handle!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ReadRSSICommand
{
}
#typev qclibBLEAPI_c2760 199 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] ++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=ReadRSSICommand
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c209 23 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::SendReadRequest: status is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=SendReadRequest
{
status, ItemLong -- 10
}
#typev qclibBLEAPI_c153 16 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::Invalid parameter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=SendReadRequest
{
}
#typev qclibBLEAPI_c194 21 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::GetOverlappedResult failed with error %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=SendReadRequest
{
lastError, ItemLong -- 10
}
#typev qclibBLEAPI_c178 20 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::GetOverlappedResult byte return 0x%10!x! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=SendReadRequest
{
bytesReturned, ItemLong -- 10
}
#typev qclibBLEAPI_c177 19 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!:: GetOverlappedResult is success" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=SendReadRequest
{
}
#typev qclibBLEAPI_c166 18 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::signal the event." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=SendReadRequest
{
}
#typev qclibBLEAPI_c161 17 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!:: GetLastError:  ERROR_IO_PENDING" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=SendReadRequest
{
}
#typev qclibBLEAPI_c203 22 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::In default case, error value 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=SendReadRequest
{
error, ItemLong -- 10
}
#typev qclibBLEAPI_c2948 212 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] --" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=WritePageScanActivityCommand
{
__FUNCTION__, ItemString -- 10
}
#typev qclibBLEAPI_c2944 211 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl successfully!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=WritePageScanActivityCommand
{
}
#typev qclibBLEAPI_c2938 210 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::ioctl failed (error code=%10!d!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=WritePageScanActivityCommand
{
dwLastError, ItemLong -- 10
}
#typev qclibBLEAPI_c2898 209 "%0 [%!LEVEL!] qclibBLEAPI.c::%!FUNC!::send hci command [%10!s!] ++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCBLElibinfo FUNC=WritePageScanActivityCommand
{
__FUNCTION__, ItemString -- 10
}
