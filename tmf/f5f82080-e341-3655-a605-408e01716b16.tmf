// PDB:  qcdx11arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:19:368 (UTC) [tracepdb]
f5f82080-e341-3655-a605-408e01716b16 utils // SRC=dxgpuscope.cpp MJ= MN=
#typev dxgpuscope_cpp1054 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::AddCounterToString
{
}
#typev dxgpuscope_cpp105 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Create
{
}
#typev dxgpuscope_cpp128 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Destroy
{
}
#typev dxgpuscope_cpp301 11 "%0GPU SCOPE: Disabled" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Disable
{
}
#typev dxgpuscope_cpp445 14 "%0GPU SCOPE: All Counter Allocations Failed. GPU SCOPE Disabled." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
}
#typev dxgpuscope_cpp373 13 "%0GPU SCOPE: Error: Invalid/Unsupported Mode: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
m_scopeState.scopeMode, ItemLong -- 10
}
#typev dxgpuscope_cpp347 12 "%0GPU SCOPE: Error: Could not open file: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
gpuScopeFilename, ItemString -- 10
}
#typev dxgpuscope_cpp2010 23 "%0GPU SCOPE: Error: Invalid Packet Type: %10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
*(pHostRead - 1), ItemLong -- 10
}
#typev dxgpuscope_cpp2002 22 "%0GPU SCOPE - Skip processing scope alloc." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
}
#typev dxgpuscope_cpp982 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp983 18 "%0GPU SCOPE: Counter not selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp976 17 "%0GPU SCOPE: Counter selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp974 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp962 16 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp953 15 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1247 21 "%0Scope: Incorrect stage mode footer usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
#typev dxgpuscope_cpp1233 20 "%0Scope: Incorrect stage mode header usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
// PDB:  qcdx11arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:19:368 (UTC) [tracepdb]
#typev dxgpuscope_cpp1054 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::AddCounterToString
{
}
#typev dxgpuscope_cpp105 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Create
{
}
#typev dxgpuscope_cpp128 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Destroy
{
}
#typev dxgpuscope_cpp301 11 "%0GPU SCOPE: Disabled" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Disable
{
}
#typev dxgpuscope_cpp445 14 "%0GPU SCOPE: All Counter Allocations Failed. GPU SCOPE Disabled." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
}
#typev dxgpuscope_cpp373 13 "%0GPU SCOPE: Error: Invalid/Unsupported Mode: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
m_scopeState.scopeMode, ItemLong -- 10
}
#typev dxgpuscope_cpp347 12 "%0GPU SCOPE: Error: Could not open file: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
gpuScopeFilename, ItemString -- 10
}
#typev dxgpuscope_cpp2010 23 "%0GPU SCOPE: Error: Invalid Packet Type: %10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
*(pHostRead - 1), ItemLong -- 10
}
#typev dxgpuscope_cpp2002 22 "%0GPU SCOPE - Skip processing scope alloc." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
}
#typev dxgpuscope_cpp983 18 "%0GPU SCOPE: Counter not selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp982 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp976 17 "%0GPU SCOPE: Counter selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp974 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp962 16 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp953 15 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1247 21 "%0Scope: Incorrect stage mode footer usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
#typev dxgpuscope_cpp1233 20 "%0Scope: Incorrect stage mode header usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
// PDB:  qcdx11chpeum7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:46:698 (UTC) [tracepdb]
#typev dxgpuscope_cpp1054 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::AddCounterToString
{
}
#typev dxgpuscope_cpp105 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Create
{
}
#typev dxgpuscope_cpp128 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Destroy
{
}
#typev dxgpuscope_cpp301 11 "%0GPU SCOPE: Disabled" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Disable
{
}
#typev dxgpuscope_cpp445 14 "%0GPU SCOPE: All Counter Allocations Failed. GPU SCOPE Disabled." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
}
#typev dxgpuscope_cpp373 13 "%0GPU SCOPE: Error: Invalid/Unsupported Mode: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
m_scopeState.scopeMode, ItemLong -- 10
}
#typev dxgpuscope_cpp347 12 "%0GPU SCOPE: Error: Could not open file: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
gpuScopeFilename, ItemString -- 10
}
#typev dxgpuscope_cpp2010 23 "%0GPU SCOPE: Error: Invalid Packet Type: %10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
*(pHostRead - 1), ItemLong -- 10
}
#typev dxgpuscope_cpp2002 22 "%0GPU SCOPE - Skip processing scope alloc." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
}
#typev dxgpuscope_cpp982 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp983 18 "%0GPU SCOPE: Counter not selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp976 17 "%0GPU SCOPE: Counter selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp974 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp962 16 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp953 15 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1247 21 "%0Scope: Incorrect stage mode footer usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
#typev dxgpuscope_cpp1233 20 "%0Scope: Incorrect stage mode header usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
// PDB:  qcdx11x86um7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:35:308 (UTC) [tracepdb]
#typev dxgpuscope_cpp1054 19 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::AddCounterToString
{
}
#typev dxgpuscope_cpp105 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Create
{
}
#typev dxgpuscope_cpp128 10 "%0Destroy" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Destroy
{
}
#typev dxgpuscope_cpp301 11 "%0GPU SCOPE: Disabled" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::Disable
{
}
#typev dxgpuscope_cpp445 14 "%0GPU SCOPE: All Counter Allocations Failed. GPU SCOPE Disabled." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
}
#typev dxgpuscope_cpp373 13 "%0GPU SCOPE: Error: Invalid/Unsupported Mode: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
m_scopeState.scopeMode, ItemLong -- 10
}
#typev dxgpuscope_cpp347 12 "%0GPU SCOPE: Error: Could not open file: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::Init
{
gpuScopeFilename, ItemString -- 10
}
#typev dxgpuscope_cpp2010 23 "%0GPU SCOPE: Error: Invalid Packet Type: %10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
*(pHostRead - 1), ItemLong -- 10
}
#typev dxgpuscope_cpp2002 22 "%0GPU SCOPE - Skip processing scope alloc." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ParseSpace
{
}
#typev dxgpuscope_cpp983 18 "%0GPU SCOPE: Counter not selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp976 17 "%0GPU SCOPE: Counter selected: %10!s!:%11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
pPerfCounter->groupName, ItemString -- 10
pPerfCounter->counterType.counterId, ItemLong -- 11
}
#typev dxgpuscope_cpp962 16 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp953 15 "%0GPU SCOPE: Error: Could not print counter info to string" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=scope FUNC=DxGpuScope::ReserveCounterList
{
}
#typev dxgpuscope_cpp1247 21 "%0Scope: Incorrect stage mode footer usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
#typev dxgpuscope_cpp1233 20 "%0Scope: Incorrect stage mode header usage" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=scope FUNC=DxGpuScope::SampleStageInternal
{
}
