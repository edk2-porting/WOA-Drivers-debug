// PDB:  qcbattmngr850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
d865d9b1-2a2f-344d-752e-9566a0982428 BattMngr // SRC=BattMngrTech_BattErrHandle_R1.c MJ= MN=
#typev BattMngrPlat_SMChg_FGGge_R3_c3842 12 "%0BattMngrTech_BattErrHandle_getPendingActions:: return Pending Actions = %10!d!      (%11!s!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrPlat_SMChg_FGGge_R3_Check_For_Error
{
*pPending_actions, ItemLong -- 10
*pPending_actions, ItemEnum(BATTMNGRTECH_BATTERRHANDLE_ACTION_ID) -- 11
}
// PDB:  qcbattmngr850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev BattMngrPlat_SMChg_FGGge_R3_c471 10 "%0BattMngrTech_BattErrHandle_Init::++" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrPlat_SMChg_FGGge_R3_Init
{
}
// PDB:  qcbattmngr850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev BattMngrPlat_SMChg_FGGge_R3_c4691 13 "%0BattMngrTech_BattErrHandle_finishActions:: Actions %10!d! finished" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrPlat_SMChg_FGGge_R3_executeBattErrHandlingAction
{
finished_actions, ItemLong -- 10
}
// PDB:  qcbattmngr850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev BattMngrPlat_SMChg_FGGge_R3_c4673 12 "%0BattMngrTech_BattErrHandle_getPendingActions:: return Pending Actions = %10!d!      (%11!s!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrPlat_SMChg_FGGge_R3_executeBattErrHandlingAction
{
*pPending_actions, ItemLong -- 10
*pPending_actions, ItemEnum(BATTMNGRTECH_BATTERRHANDLE_ACTION_ID) -- 11
}
// PDB:  qcbattmngr850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev BattMngrTech_BattErrHandle_R1_c407 19 "%0BattMangrPlatAcpi_SMChg_FGGge_ParseAndFill_AcpiData::Battery Error Handling Enable = %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_ParseAndFill_AcpiData
{
currentArgument->Argument, ItemLong -- 10
}
#typev BattMngrTech_BattErrHandle_R1_c395 18 "%0qcbattmngr::ERROR::Incorrect number of acpi entries for Battery Error Handling, expected=%10!d!,received=%11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_ParseAndFill_AcpiData
{
BATTMNGR_ACPI_BATTERRHANDLE_ARGS, ItemLong -- 10
numberOfConfigItems, ItemLong -- 11
}
#typev BattMngrTech_BattErrHandle_R1_c387 17 "%0BattMngrTech_BattErrHandle_ParseAndFill_AcpiData::++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_ParseAndFill_AcpiData
{
}
#typev BattMngrTech_BattErrHandle_R1_c546 27 "%0BattMngrTech_BattErrHandle_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_BATTERRHANDLE_OUT_OP_RANGE_ST_ACTION is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_UpdateRegistryData
{
sBattsBATTMNGR_Tech_BattErrHandle_InitActionCfg[BATTMNGRTECH_BATTERRHANDLE_STATE_ID_OUT_OP_RANGE], ItemLong -- 10
}
#typev BattMngrTech_BattErrHandle_R1_c536 26 "%0BattMngrTech_BattErrHandle_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_BATTERRHANDLE_INVALID_ST_ACTION is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_UpdateRegistryData
{
sBattsBATTMNGR_Tech_BattErrHandle_InitActionCfg[BATTMNGRTECH_BATTERRHANDLE_STATE_ID_INVALID], ItemLong -- 10
}
#typev BattMngrTech_BattErrHandle_R1_c526 25 "%0BattMngrTech_BattErrHandle_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_BATTERRHANDLE_NOTPRESENT_ST_ACTION is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_UpdateRegistryData
{
sBattsBATTMNGR_Tech_BattErrHandle_InitActionCfg[BATTMNGRTECH_BATTERRHANDLE_STATE_ID_NOT_PRESENT], ItemLong -- 10
}
#typev BattMngrTech_BattErrHandle_R1_c516 24 "%0BattMngrTech_BattErrHandle_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_BATTERRHANDLE_UNKNOWN_ST_ACTION is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_UpdateRegistryData
{
sBattsBATTMNGR_Tech_BattErrHandle_InitActionCfg[BATTMNGRTECH_BATTERRHANDLE_STATE_ID_UNKNOWN], ItemLong -- 10
}
#typev BattMngrTech_BattErrHandle_R1_c506 23 "%0BattMngrTech_BattErrHandle_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_BATTERRHANDLE_SMART_AUTH_ST_ACTION is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_UpdateRegistryData
{
sBattsBATTMNGR_Tech_BattErrHandle_InitActionCfg[BATTMNGRTECH_BATTERRHANDLE_STATE_ID_SMART_AUTHENTICATED], ItemLong -- 10
}
#typev BattMngrTech_BattErrHandle_R1_c496 22 "%0BattMngrTech_BattErrHandle_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_BATTERRHANDLE_NORMAL_ST_ACTION is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_UpdateRegistryData
{
sBattsBATTMNGR_Tech_BattErrHandle_InitActionCfg[BATTMNGRTECH_BATTERRHANDLE_STATE_ID_NORMAL], ItemLong -- 10
}
#typev BattMngrTech_BattErrHandle_R1_c486 21 "%0BattMngrTech_BattErrHandle_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_BATTERRHANDLE_DEBUG_ST_ACTION is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_UpdateRegistryData
{
sBattsBATTMNGR_Tech_BattErrHandle_InitActionCfg[BATTMNGRTECH_BATTERRHANDLE_STATE_ID_DEBUG], ItemLong -- 10
}
#typev BattMngrTech_BattErrHandle_R1_c476 20 "%0BattMngrTech_BattErrHandle_UpdateRegistryData::Registry for BATTMNGR_REGISTRY_BATTERRHANDLE_FEATURE_EN is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_UpdateRegistryData
{
regData, ItemLong -- 10
}
#typev BattMngrTech_BattErrHandle_R1_c174 13 "%0BattMngrTech_BattErrHandle_finishActions:: Actions %10!d! finished" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_finishActions
{
finished_actions, ItemLong -- 10
}
#typev BattMngrTech_BattErrHandle_R1_c133 11 "%0BattMngrTech_BattErrHandle_getBattErrState:: return Battery Error State = %10!d! (%11!s!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_getBattErrState
{
*pBattErrSt, ItemLong -- 10
*pBattErrSt, ItemEnum(BATTMNGRTECH_BATTERRHANDLE_STATE_ID) -- 11
}
#typev BattMngrTech_BattErrHandle_R1_c123 16 "%0BattMngrTech_BattErrHandle_HelperCalculateBattErrorHandlingState:: Calculate Battery Error State = %10!d!     (%11!s!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_getBattErrState
{
sBattsBATTMNGR_Tech_BattErrHandle_current_state, ItemLong -- 10
sBattsBATTMNGR_Tech_BattErrHandle_current_state, ItemEnum(BATTMNGRTECH_BATTERRHANDLE_STATE_ID) -- 11
}
#typev BattMngrTech_BattErrHandle_R1_c123 15 "%0BattMngrTech_BattErrHandle_HelperCalculateBattErrorHandlingState:: Battery Category = %10!d!, Battery Present = %11!d!, Battery Temperature in Op. Range = %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_getBattErrState
{
currBattSt.BattCategory, ItemLong -- 10
currBattSt.IsBattPresent ? 1 : 0, ItemLong -- 11
currBattSt.IsBattInOpRange ? 1 : 0, ItemLong -- 12
}
#typev BattMngrTech_BattErrHandle_R1_c119 14 "%0BattMngrTech_BattErrHandle_HelperCheckBattStateChange:: Battery State Changed!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_BattErrHandle FUNC=BattMngrTech_BattErrHandle_getBattErrState
{
}
#enumv BATTMNGRTECH_BATTERRHANDLE_ACTION_ID
{
BATTMNGRTECH_BATTERRHANDLE_ACTION_ID_NONE,0x0
BATTMNGRTECH_BATTERRHANDLE_ACTION_ID_RELOAD_CHGTABLE,0x1
BATTMNGRTECH_BATTERRHANDLE_ACTION_ID_ERR_SHUTDOWN,0x2
BATTMNGRTECH_BATTERRHANDLE_ACTION_ID_EMERGENCY_SHUTDOWN,0x4
BATTMNGRTECH_BATTERRHANDLE_ACTION_ID_ENABLE_TESTMODE,0x8
BATTMNGRTECH_BATTERRHANDLE_ACTION_ID_MAX,0x8
}
#enumv BATTMNGRTECH_BATTERRHANDLE_STATE_ID
{
BATTMNGRTECH_BATTERRHANDLE_STATE_ID_ENTRY,0x0
BATTMNGRTECH_BATTERRHANDLE_STATE_ID_DEBUG,0x1
BATTMNGRTECH_BATTERRHANDLE_STATE_ID_NORMAL,0x2
BATTMNGRTECH_BATTERRHANDLE_STATE_ID_SMART_AUTHENTICATED,0x3
BATTMNGRTECH_BATTERRHANDLE_STATE_ID_UNKNOWN,0x4
BATTMNGRTECH_BATTERRHANDLE_STATE_ID_NOT_PRESENT,0x5
BATTMNGRTECH_BATTERRHANDLE_STATE_ID_INVALID,0x6
BATTMNGRTECH_BATTERRHANDLE_STATE_ID_OUT_OP_RANGE,0x7
BATTMNGRTECH_BATTERRHANDLE_STATE_ID_MAX,0x8
}
