// PDB:  qcpep850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
fa34dc42-5697-39ec-3543-b2585f9ea63e PEP // SRC=PEP_DCVS_Utility.c MJ= MN=
#typev PEP_DCVS_Utility_c105 10 "%0 [Info] PEP_DCVS_Utility.c::%!FUNC! :status = %10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_THERMAL_FLAG_LMH FUNC=CollectCPUComponentRundown
{
status, ItemLong -- 10
}
#typev PEP_DCVS_Utility_c454 11 "%0 [Warn] PEP_DCVS_Utility.c::%!FUNC! :WARNING: Tried to access uninitialized cpu domain [%10!d!] data" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=GetCpuDomainCurrentPerfLevel
{
aDomain->domainId, ItemLong -- 10
}
#typev PEP_DCVS_Utility_c910 19 "%0 [Info] PEP_DCVS_Utility.c::%!FUNC! :DcvsL3CachePerfSet: Setting a FLOOR on L3 cache frequency to: %10!d! for testing" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=RegistryAppliedL3PerfContraints
{
pL3CacheProp->desiredPerfLevel, ItemLong -- 10
}
#typev PEP_DCVS_Utility_c899 18 "%0 [Info] PEP_DCVS_Utility.c::%!FUNC! :DcvsL3CachePerfSet: Setting a CEILING on L3 cache frequency to: %10!d! for testing" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=RegistryAppliedL3PerfContraints
{
pL3CacheProp->desiredPerfLevel, ItemLong -- 10
}
#typev PEP_DCVS_Utility_c826 17 "%0 [Err ] PEP_DCVS_Utility.c::%!FUNC!::826 :Failed to get max frequency for Big CPU from ClkRgm" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
}
#typev PEP_DCVS_Utility_c816 16 "%0 [Err ] PEP_DCVS_Utility.c::%!FUNC!::816 :Failed to get max frequency for Little CPU from ClkRgm" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
}
#typev PEP_DCVS_Utility_c806 15 "%0 [Err ] PEP_DCVS_Utility.c::%!FUNC!::806 :Failed to get max perf level for Big CPU from ClkRgm" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
}
#typev PEP_DCVS_Utility_c797 14 "%0 [Err ] PEP_DCVS_Utility.c::%!FUNC!::797 :Failed to get max perf level for Little CPU from ClkRgm" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
}
#typev PEP_DCVS_Utility_c788 13 "%0 [Err ] PEP_DCVS_Utility.c::%!FUNC!::788 :Normalizing factor is less than 1" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
}
#typev PEP_DCVS_Utility_c770 12 "%0 [Crit] PEP_DCVS_Utility.c::%!FUNC! :CPU normalization is disabled" //   LEVEL=TRACE_LEVEL_CRITICAL FLAGS=PEP_DCVS_FLAG_GENERIC FUNC=returnCpuNormalizingfactor
{
}
