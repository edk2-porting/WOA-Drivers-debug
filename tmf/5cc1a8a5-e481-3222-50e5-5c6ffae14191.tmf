// PDB:  qcsmmu7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
5cc1a8a5-e481-3222-50e5-5c6ffae14191 SMMU // SRC=SmmuTreeInterface.cpp MJ= MN=
#typev SmmuTreeInterface_cpp433 41 "%0 SmmuTreeInterface.cpp::%!FUNC! :CALLSTACK Returning 0x%10!08x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=CleanupPep
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp420 40 "%0 SmmuTreeInterface.cpp::%!FUNC!::420 :ERROR IoUnregisterPlugPlayNotification failed 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=CleanupPep
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp412 39 "%0 SmmuTreeInterface.cpp::%!FUNC! :WARNING Already unregistered for PEP Device Interface Class notification." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=CleanupPep
{
}
#typev SmmuTreeInterface_cpp405 38 "%0 SmmuTreeInterface.cpp::%!FUNC!::405 :ERROR Invalid parameter 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=CleanupPep
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp433 41 "%0 SmmuTreeInterface.cpp::%!FUNC! :CALLSTACK Returning 0x%10!08x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`CleanupPep'::`1'::fin$0
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp420 40 "%0 SmmuTreeInterface.cpp::%!FUNC!::420 :ERROR IoUnregisterPlugPlayNotification failed 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`CleanupPep'::`1'::fin$0
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp412 39 "%0 SmmuTreeInterface.cpp::%!FUNC! :WARNING Already unregistered for PEP Device Interface Class notification." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`CleanupPep'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp405 38 "%0 SmmuTreeInterface.cpp::%!FUNC!::405 :ERROR Invalid parameter 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`CleanupPep'::`1'::fin$0
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp507 44 "%0 SmmuTreeInterface.cpp::%!FUNC!::507 :WdfIoTargetOpen failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=CreateAndOpenTarget
{
}
#typev SmmuTreeInterface_cpp489 43 "%0 SmmuTreeInterface.cpp::%!FUNC!::489 :WdfIoTargetCreate failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=CreateAndOpenTarget
{
}
#typev SmmuTreeInterface_cpp475 42 "%0 SmmuTreeInterface.cpp::%!FUNC!::475 :DeviceContext is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=CreateAndOpenTarget
{
}
#typev SmmuTreeInterface_cpp507 44 "%0 SmmuTreeInterface.cpp::%!FUNC!::507 :WdfIoTargetOpen failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`CreateAndOpenTarget'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp489 43 "%0 SmmuTreeInterface.cpp::%!FUNC!::489 :WdfIoTargetCreate failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`CreateAndOpenTarget'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp475 42 "%0 SmmuTreeInterface.cpp::%!FUNC!::475 :DeviceContext is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`CreateAndOpenTarget'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp351 37 "%0 SmmuTreeInterface.cpp::%!FUNC!::351 :Invalid Device Context" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=InitializePep
{
}
#typev SmmuTreeInterface_cpp351 37 "%0 SmmuTreeInterface.cpp::%!FUNC!::351 :Invalid Device Context" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`InitializePep'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp81 10 "%0 SmmuTreeInterface.cpp::%!FUNC!::81 :Error: Both Pass through(%10!d!) and Sk Service(%11!d!) interfaces are not ready together." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=IsTreeServiceAvailable
{
Context->IsSecureProgPassThroughUp, ItemLong -- 10
Context->IsSecureProgSkServiceUp, ItemLong -- 11
}
#typev SmmuTreeInterface_cpp221 24 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=PassThroughInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp209 23 "%0 SmmuTreeInterface.cpp::%!FUNC!::209 :Passthrough interface arrival notification." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PassThroughInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp204 22 "%0 SmmuTreeInterface.cpp::%!FUNC!::204 :PassThroughServiceInfo.ServiceMajorVersion : 0x%10!x! is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PassThroughInterfacePostOpenCallback
{
Context->PassThroughServiceInfo.ServiceMajorVersion, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp198 21 "%0 SmmuTreeInterface.cpp::%!FUNC!::198 :PassThroughServiceInfo.InterfaceVersion : 0x%10!x! is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PassThroughInterfacePostOpenCallback
{
Context->PassThroughServiceInfo.InterfaceVersion, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp166 20 "%0 SmmuTreeInterface.cpp::%!FUNC!::166 :Error:QueryPassThroughServiceInfo failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PassThroughInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp160 19 "%0 SmmuTreeInterface.cpp::%!FUNC!::160 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PassThroughInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp152 18 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=PassThroughInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp221 24 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`PassThroughInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp209 23 "%0 SmmuTreeInterface.cpp::%!FUNC!::209 :Passthrough interface arrival notification." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PassThroughInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp204 22 "%0 SmmuTreeInterface.cpp::%!FUNC!::204 :PassThroughServiceInfo.ServiceMajorVersion : 0x%10!x! is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PassThroughInterfacePostOpenCallback'::`1'::fin$0
{
Context->PassThroughServiceInfo.ServiceMajorVersion, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp198 21 "%0 SmmuTreeInterface.cpp::%!FUNC!::198 :PassThroughServiceInfo.InterfaceVersion : 0x%10!x! is invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PassThroughInterfacePostOpenCallback'::`1'::fin$0
{
Context->PassThroughServiceInfo.InterfaceVersion, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp166 20 "%0 SmmuTreeInterface.cpp::%!FUNC!::166 :Error:QueryPassThroughServiceInfo failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PassThroughInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp160 19 "%0 SmmuTreeInterface.cpp::%!FUNC!::160 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PassThroughInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp152 18 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`PassThroughInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp251 28 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=PassThroughInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp245 27 "%0 SmmuTreeInterface.cpp::%!FUNC!::245 :Driver Dependency: Connection to the dependent PassThrough interface was removed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PassThroughInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp240 26 "%0 SmmuTreeInterface.cpp::%!FUNC!::240 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PassThroughInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp232 25 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=PassThroughInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp251 28 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`PassThroughInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp245 27 "%0 SmmuTreeInterface.cpp::%!FUNC!::245 :Driver Dependency: Connection to the dependent PassThrough interface was removed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PassThroughInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp240 26 "%0 SmmuTreeInterface.cpp::%!FUNC!::240 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PassThroughInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp232 25 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`PassThroughInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp619 47 "%0 SmmuTreeInterface.cpp::%!FUNC!::619 :Unable to locate the request interface GUID: %10!s!. NTSTATUS: 0x%11!08X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=QueryDeviceInterface
{
interfaceGuid, ItemGuid -- 10
status, ItemLong -- 11
}
#typev SmmuTreeInterface_cpp606 46 "%0 SmmuTreeInterface.cpp::%!FUNC!::606 :Invalid GUID" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=QueryDeviceInterface
{
}
#typev SmmuTreeInterface_cpp585 45 "%0 SmmuTreeInterface.cpp::%!FUNC!::585 :Invalid IOTarget" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=QueryDeviceInterface
{
}
#typev SmmuTreeInterface_cpp619 47 "%0 SmmuTreeInterface.cpp::%!FUNC!::619 :Unable to locate the request interface GUID: %10!s!. NTSTATUS: 0x%11!08X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`QueryDeviceInterface'::`1'::fin$0
{
interfaceGuid, ItemGuid -- 10
status, ItemLong -- 11
}
#typev SmmuTreeInterface_cpp606 46 "%0 SmmuTreeInterface.cpp::%!FUNC!::606 :Invalid GUID" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`QueryDeviceInterface'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp585 45 "%0 SmmuTreeInterface.cpp::%!FUNC!::585 :Invalid IOTarget" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`QueryDeviceInterface'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp140 17 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=QueryPassThroughServiceInfo
{
}
#typev SmmuTreeInterface_cpp132 16 "%0 SmmuTreeInterface.cpp::%!FUNC!::132 :Error: Query Pass Through Service Information failed with status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=QueryPassThroughServiceInfo
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp126 15 "%0 SmmuTreeInterface.cpp::%!FUNC!::126 :Error: Query Pass Through Service Information failed with status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=QueryPassThroughServiceInfo
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp121 14 "%0 SmmuTreeInterface.cpp::%!FUNC! :PassThrough Interface Version:0x%10!08X!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=QueryPassThroughServiceInfo
{
pServiceInfo->InterfaceVersion, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp120 13 "%0 SmmuTreeInterface.cpp::%!FUNC! :Querying Pass Through Service Information succeeded." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=QueryPassThroughServiceInfo
{
}
#typev SmmuTreeInterface_cpp100 12 "%0 SmmuTreeInterface.cpp::%!FUNC!::100 :Error: Input arguments passed to TreeQueryPassThroughServiceInfo function are not valid status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=QueryPassThroughServiceInfo
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp93 11 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=QueryPassThroughServiceInfo
{
}
#typev SmmuTreeInterface_cpp140 17 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`QueryPassThroughServiceInfo'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp132 16 "%0 SmmuTreeInterface.cpp::%!FUNC!::132 :Error: Query Pass Through Service Information failed with status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`QueryPassThroughServiceInfo'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp126 15 "%0 SmmuTreeInterface.cpp::%!FUNC!::126 :Error: Query Pass Through Service Information failed with status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`QueryPassThroughServiceInfo'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp121 14 "%0 SmmuTreeInterface.cpp::%!FUNC! :PassThrough Interface Version:0x%10!08X!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`QueryPassThroughServiceInfo'::`1'::fin$0
{
pServiceInfo->InterfaceVersion, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp120 13 "%0 SmmuTreeInterface.cpp::%!FUNC! :Querying Pass Through Service Information succeeded." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`QueryPassThroughServiceInfo'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp100 12 "%0 SmmuTreeInterface.cpp::%!FUNC!::100 :Error: Input arguments passed to TreeQueryPassThroughServiceInfo function are not valid status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`QueryPassThroughServiceInfo'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp93 11 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`QueryPassThroughServiceInfo'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp287 32 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=SKInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp275 31 "%0 SmmuTreeInterface.cpp::%!FUNC!::275 :SkService interface arrival notification." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SKInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp270 30 "%0 SmmuTreeInterface.cpp::%!FUNC!::270 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SKInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp262 29 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=SKInterfacePostOpenCallback
{
}
#typev SmmuTreeInterface_cpp287 32 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`SKInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp275 31 "%0 SmmuTreeInterface.cpp::%!FUNC!::275 :SkService interface arrival notification." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SKInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp270 30 "%0 SmmuTreeInterface.cpp::%!FUNC!::270 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SKInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp262 29 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`SKInterfacePostOpenCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp317 36 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=SKInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp311 35 "%0 SmmuTreeInterface.cpp::%!FUNC!::311 :Driver Dependency: Connection to the dependent DiagRouter interface was removed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SKInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp306 34 "%0 SmmuTreeInterface.cpp::%!FUNC!::306 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SKInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp298 33 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=SKInterfacePreCloseCallback
{
}
#typev SmmuTreeInterface_cpp317 36 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`SKInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp311 35 "%0 SmmuTreeInterface.cpp::%!FUNC!::311 :Driver Dependency: Connection to the dependent DiagRouter interface was removed." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SKInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp306 34 "%0 SmmuTreeInterface.cpp::%!FUNC!::306 :Device Context invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SKInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp298 33 "%0 SmmuTreeInterface.cpp::%!FUNC! :Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`SKInterfacePreCloseCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp707 52 "%0 SmmuTreeInterface.cpp::%!FUNC!::707 :CloseAndDestroyTarget Failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SMMUPepInterfaceNotficationCallback
{
}
#typev SmmuTreeInterface_cpp699 51 "%0 SmmuTreeInterface.cpp::%!FUNC!::699 :Unable to get PEP device object" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SMMUPepInterfaceNotficationCallback
{
}
#typev SmmuTreeInterface_cpp693 50 "%0 SmmuTreeInterface.cpp::%!FUNC!::693 :TrEE Standard interface query Failed!!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SMMUPepInterfaceNotficationCallback
{
}
#typev SmmuTreeInterface_cpp686 49 "%0 SmmuTreeInterface.cpp::%!FUNC!::686 :CreateAndOpenTarget Failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SMMUPepInterfaceNotficationCallback
{
}
#typev SmmuTreeInterface_cpp668 48 "%0 SmmuTreeInterface.cpp::%!FUNC!::668 : Invalid parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SMMUPepInterfaceNotficationCallback
{
}
#typev SmmuTreeInterface_cpp707 52 "%0 SmmuTreeInterface.cpp::%!FUNC!::707 :CloseAndDestroyTarget Failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SMMUPepInterfaceNotficationCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp699 51 "%0 SmmuTreeInterface.cpp::%!FUNC!::699 :Unable to get PEP device object" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SMMUPepInterfaceNotficationCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp693 50 "%0 SmmuTreeInterface.cpp::%!FUNC!::693 :TrEE Standard interface query Failed!!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SMMUPepInterfaceNotficationCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp686 49 "%0 SmmuTreeInterface.cpp::%!FUNC!::686 :CreateAndOpenTarget Failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SMMUPepInterfaceNotficationCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp668 48 "%0 SmmuTreeInterface.cpp::%!FUNC!::668 : Invalid parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SMMUPepInterfaceNotficationCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp978 65 "%0 SmmuTreeInterface.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=SmmuEvtIrpPreprocessQueryDevRelations
{
}
#typev SmmuTreeInterface_cpp970 64 "%0 SmmuTreeInterface.cpp::%!FUNC! :Error: Unable to deliver IRP successfully to framework." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=SmmuEvtIrpPreprocessQueryDevRelations
{
}
#typev SmmuTreeInterface_cpp944 63 "%0 SmmuTreeInterface.cpp::%!FUNC!::944 :Error: Conditions to process IRP are not valid." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtIrpPreprocessQueryDevRelations
{
}
#typev SmmuTreeInterface_cpp937 62 "%0 SmmuTreeInterface.cpp::%!FUNC! :Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=SmmuEvtIrpPreprocessQueryDevRelations
{
}
#typev SmmuTreeInterface_cpp978 65 "%0 SmmuTreeInterface.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`SmmuEvtIrpPreprocessQueryDevRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp970 64 "%0 SmmuTreeInterface.cpp::%!FUNC! :Error: Unable to deliver IRP successfully to framework." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`SmmuEvtIrpPreprocessQueryDevRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp944 63 "%0 SmmuTreeInterface.cpp::%!FUNC!::944 :Error: Conditions to process IRP are not valid." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtIrpPreprocessQueryDevRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp937 62 "%0 SmmuTreeInterface.cpp::%!FUNC! :Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`SmmuEvtIrpPreprocessQueryDevRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp1170 75 "%0 SmmuTreeInterface.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp1130 74 "%0 SmmuTreeInterface.cpp::%!FUNC!::1130 :Unable to allocate required memory to copy relation count" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp1105 73 "%0 SmmuTreeInterface.cpp::%!FUNC! :IoInvalidateDeviceRelations was not issued by TrEE driver" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp1094 72 "%0 SmmuTreeInterface.cpp::%!FUNC!::1094 :IoTarget is shutting down or gone" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp1078 71 "%0 SmmuTreeInterface.cpp::%!FUNC!::1078 :IoTarget is shutting down or gone" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp1060 70 "%0 SmmuTreeInterface.cpp::%!FUNC!::1060 :IoTarget not yet open with Passthrough or SK Service" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp1044 69 "%0 SmmuTreeInterface.cpp::%!FUNC!::1044 :DMFDeviceContext not found in %!FUNC!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp1035 68 "%0 SmmuTreeInterface.cpp::%!FUNC!::1035 :SMMU device context is invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp1028 67 "%0 SmmuTreeInterface.cpp::%!FUNC!::1028 :Invalid Device Context: status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuEvtQueryDevicePowerRelations
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp1021 66 "%0 SmmuTreeInterface.cpp::%!FUNC! :Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=SmmuEvtQueryDevicePowerRelations
{
}
#typev SmmuTreeInterface_cpp1170 75 "%0 SmmuTreeInterface.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp1130 74 "%0 SmmuTreeInterface.cpp::%!FUNC!::1130 :Unable to allocate required memory to copy relation count" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp1105 73 "%0 SmmuTreeInterface.cpp::%!FUNC! :IoInvalidateDeviceRelations was not issued by TrEE driver" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp1094 72 "%0 SmmuTreeInterface.cpp::%!FUNC!::1094 :IoTarget is shutting down or gone" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp1078 71 "%0 SmmuTreeInterface.cpp::%!FUNC!::1078 :IoTarget is shutting down or gone" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp1060 70 "%0 SmmuTreeInterface.cpp::%!FUNC!::1060 :IoTarget not yet open with Passthrough or SK Service" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp1044 69 "%0 SmmuTreeInterface.cpp::%!FUNC!::1044 :DMFDeviceContext not found in %!FUNC!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp1035 68 "%0 SmmuTreeInterface.cpp::%!FUNC!::1035 :SMMU device context is invalid!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp1028 67 "%0 SmmuTreeInterface.cpp::%!FUNC!::1028 :Invalid Device Context: status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuTreeInterface_cpp1021 66 "%0 SmmuTreeInterface.cpp::%!FUNC! :Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`SmmuEvtQueryDevicePowerRelations'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp898 61 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp889 60 "%0 SmmuTreeInterface.cpp::%!FUNC!::889 :DMF_DeviceInterfaceTarget_SendSynchronously failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp882 59 "%0 SmmuTreeInterface.cpp::%!FUNC!::882 :TZ returned bad data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp875 58 "%0 SmmuTreeInterface.cpp::%!FUNC!::875 :TZ returned bad status" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp838 57 "%0 SmmuTreeInterface.cpp::%!FUNC!::838 :Unsupported TZ Command ID" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp788 55 "%0 SmmuTreeInterface.cpp::%!FUNC!::788 :DMFDeviceContext not found in %!FUNC!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp777 54 "%0 SmmuTreeInterface.cpp::%!FUNC!::777 :Both PassThrough and SK Service are not ready together." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp760 53 "%0 SmmuTreeInterface.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp898 61 "%0 SmmuTreeInterface.cpp::%!FUNC! :Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp889 60 "%0 SmmuTreeInterface.cpp::%!FUNC!::889 :DMF_DeviceInterfaceTarget_SendSynchronously failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp882 59 "%0 SmmuTreeInterface.cpp::%!FUNC!::882 :TZ returned bad data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp875 58 "%0 SmmuTreeInterface.cpp::%!FUNC!::875 :TZ returned bad status" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp838 57 "%0 SmmuTreeInterface.cpp::%!FUNC!::838 :Unsupported TZ Command ID" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp788 55 "%0 SmmuTreeInterface.cpp::%!FUNC!::788 :DMFDeviceContext not found in %!FUNC!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp777 54 "%0 SmmuTreeInterface.cpp::%!FUNC!::777 :Both PassThrough and SK Service are not ready together." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp760 53 "%0 SmmuTreeInterface.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`TreePerformMemProtectAssignACVM'::`1'::fin$0
{
}
