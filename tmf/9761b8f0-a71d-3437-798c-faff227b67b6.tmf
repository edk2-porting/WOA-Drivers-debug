// PDB:  qcdx12arm32um7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
9761b8f0-a71d-3437-798c-faff227b67b6 video // SRC=venusdecodedevice.cpp MJ= MN=
#typev venusvideofactory_cpp103 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
#typev venusvideofactory_cpp103 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
// PDB:  qcdx12arm32um7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusdecodedevice_cpp342 29 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp324 28 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
// PDB:  qcdx12arm32um7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusdecodedevice_cpp357 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp356 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp2122 147 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp2012 143 "%0AllocInterlaceBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2007 142 "%0AllocInterlaceBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2118 146 "%0DxResource create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2105 145 "%0DxMemObj create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2087 144 "%0Interlace Intermediate Buf DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1987 141 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp2297 157 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp2166 151 "%0AllocInternalBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2161 150 "%0AllocInternalBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2293 156 "%0AllocInternalBuffer DxResource create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2280 155 "%0AllocInternalBuffer DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2262 154 "%0AllocInternalBuffer DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp2232 153 "%4!s!::[%!FUNC!]video internal buffer %10!u! allocation success 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
createData.pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp2222 152 "%0Invalid internal buffer index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp2151 149 "%0AllocInternalBuffer allocation failed: incorrect index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp2141 148 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1390 105 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1221 102 "%4!s!::[%!FUNC!]null arg" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1246 104 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1239 103 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1215 101 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp4962 349 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4842 343 "%0Invalid input params %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4854 344 "%0failed to calloc %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4903 346 "%0Int DPB DxResource create fail %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
m_descData.sampleWidth, ItemLong -- 11
m_descData.sampleHeight, ItemLong -- 12
}
#typev venusdecodedevice_cpp4947 348 "%0Int DPB resource DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4930 347 "%0Int DPB resource DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4896 345 "%4!s!::[%!FUNC!]Int DPB DxResource create success, corresp DxMemObj to be created" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4838 342 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp2385 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp2346 161 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp3498 264 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3495 263 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3488 262 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3473 261 "%4!s!::[%!FUNC!]H264 Decode IntraPicFlag %10!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.PicParams.sBitFields.IntraPicFlag, ItemLong -- 10
}
#typev venusdecodedevice_cpp3468 260 "%4!s!::[%!FUNC!]H264 Decode IntraPicFlag %10!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.PicParams.sBitFields.IntraPicFlag, ItemLong -- 10
}
#typev venusdecodedevice_cpp3459 259 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3444 258 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3426 257 "%4!s!::[%!FUNC!]OPBIntermAddress : 0x%10!I64x!,  AllocationSize: %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.OPBIntermAddress[0].PackEngineAddress, ItemLongLongX -- 10
m_h264DecodeFrame.OPBIntermAddress[0].PackOffset, ItemLong -- 11
}
#typev venusdecodedevice_cpp3409 256 "%0HandleH264InterlaceInterweaved failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3401 255 "%4!s!::[%!FUNC!]Interlace Content Detected, field_pic_flag %10!d!, MbaffFrameFlag %11!d! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.PicParams.sBitFields.field_pic_flag, ItemLong -- 10
m_h264DecodeFrame.PicParams.sBitFields.MbaffFrameFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3399 327 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3391 254 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3360 253 "%0ValidateH264CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3357 202 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3357 201 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!, AssociatedFlag:  %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
m_h264DecodeFrame.PicParams.CurrPic.sPicEntry.AssociatedFlag, ItemLong -- 12
}
#typev venusdecodedevice_cpp3357 200 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3357 199 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3350 252 "%0ValidateH264RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3346 177 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3346 176 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp3346 175 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3346 174 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3337 251 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3316 250 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3298 249 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3686 279 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3683 278 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3676 277 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3661 276 "%4!s!::[%!FUNC!]HEVC Decode IDR Flag %10!d! ,IntraPicFlag %11!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.PicParams.IdrPicFlag, ItemLong -- 10
m_hevcDecodeFrame.PicParams.IntraPicFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3656 275 "%4!s!::[%!FUNC!]HEVC Decode IDR Flag %10!d! ,IntraPicFlag %11!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.PicParams.IdrPicFlag, ItemLong -- 10
m_hevcDecodeFrame.PicParams.IntraPicFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3647 274 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3632 273 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3611 272 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3575 270 "%0ValidateHevcCurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3572 206 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3572 205 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp3572 204 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3572 203 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3565 269 "%0ValidateHevcRefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3553 268 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3532 267 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3524 266 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3519 265 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3823 288 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3819 287 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_vc1DecodeFrame.SliceInfo.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3812 286 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3794 285 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3780 284 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3737 283 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3722 282 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3712 281 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3707 280 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp4181 316 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4178 315 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp4171 314 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4157 313 "%4!s!::[%!FUNC!]VP8 Decode Frametype flag %10!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp4153 312 "%4!s!::[%!FUNC!]VP8 Decode Frametype flag %10!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp4144 311 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4129 310 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4108 309 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp4077 308 "%0ValidateVp8CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4074 210 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4074 209 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp4074 208 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4074 207 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4067 307 "%0ValidateVp8RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4055 306 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4034 305 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4028 304 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp4023 303 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4002 302 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3999 301 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp9DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3992 300 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3978 299 "%4!s!::[%!FUNC!]VP9 Decode Frametype flag %10!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp3974 298 "%4!s!::[%!FUNC!]VP9 Decode Frametype flag %10!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp3965 297 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3950 296 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3929 295 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3898 294 "%0ValidateVp9CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3895 214 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3895 213 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp3895 212 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3895 211 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3888 293 "%0ValidateVp9RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3876 292 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3855 291 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3848 290 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3843 289 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp1969 140 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1963 139 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1956 138 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1935 137 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp4532 328 "%4!s!::[%!FUNC!]Enabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4529 331 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4529 330 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
// PDB:  qcdx12arm32um7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusdecodedevice_cpp826 68 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp822 67 "%0FillBitStreamData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp815 66 "%0Invalid heap pointer in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp807 65 "%0Error: nInputFilledLen > nInputAllocLen in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp800 64 "%4!s!::[%!FUNC!]nInputAllocLen %10!u! nInputFilledLen %11!u! nInputStartOffset %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
pBitStream->nInputAllocLen, ItemLong -- 10
pBitStream->nInputFilledLen, ItemLong -- 11
pBitStream->nInputStartOffset, ItemLong -- 12
}
#typev venusdecodedevice_cpp791 63 "%0Error: BitStream Address is 0x0 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp770 62 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp5187 366 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5172 365 "%4!s!::[%!FUNC!]OPB Buffer Address : 0x%10!I64x! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
pOpbInfo[Plane0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp5161 364 "%0Error: OPB Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp5141 363 "%0pHeap->pMemObj invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5131 362 "%0pHeap invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5120 361 "%0pSubResInfo invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5110 360 "%0OpbResource invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5105 359 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5224 370 "%0Error: Descriptor width/height is greater than resource width/height" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp5273 376 "%4!s!::[%!FUNC!]Buffer req: OPB Res compress flag = %10!u!, OPB Buffer updated compress flag = %11!u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_pOpbResource->IsUBWCompressedRes(), ItemLong -- 10
pOpbInfo->BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp5271 375 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferHeight[0], ItemLong -- 10
pOpbInfo->BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5269 374 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferStride[0], ItemLong -- 10
pOpbInfo->BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5267 373 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferAlignment[0], ItemLong -- 10
pOpbInfo->BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5265 372 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferSize[0], ItemLong -- 10
pOpbInfo->BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5264 371 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp5217 369 "%4!s!::[%!FUNC!]OPB Resource Width: %10!u! , OPB Resource Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->width, ItemLong -- 10
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->height, ItemLong -- 11
}
#typev venusdecodedevice_cpp5216 368 "%4!s!::[%!FUNC!]DPB width: %10!u! , Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_dpbDesc.width, ItemLong -- 10
m_dpbDesc.height, ItemLong -- 11
}
#typev venusdecodedevice_cpp5204 367 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp5078 358 "%4!s!::[%!FUNC!]Exit " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5075 357 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5067 356 "%4!s!::[%!FUNC!]Failed to alloc interlace intermediate buffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5061 355 "%4!s!::[%!FUNC!]Enable Interlace 3-PASS mode " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5034 354 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5027 353 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5011 352 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp482 43 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp465 42 "%0DPB-OPB split mode driver required, NULL DPB unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp460 41 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, after 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp454 40 "%0DPB-OPB split mode changed by OS after 1st frame, not handled " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp440 39 "%0DPB-OPB split mode driver required, failed to allocate DPB" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp415 38 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp409 37 "%4!s!::[%!FUNC!]DPB-OPB split due to OS ref_only, 1st frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp404 36 "%0DPB-OPB split due to OS ref_only is already set, not expected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp397 35 "%4!s!::[%!FUNC!]DPB-OPB split 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
splitType, ItemLong -- 10
}
#typev venusdecodedevice_cpp390 34 "%0DPB-OPB split due to OS but not DPB set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp385 33 "%0DPB-OPB split due to OS but ref_only not set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp374 32 "%4!s!::[%!FUNC!]Enter " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp711 58 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp699 57 "%0HwDecodeFrame fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp645 56 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp632 55 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp606 54 "%4!s!::[%!FUNC!]OPB Resource: %10!p! changed, IsAOTResource: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pOpbResource, ItemPtr -- 10
isAoTBuffer(m_pOpbResource), ItemLong -- 11
}
#typev venusdecodedevice_cpp600 53 "%4!s!::[%!FUNC!]updateOpbInfo as the OPB Resource changed" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp583 52 "%0pDecFrameData->pOPBBuffer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp574 51 "%4!s!::[%!FUNC!]DPB Res Compress Flag = %10!u!, AOT Resource: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pDpbResource->IsUBWCompressedRes(), ItemLong -- 10
isAoTBuffer(m_pDpbResource), ItemLong -- 11
}
#typev venusdecodedevice_cpp556 50 "%0numDpbBuffers is greater than what driver can handle: %10!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
pDecFrameData->numDpbBuffers, ItemLong -- 10
}
#typev venusdecodedevice_cpp551 49 "%4!s!::[%!FUNC!]Enter profile=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp286 25 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp282 336 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp282 334 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp282 335 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp282 333 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp276 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp276 351 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp276 350 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp276 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp270 136 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp270 135 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp270 134 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp265 24 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp249 23 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp191 332 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp243 22 "%0AllocateInternalVideoBuffers fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp240 160 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp240 159 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp240 158 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp233 21 "%0InitDecodePictureBufferCount fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp217 133 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp217 132 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp217 131 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp197 72 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp197 71 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp197 70 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp197 69 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp180 20 "%4!s!::[%!FUNC!]SessionType %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
SessionType(), ItemLong -- 10
}
#typev venusdecodedevice_cpp104 14 "%0Invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp156 19 "%4!s!::[%!FUNC!]dims %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.sampleWidth, ItemLong -- 10
m_descData.sampleHeight, ItemLong -- 11
sampleMB, ItemLong -- 12
}
#typev venusdecodedevice_cpp142 18 "%4!s!::[%!FUNC!]Same DPB & OPB format, no split required %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp136 17 "%0DPB & OPB format differ %10!u! %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
m_opbDesc.format, ItemLong -- 11
}
#typev venusdecodedevice_cpp126 16 "%0Invalid output format %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp112 15 "%4!s!::[%!FUNC!]outputFormat = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp64 13 "%4!s!::[%!FUNC!]Decode profile = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.profile, ItemLong -- 10
}
#typev venusdecodedevice_cpp50 12 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp4492 327 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwIsContentInterlaced
{
}
#typev venusdecodedevice_cpp1867 130 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1863 129 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1856 128 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1828 127 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1760 121 "%0pDpbResource not allocated" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1809 126 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1801 125 "%4!s!::[%!FUNC!]DPBList[%10!d!]: 0x%11!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
refIndex, ItemLong -- 10
pDbList[refIndex][Plane0].PackEngineAddress, ItemLongLongX -- 11
}
#typev venusdecodedevice_cpp1793 124 "%4!s!::[%!FUNC!]Fill currpic index: %10!d! in DPB list with Video VA %11!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
currDpbIndexFromPicParam, ItemLong -- 10
videoVirtualAddress, ItemLongLongX -- 11
}
#typev venusdecodedevice_cpp1778 123 "%4!s!::[%!FUNC!]DPB list changed, updateDPBList" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1767 122 "%0dPBIndex: %10!d! is greater than pDpbResource->NumSubResources: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
pDecFrameData->dPBIndex, ItemLong -- 10
pDpbResource->NumSubResources(), ItemLong -- 11
}
#typev venusdecodedevice_cpp1742 120 "%0currDpbIndexFromPicParam: %10!d! is greater than numDpbBuffers: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
currDpbIndexFromPicParam, ItemLong -- 10
numDpbBuffers, ItemLong -- 11
}
#typev venusdecodedevice_cpp1735 110 "%4!s!::[%!FUNC!]outputSubResIndex: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
outputSubResIndex, ItemLong -- 10
}
#typev venusdecodedevice_cpp1735 109 "%0Invalid Profile %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp1691 116 "%0indexDpbResource:%10!d! is greater than numSubResources: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
indexDpbResource, ItemLong -- 10
numSubResources, ItemLong -- 11
}
#typev venusdecodedevice_cpp1725 119 "%4!s!::[%!FUNC!]For indexDpbResource: %10!d!, DPBResource: %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
indexDpbResource, ItemLong -- 10
pDpbResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1710 118 "%4!s!::[%!FUNC!]Changing ReferenceBfrAddr: %10!I64x! at refIndexFromPicParam: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
videoVirtualAddress, ItemLongLongX -- 10
refIndexFromPicParam, ItemLong -- 11
}
#typev venusdecodedevice_cpp1699 117 "%4!s!::[%!FUNC!]pDpbResource is NULL for refIndexFromPicParam: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
refIndexFromPicParam, ItemLong -- 10
}
#typev venusdecodedevice_cpp1681 108 "%4!s!::[%!FUNC!]GetRefIndexFromPicParams: %10!d! for refIndex: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
refIndexFromPicParam, ItemLong -- 10
refIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp1681 107 "%0Invalid Profile %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp1681 106 "%0not valid refIndex" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1666 115 "%0invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1640 114 "%0pHeap->pMemObj NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1630 113 "%0pHeap NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1616 112 "%0pDpbResource NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1611 111 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1192 100 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp1187 99 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1180 98 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1167 97 "%4!s!::[%!FUNC!]buff reqs %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
bufferReqs.BufferAlignment[0], ItemLong -- 12
}
#typev venusdecodedevice_cpp1140 96 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp930 76 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp926 75 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp919 74 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp893 73 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp5331 382 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp5323 380 "%0m_pDpbResource is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp5328 381 "%0SubResourceInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp5312 379 "%4!s!::[%!FUNC!]Aligned Buffer Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
reqOutput.stride[0], ItemLong -- 10
reqOutput.height[0], ItemLong -- 11
}
#typev venusdecodedevice_cpp5311 378 "%4!s!::[%!FUNC!]DPB Resource Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
actualResourceWidth, ItemLong -- 10
actualResourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp5294 377 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp528 48 "%4!s!::[%!FUNC!]Bitstream Resource: %10!p! , Size: %11!I64u!, Offset: %12!I64u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pBitStreamData->pBitStreamBuffer, ItemPtr -- 10
pBitStreamData->size, ItemULongLong -- 11
pBitStreamData->offset, ItemULongLong -- 12
}
#typev venusdecodedevice_cpp522 47 "%4!s!::[%!FUNC!]Reference index is :%10!d! at index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pSubmitData->refIndexList[i], ItemLong -- 10
i, ItemLong -- 11
}
#typev venusdecodedevice_cpp514 46 "%4!s!::[%!FUNC!]DPB Resource: %10!p! at index: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pDecFrameData->pdpbBuffers[i], ItemPtr -- 10
i, ItemLong -- 11
}
#typev venusdecodedevice_cpp509 45 "%4!s!::[%!FUNC!]OPB Resource: %10!p!, OPB Index: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pDecFrameData->pOPBBuffer, ItemPtr -- 10
pDecFrameData->oPBIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp503 44 "%4!s!::[%!FUNC!]Output DPB Resource: %10!p! at output DPB Index: %11!d!, numDpbBuffers: %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pDecFrameData->pDPBBuffer, ItemPtr -- 10
pDecFrameData->dPBIndex, ItemLong -- 11
pDecFrameData->numDpbBuffers, ItemLong -- 12
}
#typev venusdecodedevice_cpp4461 326 "%0Invalid Command %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
CmdType, ItemLong -- 10
}
#typev venusdecodedevice_cpp4447 325 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4416 324 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4385 323 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4354 322 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4324 321 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4295 320 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4282 319 "%0Stop Session Submit failed: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4255 318 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4242 317 "%0Start Session Submit failed:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1123 95 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1118 94 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1111 93 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1094 92 "%4!s!::[%!FUNC!]Pixel format = %10!u!, IsCompressed = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.PixelFormat, ItemLong -- 10
bufferReqs.BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp1092 91 "%4!s!::[%!FUNC!]Resource Width = %10!u!, Resource Height     = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.resourceWidth, ItemLong -- 10
bufferReqs.resourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp1088 90 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1062 88 "%0OPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1076 89 "%4!s!::[%!FUNC!]Setting following DPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1053 87 "%0DPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1039 86 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1019 85 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp1014 84 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1007 83 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp989 82 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferHeight[0], ItemLong -- 10
bufferReqs.BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp987 81 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferStride[0], ItemLong -- 10
bufferReqs.BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp985 80 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferAlignment[0], ItemLong -- 10
bufferReqs.BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp983 79 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp982 78 "%4!s!::[%!FUNC!]Setting following buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp947 77 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp3003 221 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2964 217 "%4!s!::[%!FUNC!]PicParams H264 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
m_h264DecodeFrame.PicParams.RefFrameList[i].sPicEntry.Index7Bits, ItemLong -- 10
m_h264DecodeFrame.PicParams.RefFrameList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2955 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2955 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2955 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2952 216 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2989 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2989 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2989 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2986 219 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2979 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2979 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2979 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2976 218 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2996 220 "%4!s!::[%!FUNC!]unhandled buffer type %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2944 215 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp3078 228 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3041 224 "%4!s!::[%!FUNC!]PicParams HEVC sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
m_hevcDecodeFrame.PicParams.RefPicList[i].sPicEntry.Index7Bits, ItemLong -- 10
m_hevcDecodeFrame.PicParams.RefPicList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3032 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3032 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3032 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3029 223 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3065 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3065 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3065 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3062 226 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3055 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3055 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3055 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3052 225 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3072 227 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3021 222 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3140 234 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3106 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3106 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3106 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3103 230 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3126 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3126 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3126 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3123 232 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3116 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3116 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3116 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3113 231 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3133 233 "%4!s!::[%!FUNC!]unhandled buffer %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3096 229 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp4814 341 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4800 339 "%0invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4789 338 "%0invalid private data pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4744 337 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3277 248 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3251 245 "%4!s!::[%!FUNC!]PicParams VP8 %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.lst_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp3245 244 "%4!s!::[%!FUNC!]PicParams VP8 %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.gld_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp3239 243 "%4!s!::[%!FUNC!]PicParams VP8 %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.alt_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp3232 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3232 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3232 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3229 242 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3263 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3263 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3263 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3260 246 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3270 247 "%0Invalid Buffer Type %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3221 241 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3203 240 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3176 237 "%4!s!::[%!FUNC!]PicParams VP9 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
m_vp9DecodeFrame.PicParams.frame_refs[i].sPicEntry.Index7Bits, ItemLong -- 10
m_vp9DecodeFrame.PicParams.frame_refs[i].sPicEntry.Index7Bits, ItemLong -- 11
}
#typev venusdecodedevice_cpp3168 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3168 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3168 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3165 236 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3190 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3190 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3190 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3187 238 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3197 239 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3158 235 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp4587 329 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp4590 327 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp4583 327 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp2612 182 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2604 181 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2597 180 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2588 179 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2571 178 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2728 193 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2721 192 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2714 191 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2705 190 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2689 189 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2682 188 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2673 187 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2659 186 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2652 185 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2644 184 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2629 183 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2786 198 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
#typev venusdecodedevice_cpp2778 197 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2771 196 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2762 195 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2745 194 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
// PDB:  qcdx12arm64xum7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusvideofactory_cpp103 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
#typev venusvideofactory_cpp103 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
// PDB:  qcdx12arm64xum7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusdecodedevice_cpp342 29 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp324 28 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
// PDB:  qcdx12arm64xum7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusdecodedevice_cpp357 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp356 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp2122 147 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp2012 143 "%0AllocInterlaceBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2007 142 "%0AllocInterlaceBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2118 146 "%0DxResource create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2105 145 "%0DxMemObj create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2087 144 "%0Interlace Intermediate Buf DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1987 141 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp2297 157 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp2166 151 "%0AllocInternalBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2161 150 "%0AllocInternalBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2293 156 "%0AllocInternalBuffer DxResource create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2280 155 "%0AllocInternalBuffer DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2262 154 "%0AllocInternalBuffer DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp2232 153 "%4!s!::[%!FUNC!]video internal buffer %10!u! allocation success 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
createData.pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp2217 152 "%0Invalid internal buffer index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp2151 149 "%0AllocInternalBuffer allocation failed: incorrect index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp2141 148 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1390 105 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1221 102 "%4!s!::[%!FUNC!]null arg" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1246 104 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1239 103 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1215 101 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp749 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp745 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp732 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp4962 349 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4842 343 "%0Invalid input params %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4854 344 "%0failed to calloc %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4903 346 "%0Int DPB DxResource create fail %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
m_descData.sampleWidth, ItemLong -- 11
m_descData.sampleHeight, ItemLong -- 12
}
#typev venusdecodedevice_cpp4947 348 "%0Int DPB resource DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4930 347 "%0Int DPB resource DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4896 345 "%4!s!::[%!FUNC!]Int DPB DxResource create success, corresp DxMemObj to be created" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4838 342 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp3498 264 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3495 263 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3488 262 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3473 261 "%4!s!::[%!FUNC!]H264 Decode IntraPicFlag %10!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.PicParams.sBitFields.IntraPicFlag, ItemLong -- 10
}
#typev venusdecodedevice_cpp3468 260 "%4!s!::[%!FUNC!]H264 Decode IntraPicFlag %10!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.PicParams.sBitFields.IntraPicFlag, ItemLong -- 10
}
#typev venusdecodedevice_cpp3459 259 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3444 258 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3426 257 "%4!s!::[%!FUNC!]OPBIntermAddress : 0x%10!I64x!,  AllocationSize: %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.OPBIntermAddress[0].PackEngineAddress, ItemLongLongX -- 10
m_h264DecodeFrame.OPBIntermAddress[0].PackOffset, ItemLong -- 11
}
#typev venusdecodedevice_cpp3409 256 "%0HandleH264InterlaceInterweaved failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3401 255 "%4!s!::[%!FUNC!]Interlace Content Detected, field_pic_flag %10!d!, MbaffFrameFlag %11!d! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.PicParams.sBitFields.field_pic_flag, ItemLong -- 10
m_h264DecodeFrame.PicParams.sBitFields.MbaffFrameFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3399 327 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3391 254 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3360 253 "%0ValidateH264CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3357 202 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3357 201 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!, AssociatedFlag:  %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
m_h264DecodeFrame.PicParams.CurrPic.sPicEntry.AssociatedFlag, ItemLong -- 12
}
#typev venusdecodedevice_cpp3357 200 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3357 199 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3350 252 "%0ValidateH264RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3337 251 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3316 250 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3298 249 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3686 279 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3683 278 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3676 277 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3661 276 "%4!s!::[%!FUNC!]HEVC Decode IDR Flag %10!d! ,IntraPicFlag %11!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.PicParams.IdrPicFlag, ItemLong -- 10
m_hevcDecodeFrame.PicParams.IntraPicFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3656 275 "%4!s!::[%!FUNC!]HEVC Decode IDR Flag %10!d! ,IntraPicFlag %11!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.PicParams.IdrPicFlag, ItemLong -- 10
m_hevcDecodeFrame.PicParams.IntraPicFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3647 274 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3632 273 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3611 272 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3575 270 "%0ValidateHevcCurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3572 206 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3572 205 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp3572 204 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3572 203 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3565 269 "%0ValidateHevcRefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3553 268 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3532 267 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3524 266 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3519 265 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3823 288 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3819 287 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_vc1DecodeFrame.SliceInfo.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3812 286 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3794 285 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3780 284 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3737 283 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3722 282 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3712 281 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3707 280 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp4181 316 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4178 315 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp4171 314 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4157 313 "%4!s!::[%!FUNC!]VP8 Decode Frametype flag %10!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp4153 312 "%4!s!::[%!FUNC!]VP8 Decode Frametype flag %10!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp4144 311 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4129 310 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4108 309 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp4077 308 "%0ValidateVp8CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4074 210 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4074 209 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp4074 208 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4074 207 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4067 307 "%0ValidateVp8RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4055 306 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4034 305 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4028 304 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp4023 303 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4002 302 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3999 301 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp9DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3992 300 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3978 299 "%4!s!::[%!FUNC!]VP9 Decode Frametype flag %10!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp3974 298 "%4!s!::[%!FUNC!]VP9 Decode Frametype flag %10!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp3965 297 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3950 296 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3929 295 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3898 294 "%0ValidateVp9CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3895 214 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3895 213 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp3895 212 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3895 211 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3888 293 "%0ValidateVp9RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3876 292 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3855 291 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3848 290 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3843 289 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp1969 140 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1963 139 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1956 138 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1935 137 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp309 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp306 351 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp306 350 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp302 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp4532 328 "%4!s!::[%!FUNC!]Enabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4529 331 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4529 330 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
// PDB:  qcdx12arm64xum7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusdecodedevice_cpp826 68 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp822 67 "%0FillBitStreamData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp815 66 "%0Invalid heap pointer in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp807 65 "%0Error: nInputFilledLen > nInputAllocLen in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp800 64 "%4!s!::[%!FUNC!]nInputAllocLen %10!u! nInputFilledLen %11!u! nInputStartOffset %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
pBitStream->nInputAllocLen, ItemLong -- 10
pBitStream->nInputFilledLen, ItemLong -- 11
pBitStream->nInputStartOffset, ItemLong -- 12
}
#typev venusdecodedevice_cpp791 63 "%0Error: BitStream Address is 0x0 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp770 62 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp5187 366 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5172 365 "%4!s!::[%!FUNC!]OPB Buffer Address : 0x%10!I64x! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
pOpbInfo[Plane0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp5161 364 "%0Error: OPB Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp5141 363 "%0pHeap->pMemObj invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5131 362 "%0pHeap invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5120 361 "%0pSubResInfo invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5110 360 "%0OpbResource invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5105 359 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5224 370 "%0Error: Descriptor width/height is greater than resource width/height" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp5273 376 "%4!s!::[%!FUNC!]Buffer req: OPB Res compress flag = %10!u!, OPB Buffer updated compress flag = %11!u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_pOpbResource->IsUBWCompressedRes(), ItemLong -- 10
pOpbInfo->BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp5271 375 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferHeight[0], ItemLong -- 10
pOpbInfo->BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5269 374 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferStride[0], ItemLong -- 10
pOpbInfo->BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5267 373 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferAlignment[0], ItemLong -- 10
pOpbInfo->BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5265 372 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferSize[0], ItemLong -- 10
pOpbInfo->BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5264 371 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp5217 369 "%4!s!::[%!FUNC!]OPB Resource Width: %10!u! , OPB Resource Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->width, ItemLong -- 10
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->height, ItemLong -- 11
}
#typev venusdecodedevice_cpp5216 368 "%4!s!::[%!FUNC!]DPB width: %10!u! , Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_dpbDesc.width, ItemLong -- 10
m_dpbDesc.height, ItemLong -- 11
}
#typev venusdecodedevice_cpp5204 367 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp1532 108 "%4!s!::[%!FUNC!]GetRefIndexFromPicParams: %10!d! for refIndex: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::GetRefIndexFromPicParams
{
refIndexFromPicParam, ItemLong -- 10
refIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp1526 107 "%0Invalid Profile %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::GetRefIndexFromPicParams
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp1519 106 "%0not valid refIndex" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::GetRefIndexFromPicParams
{
}
#typev venusdecodedevice_cpp5078 358 "%4!s!::[%!FUNC!]Exit " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5075 357 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5067 356 "%4!s!::[%!FUNC!]Failed to alloc interlace intermediate buffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5061 355 "%4!s!::[%!FUNC!]Enable Interlace 3-PASS mode " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5034 354 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5027 353 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5011 352 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp482 43 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp465 42 "%0DPB-OPB split mode driver required, NULL DPB unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp460 41 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, after 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp454 40 "%0DPB-OPB split mode changed by OS after 1st frame, not handled " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp440 39 "%0DPB-OPB split mode driver required, failed to allocate DPB" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp415 38 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp409 37 "%4!s!::[%!FUNC!]DPB-OPB split due to OS ref_only, 1st frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp404 36 "%0DPB-OPB split due to OS ref_only is already set, not expected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp397 35 "%4!s!::[%!FUNC!]DPB-OPB split 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
splitType, ItemLong -- 10
}
#typev venusdecodedevice_cpp390 34 "%0DPB-OPB split due to OS but not DPB set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp385 33 "%0DPB-OPB split due to OS but ref_only not set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp374 32 "%4!s!::[%!FUNC!]Enter " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp711 58 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp699 57 "%0HwDecodeFrame fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp645 56 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp632 55 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp606 54 "%4!s!::[%!FUNC!]OPB Resource: %10!p! changed, IsAOTResource: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pOpbResource, ItemPtr -- 10
isAoTBuffer(m_pOpbResource), ItemLong -- 11
}
#typev venusdecodedevice_cpp600 53 "%4!s!::[%!FUNC!]updateOpbInfo as the OPB Resource changed" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp583 52 "%0pDecFrameData->pOPBBuffer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp574 51 "%4!s!::[%!FUNC!]DPB Res Compress Flag = %10!u!, AOT Resource: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pDpbResource->IsUBWCompressedRes(), ItemLong -- 10
isAoTBuffer(m_pDpbResource), ItemLong -- 11
}
#typev venusdecodedevice_cpp556 50 "%0numDpbBuffers is greater than what driver can handle: %10!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
pDecFrameData->numDpbBuffers, ItemLong -- 10
}
#typev venusdecodedevice_cpp551 49 "%4!s!::[%!FUNC!]Enter profile=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp286 25 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp282 336 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp282 334 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp282 335 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp282 333 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp279 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp279 161 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp270 136 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp270 135 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp270 134 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp265 24 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp249 23 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp191 332 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp243 22 "%0AllocateInternalVideoBuffers fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp240 160 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp240 159 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp240 158 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp233 21 "%0InitDecodePictureBufferCount fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp217 133 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp217 132 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp217 131 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp180 20 "%4!s!::[%!FUNC!]SessionType %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
SessionType(), ItemLong -- 10
}
#typev venusdecodedevice_cpp104 14 "%0Invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp156 19 "%4!s!::[%!FUNC!]dims %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.sampleWidth, ItemLong -- 10
m_descData.sampleHeight, ItemLong -- 11
sampleMB, ItemLong -- 12
}
#typev venusdecodedevice_cpp142 18 "%4!s!::[%!FUNC!]Same DPB & OPB format, no split required %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp136 17 "%0DPB & OPB format differ %10!u! %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
m_opbDesc.format, ItemLong -- 11
}
#typev venusdecodedevice_cpp126 16 "%0Invalid output format %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp112 15 "%4!s!::[%!FUNC!]outputFormat = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp64 13 "%4!s!::[%!FUNC!]Decode profile = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.profile, ItemLong -- 10
}
#typev venusdecodedevice_cpp50 12 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp4492 327 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwIsContentInterlaced
{
}
#typev venusdecodedevice_cpp1867 130 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1863 129 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1856 128 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1828 127 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1760 121 "%0pDpbResource not allocated" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1801 125 "%4!s!::[%!FUNC!]DPBList[%10!d!]: 0x%11!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
refIndex, ItemLong -- 10
pDbList[refIndex][Plane0].PackEngineAddress, ItemLongLongX -- 11
}
#typev venusdecodedevice_cpp1793 124 "%4!s!::[%!FUNC!]Fill currpic index: %10!d! in DPB list with Video VA %11!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
currDpbIndexFromPicParam, ItemLong -- 10
videoVirtualAddress, ItemLongLongX -- 11
}
#typev venusdecodedevice_cpp1778 123 "%4!s!::[%!FUNC!]DPB list changed, updateDPBList" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1767 122 "%0dPBIndex: %10!d! is greater than pDpbResource->NumSubResources: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
pDecFrameData->dPBIndex, ItemLong -- 10
pDpbResource->NumSubResources(), ItemLong -- 11
}
#typev venusdecodedevice_cpp1735 109 "%0Invalid Profile %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp1809 126 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1742 120 "%0currDpbIndexFromPicParam: %10!d! is greater than numDpbBuffers: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
currDpbIndexFromPicParam, ItemLong -- 10
numDpbBuffers, ItemLong -- 11
}
#typev venusdecodedevice_cpp1735 110 "%4!s!::[%!FUNC!]outputSubResIndex: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
outputSubResIndex, ItemLong -- 10
}
#typev venusdecodedevice_cpp1691 116 "%0indexDpbResource:%10!d! is greater than numSubResources: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
indexDpbResource, ItemLong -- 10
numSubResources, ItemLong -- 11
}
#typev venusdecodedevice_cpp1725 119 "%4!s!::[%!FUNC!]For indexDpbResource: %10!d!, DPBResource: %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
indexDpbResource, ItemLong -- 10
pDpbResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1710 118 "%4!s!::[%!FUNC!]Changing ReferenceBfrAddr: %10!I64x! at refIndexFromPicParam: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
videoVirtualAddress, ItemLongLongX -- 10
refIndexFromPicParam, ItemLong -- 11
}
#typev venusdecodedevice_cpp1699 117 "%4!s!::[%!FUNC!]pDpbResource is NULL for refIndexFromPicParam: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
refIndexFromPicParam, ItemLong -- 10
}
#typev venusdecodedevice_cpp1666 115 "%0invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1640 114 "%0pHeap->pMemObj NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1630 113 "%0pHeap NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1616 112 "%0pDpbResource NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1611 111 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1192 100 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp1187 99 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1180 98 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1167 97 "%4!s!::[%!FUNC!]buff reqs %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
bufferReqs.BufferAlignment[0], ItemLong -- 12
}
#typev venusdecodedevice_cpp1140 96 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp876 72 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp872 71 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp865 70 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp844 69 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp930 76 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp926 75 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp919 74 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp893 73 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp5331 382 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp5323 380 "%0m_pDpbResource is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp5328 381 "%0SubResourceInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp5312 379 "%4!s!::[%!FUNC!]Aligned Buffer Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
reqOutput.stride[0], ItemLong -- 10
reqOutput.height[0], ItemLong -- 11
}
#typev venusdecodedevice_cpp5311 378 "%4!s!::[%!FUNC!]DPB Resource Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
actualResourceWidth, ItemLong -- 10
actualResourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp5294 377 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp528 48 "%4!s!::[%!FUNC!]Bitstream Resource: %10!p! , Size: %11!I64u!, Offset: %12!I64u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pBitStreamData->pBitStreamBuffer, ItemPtr -- 10
pBitStreamData->size, ItemULongLong -- 11
pBitStreamData->offset, ItemULongLong -- 12
}
#typev venusdecodedevice_cpp522 47 "%4!s!::[%!FUNC!]Reference index is :%10!d! at index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pSubmitData->refIndexList[i], ItemLong -- 10
i, ItemLong -- 11
}
#typev venusdecodedevice_cpp514 46 "%4!s!::[%!FUNC!]DPB Resource: %10!p! at index: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pDecFrameData->pdpbBuffers[i], ItemPtr -- 10
i, ItemLong -- 11
}
#typev venusdecodedevice_cpp509 45 "%4!s!::[%!FUNC!]OPB Resource: %10!p!, OPB Index: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pDecFrameData->pOPBBuffer, ItemPtr -- 10
pDecFrameData->oPBIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp503 44 "%4!s!::[%!FUNC!]Output DPB Resource: %10!p! at output DPB Index: %11!d!, numDpbBuffers: %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pDecFrameData->pDPBBuffer, ItemPtr -- 10
pDecFrameData->dPBIndex, ItemLong -- 11
pDecFrameData->numDpbBuffers, ItemLong -- 12
}
#typev venusdecodedevice_cpp4461 326 "%0Invalid Command %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
CmdType, ItemLong -- 10
}
#typev venusdecodedevice_cpp4447 325 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4416 324 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4385 323 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4354 322 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4324 321 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4295 320 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4282 319 "%0Stop Session Submit failed: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4255 318 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4242 317 "%0Start Session Submit failed:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1123 95 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1118 94 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1111 93 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1094 92 "%4!s!::[%!FUNC!]Pixel format = %10!u!, IsCompressed = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.PixelFormat, ItemLong -- 10
bufferReqs.BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp1092 91 "%4!s!::[%!FUNC!]Resource Width = %10!u!, Resource Height     = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.resourceWidth, ItemLong -- 10
bufferReqs.resourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp1088 90 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1062 88 "%0OPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1076 89 "%4!s!::[%!FUNC!]Setting following DPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1053 87 "%0DPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1039 86 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1019 85 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp1014 84 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1007 83 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp989 82 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferHeight[0], ItemLong -- 10
bufferReqs.BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp987 81 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferStride[0], ItemLong -- 10
bufferReqs.BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp985 80 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferAlignment[0], ItemLong -- 10
bufferReqs.BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp983 79 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp982 78 "%4!s!::[%!FUNC!]Setting following buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp947 77 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp2964 217 "%4!s!::[%!FUNC!]PicParams H264 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
m_h264DecodeFrame.PicParams.RefFrameList[i].sPicEntry.Index7Bits, ItemLong -- 10
m_h264DecodeFrame.PicParams.RefFrameList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2952 216 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2986 219 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp3003 221 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2976 218 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2996 220 "%4!s!::[%!FUNC!]unhandled buffer type %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2944 215 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp3041 224 "%4!s!::[%!FUNC!]PicParams HEVC sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
m_hevcDecodeFrame.PicParams.RefPicList[i].sPicEntry.Index7Bits, ItemLong -- 10
m_hevcDecodeFrame.PicParams.RefPicList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3029 223 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3062 226 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3078 228 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3052 225 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3072 227 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3021 222 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3140 234 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3103 230 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3123 232 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3113 231 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3133 233 "%4!s!::[%!FUNC!]unhandled buffer %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3096 229 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp4814 341 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4800 339 "%0invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4789 338 "%0invalid private data pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4744 337 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3277 248 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3251 245 "%4!s!::[%!FUNC!]PicParams VP8 %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.lst_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp3245 244 "%4!s!::[%!FUNC!]PicParams VP8 %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.gld_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp3239 243 "%4!s!::[%!FUNC!]PicParams VP8 %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.alt_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp3229 242 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3260 246 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3270 247 "%0Invalid Buffer Type %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3221 241 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3176 237 "%4!s!::[%!FUNC!]PicParams VP9 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
m_vp9DecodeFrame.PicParams.frame_refs[i].sPicEntry.Index7Bits, ItemLong -- 10
m_vp9DecodeFrame.PicParams.frame_refs[i].sPicEntry.Index7Bits, ItemLong -- 11
}
#typev venusdecodedevice_cpp3165 236 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3187 238 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3203 240 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3197 239 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3158 235 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp4587 329 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp2554 177 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
}
#typev venusdecodedevice_cpp2546 176 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2538 175 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2522 174 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
}
#typev venusdecodedevice_cpp2604 181 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2597 180 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2612 182 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2588 179 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2571 178 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2728 193 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2721 192 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2714 191 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2705 190 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2689 189 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2682 188 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2673 187 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2659 186 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2652 185 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2644 184 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2629 183 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2778 197 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2771 196 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2786 198 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
#typev venusdecodedevice_cpp2762 195 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2745 194 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
// PDB:  qcdx12arm64xum7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusvideofactory_cpp103 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
#typev venusvideofactory_cpp103 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
// PDB:  qcdx12arm64xum7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusdecodedevice_cpp342 29 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp324 28 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
// PDB:  qcdx12arm64xum7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusdecodedevice_cpp357 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp356 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp2122 147 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp2012 143 "%0AllocInterlaceBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2007 142 "%0AllocInterlaceBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2118 146 "%0DxResource create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2105 145 "%0DxMemObj create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2087 144 "%0Interlace Intermediate Buf DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1987 141 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp2297 157 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp2166 151 "%0AllocInternalBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2161 150 "%0AllocInternalBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2293 156 "%0AllocInternalBuffer DxResource create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2280 155 "%0AllocInternalBuffer DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2262 154 "%0AllocInternalBuffer DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp2232 153 "%4!s!::[%!FUNC!]video internal buffer %10!u! allocation success 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
createData.pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp2217 152 "%0Invalid internal buffer index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp2151 149 "%0AllocInternalBuffer allocation failed: incorrect index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp2141 148 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1390 105 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1221 102 "%4!s!::[%!FUNC!]null arg" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1246 104 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1239 103 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1215 101 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp749 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp745 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp732 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp4962 349 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4842 343 "%0Invalid input params %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4854 344 "%0failed to calloc %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4903 346 "%0Int DPB DxResource create fail %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
m_descData.sampleWidth, ItemLong -- 11
m_descData.sampleHeight, ItemLong -- 12
}
#typev venusdecodedevice_cpp4947 348 "%0Int DPB resource DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4930 347 "%0Int DPB resource DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4896 345 "%4!s!::[%!FUNC!]Int DPB DxResource create success, corresp DxMemObj to be created" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4838 342 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp2385 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp2346 161 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp3498 264 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3495 263 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3488 262 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3473 261 "%4!s!::[%!FUNC!]H264 Decode IntraPicFlag %10!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.PicParams.sBitFields.IntraPicFlag, ItemLong -- 10
}
#typev venusdecodedevice_cpp3468 260 "%4!s!::[%!FUNC!]H264 Decode IntraPicFlag %10!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.PicParams.sBitFields.IntraPicFlag, ItemLong -- 10
}
#typev venusdecodedevice_cpp3459 259 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3444 258 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3426 257 "%4!s!::[%!FUNC!]OPBIntermAddress : 0x%10!I64x!,  AllocationSize: %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.OPBIntermAddress[0].PackEngineAddress, ItemLongLongX -- 10
m_h264DecodeFrame.OPBIntermAddress[0].PackOffset, ItemLong -- 11
}
#typev venusdecodedevice_cpp3409 256 "%0HandleH264InterlaceInterweaved failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3401 255 "%4!s!::[%!FUNC!]Interlace Content Detected, field_pic_flag %10!d!, MbaffFrameFlag %11!d! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.PicParams.sBitFields.field_pic_flag, ItemLong -- 10
m_h264DecodeFrame.PicParams.sBitFields.MbaffFrameFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3399 327 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3391 254 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3360 253 "%0ValidateH264CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3357 202 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3357 201 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!, AssociatedFlag:  %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
m_h264DecodeFrame.PicParams.CurrPic.sPicEntry.AssociatedFlag, ItemLong -- 12
}
#typev venusdecodedevice_cpp3357 200 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3357 199 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3350 252 "%0ValidateH264RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3337 251 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3316 250 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3298 249 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3683 278 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3676 277 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3661 276 "%4!s!::[%!FUNC!]HEVC Decode IDR Flag %10!d! ,IntraPicFlag %11!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.PicParams.IdrPicFlag, ItemLong -- 10
m_hevcDecodeFrame.PicParams.IntraPicFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3656 275 "%4!s!::[%!FUNC!]HEVC Decode IDR Flag %10!d! ,IntraPicFlag %11!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.PicParams.IdrPicFlag, ItemLong -- 10
m_hevcDecodeFrame.PicParams.IntraPicFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3647 274 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3686 279 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3632 273 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3611 272 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3575 270 "%0ValidateHevcCurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3572 206 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3572 205 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp3572 204 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3572 203 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3565 269 "%0ValidateHevcRefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3553 268 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3532 267 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3524 266 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3519 265 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3823 288 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3819 287 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_vc1DecodeFrame.SliceInfo.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3812 286 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3794 285 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3780 284 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3737 283 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3722 282 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3712 281 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3707 280 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp4178 315 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp4171 314 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4157 313 "%4!s!::[%!FUNC!]VP8 Decode Frametype flag %10!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp4153 312 "%4!s!::[%!FUNC!]VP8 Decode Frametype flag %10!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp4144 311 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4181 316 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4129 310 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4108 309 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp4077 308 "%0ValidateVp8CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4074 210 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4074 209 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp4074 208 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4074 207 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4067 307 "%0ValidateVp8RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4055 306 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4034 305 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4028 304 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp4023 303 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3999 301 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp9DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3992 300 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3978 299 "%4!s!::[%!FUNC!]VP9 Decode Frametype flag %10!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp3974 298 "%4!s!::[%!FUNC!]VP9 Decode Frametype flag %10!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp3965 297 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4002 302 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3950 296 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3929 295 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3898 294 "%0ValidateVp9CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3895 214 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3895 213 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp3895 212 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3895 211 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3888 293 "%0ValidateVp9RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3876 292 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3855 291 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3848 290 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3843 289 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp1969 140 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1963 139 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1956 138 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1935 137 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp309 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp306 351 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp306 350 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp302 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp4532 328 "%4!s!::[%!FUNC!]Enabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4529 331 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4529 330 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
// PDB:  qcdx12arm64xum7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusdecodedevice_cpp826 68 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp822 67 "%0FillBitStreamData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp815 66 "%0Invalid heap pointer in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp807 65 "%0Error: nInputFilledLen > nInputAllocLen in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp800 64 "%4!s!::[%!FUNC!]nInputAllocLen %10!u! nInputFilledLen %11!u! nInputStartOffset %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
pBitStream->nInputAllocLen, ItemLong -- 10
pBitStream->nInputFilledLen, ItemLong -- 11
pBitStream->nInputStartOffset, ItemLong -- 12
}
#typev venusdecodedevice_cpp791 63 "%0Error: BitStream Address is 0x0 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp770 62 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp5187 366 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5172 365 "%4!s!::[%!FUNC!]OPB Buffer Address : 0x%10!I64x! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
pOpbInfo[Plane0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp5161 364 "%0Error: OPB Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp5141 363 "%0pHeap->pMemObj invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5131 362 "%0pHeap invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5120 361 "%0pSubResInfo invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5110 360 "%0OpbResource invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5105 359 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5224 370 "%0Error: Descriptor width/height is greater than resource width/height" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp5273 376 "%4!s!::[%!FUNC!]Buffer req: OPB Res compress flag = %10!u!, OPB Buffer updated compress flag = %11!u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_pOpbResource->IsUBWCompressedRes(), ItemLong -- 10
pOpbInfo->BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp5271 375 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferHeight[0], ItemLong -- 10
pOpbInfo->BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5269 374 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferStride[0], ItemLong -- 10
pOpbInfo->BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5267 373 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferAlignment[0], ItemLong -- 10
pOpbInfo->BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5265 372 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferSize[0], ItemLong -- 10
pOpbInfo->BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5264 371 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp5217 369 "%4!s!::[%!FUNC!]OPB Resource Width: %10!u! , OPB Resource Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->width, ItemLong -- 10
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->height, ItemLong -- 11
}
#typev venusdecodedevice_cpp5216 368 "%4!s!::[%!FUNC!]DPB width: %10!u! , Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_dpbDesc.width, ItemLong -- 10
m_dpbDesc.height, ItemLong -- 11
}
#typev venusdecodedevice_cpp5204 367 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp1532 108 "%4!s!::[%!FUNC!]GetRefIndexFromPicParams: %10!d! for refIndex: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::GetRefIndexFromPicParams
{
refIndexFromPicParam, ItemLong -- 10
refIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp1526 107 "%0Invalid Profile %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::GetRefIndexFromPicParams
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp1519 106 "%0not valid refIndex" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::GetRefIndexFromPicParams
{
}
#typev venusdecodedevice_cpp5078 358 "%4!s!::[%!FUNC!]Exit " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5075 357 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5067 356 "%4!s!::[%!FUNC!]Failed to alloc interlace intermediate buffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5061 355 "%4!s!::[%!FUNC!]Enable Interlace 3-PASS mode " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5034 354 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5027 353 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5011 352 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp482 43 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp465 42 "%0DPB-OPB split mode driver required, NULL DPB unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp460 41 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, after 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp454 40 "%0DPB-OPB split mode changed by OS after 1st frame, not handled " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp440 39 "%0DPB-OPB split mode driver required, failed to allocate DPB" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp415 38 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp409 37 "%4!s!::[%!FUNC!]DPB-OPB split due to OS ref_only, 1st frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp404 36 "%0DPB-OPB split due to OS ref_only is already set, not expected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp397 35 "%4!s!::[%!FUNC!]DPB-OPB split 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
splitType, ItemLong -- 10
}
#typev venusdecodedevice_cpp390 34 "%0DPB-OPB split due to OS but not DPB set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp385 33 "%0DPB-OPB split due to OS but ref_only not set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp374 32 "%4!s!::[%!FUNC!]Enter " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp711 58 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp699 57 "%0HwDecodeFrame fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp645 56 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp632 55 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp606 54 "%4!s!::[%!FUNC!]OPB Resource: %10!p! changed, IsAOTResource: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pOpbResource, ItemPtr -- 10
isAoTBuffer(m_pOpbResource), ItemLong -- 11
}
#typev venusdecodedevice_cpp600 53 "%4!s!::[%!FUNC!]updateOpbInfo as the OPB Resource changed" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp583 52 "%0pDecFrameData->pOPBBuffer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp574 51 "%4!s!::[%!FUNC!]DPB Res Compress Flag = %10!u!, AOT Resource: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pDpbResource->IsUBWCompressedRes(), ItemLong -- 10
isAoTBuffer(m_pDpbResource), ItemLong -- 11
}
#typev venusdecodedevice_cpp556 50 "%0numDpbBuffers is greater than what driver can handle: %10!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
pDecFrameData->numDpbBuffers, ItemLong -- 10
}
#typev venusdecodedevice_cpp551 49 "%4!s!::[%!FUNC!]Enter profile=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp286 25 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp282 336 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp282 334 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp282 335 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp282 333 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp270 136 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp270 135 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp270 134 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp265 24 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp249 23 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp191 332 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp243 22 "%0AllocateInternalVideoBuffers fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp240 160 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp240 159 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp240 158 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp233 21 "%0InitDecodePictureBufferCount fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp217 133 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp217 132 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp217 131 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp180 20 "%4!s!::[%!FUNC!]SessionType %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
SessionType(), ItemLong -- 10
}
#typev venusdecodedevice_cpp104 14 "%0Invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp156 19 "%4!s!::[%!FUNC!]dims %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.sampleWidth, ItemLong -- 10
m_descData.sampleHeight, ItemLong -- 11
sampleMB, ItemLong -- 12
}
#typev venusdecodedevice_cpp142 18 "%4!s!::[%!FUNC!]Same DPB & OPB format, no split required %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp136 17 "%0DPB & OPB format differ %10!u! %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
m_opbDesc.format, ItemLong -- 11
}
#typev venusdecodedevice_cpp126 16 "%0Invalid output format %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp112 15 "%4!s!::[%!FUNC!]outputFormat = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp64 13 "%4!s!::[%!FUNC!]Decode profile = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.profile, ItemLong -- 10
}
#typev venusdecodedevice_cpp50 12 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp4492 327 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwIsContentInterlaced
{
}
#typev venusdecodedevice_cpp1867 130 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1863 129 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1856 128 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1828 127 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1809 126 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1760 121 "%0pDpbResource not allocated" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1801 125 "%4!s!::[%!FUNC!]DPBList[%10!d!]: 0x%11!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
refIndex, ItemLong -- 10
pDbList[refIndex][Plane0].PackEngineAddress, ItemLongLongX -- 11
}
#typev venusdecodedevice_cpp1793 124 "%4!s!::[%!FUNC!]Fill currpic index: %10!d! in DPB list with Video VA %11!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
currDpbIndexFromPicParam, ItemLong -- 10
videoVirtualAddress, ItemLongLongX -- 11
}
#typev venusdecodedevice_cpp1778 123 "%4!s!::[%!FUNC!]DPB list changed, updateDPBList" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1767 122 "%0dPBIndex: %10!d! is greater than pDpbResource->NumSubResources: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
pDecFrameData->dPBIndex, ItemLong -- 10
pDpbResource->NumSubResources(), ItemLong -- 11
}
#typev venusdecodedevice_cpp1735 109 "%0Invalid Profile %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp1742 120 "%0currDpbIndexFromPicParam: %10!d! is greater than numDpbBuffers: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
currDpbIndexFromPicParam, ItemLong -- 10
numDpbBuffers, ItemLong -- 11
}
#typev venusdecodedevice_cpp1735 110 "%4!s!::[%!FUNC!]outputSubResIndex: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
outputSubResIndex, ItemLong -- 10
}
#typev venusdecodedevice_cpp1691 116 "%0indexDpbResource:%10!d! is greater than numSubResources: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
indexDpbResource, ItemLong -- 10
numSubResources, ItemLong -- 11
}
#typev venusdecodedevice_cpp1725 119 "%4!s!::[%!FUNC!]For indexDpbResource: %10!d!, DPBResource: %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
indexDpbResource, ItemLong -- 10
pDpbResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1710 118 "%4!s!::[%!FUNC!]Changing ReferenceBfrAddr: %10!I64x! at refIndexFromPicParam: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
videoVirtualAddress, ItemLongLongX -- 10
refIndexFromPicParam, ItemLong -- 11
}
#typev venusdecodedevice_cpp1699 117 "%4!s!::[%!FUNC!]pDpbResource is NULL for refIndexFromPicParam: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
refIndexFromPicParam, ItemLong -- 10
}
#typev venusdecodedevice_cpp1666 115 "%0invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1640 114 "%0pHeap->pMemObj NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1630 113 "%0pHeap NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1616 112 "%0pDpbResource NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1611 111 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1192 100 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp1187 99 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1180 98 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1167 97 "%4!s!::[%!FUNC!]buff reqs %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
bufferReqs.BufferAlignment[0], ItemLong -- 12
}
#typev venusdecodedevice_cpp1140 96 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp876 72 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp872 71 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp865 70 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp844 69 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp930 76 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp926 75 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp919 74 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp893 73 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp5331 382 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp5323 380 "%0m_pDpbResource is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp5328 381 "%0SubResourceInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp5312 379 "%4!s!::[%!FUNC!]Aligned Buffer Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
reqOutput.stride[0], ItemLong -- 10
reqOutput.height[0], ItemLong -- 11
}
#typev venusdecodedevice_cpp5311 378 "%4!s!::[%!FUNC!]DPB Resource Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
actualResourceWidth, ItemLong -- 10
actualResourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp5294 377 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp528 48 "%4!s!::[%!FUNC!]Bitstream Resource: %10!p! , Size: %11!I64u!, Offset: %12!I64u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pBitStreamData->pBitStreamBuffer, ItemPtr -- 10
pBitStreamData->size, ItemULongLong -- 11
pBitStreamData->offset, ItemULongLong -- 12
}
#typev venusdecodedevice_cpp522 47 "%4!s!::[%!FUNC!]Reference index is :%10!d! at index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pSubmitData->refIndexList[i], ItemLong -- 10
i, ItemLong -- 11
}
#typev venusdecodedevice_cpp514 46 "%4!s!::[%!FUNC!]DPB Resource: %10!p! at index: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pDecFrameData->pdpbBuffers[i], ItemPtr -- 10
i, ItemLong -- 11
}
#typev venusdecodedevice_cpp509 45 "%4!s!::[%!FUNC!]OPB Resource: %10!p!, OPB Index: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pDecFrameData->pOPBBuffer, ItemPtr -- 10
pDecFrameData->oPBIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp503 44 "%4!s!::[%!FUNC!]Output DPB Resource: %10!p! at output DPB Index: %11!d!, numDpbBuffers: %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pDecFrameData->pDPBBuffer, ItemPtr -- 10
pDecFrameData->dPBIndex, ItemLong -- 11
pDecFrameData->numDpbBuffers, ItemLong -- 12
}
#typev venusdecodedevice_cpp4461 326 "%0Invalid Command %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
CmdType, ItemLong -- 10
}
#typev venusdecodedevice_cpp4447 325 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4416 324 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4385 323 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4354 322 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4324 321 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4295 320 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4282 319 "%0Stop Session Submit failed: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4255 318 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4242 317 "%0Start Session Submit failed:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1123 95 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1118 94 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1111 93 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1094 92 "%4!s!::[%!FUNC!]Pixel format = %10!u!, IsCompressed = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.PixelFormat, ItemLong -- 10
bufferReqs.BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp1092 91 "%4!s!::[%!FUNC!]Resource Width = %10!u!, Resource Height     = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.resourceWidth, ItemLong -- 10
bufferReqs.resourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp1088 90 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1062 88 "%0OPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1076 89 "%4!s!::[%!FUNC!]Setting following DPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1053 87 "%0DPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1039 86 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1019 85 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp1014 84 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1007 83 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp989 82 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferHeight[0], ItemLong -- 10
bufferReqs.BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp987 81 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferStride[0], ItemLong -- 10
bufferReqs.BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp985 80 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferAlignment[0], ItemLong -- 10
bufferReqs.BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp983 79 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp982 78 "%4!s!::[%!FUNC!]Setting following buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp947 77 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp2964 217 "%4!s!::[%!FUNC!]PicParams H264 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
m_h264DecodeFrame.PicParams.RefFrameList[i].sPicEntry.Index7Bits, ItemLong -- 10
m_h264DecodeFrame.PicParams.RefFrameList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2952 216 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2986 219 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp3003 221 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2976 218 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2996 220 "%4!s!::[%!FUNC!]unhandled buffer type %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2944 215 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp3041 224 "%4!s!::[%!FUNC!]PicParams HEVC sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
m_hevcDecodeFrame.PicParams.RefPicList[i].sPicEntry.Index7Bits, ItemLong -- 10
m_hevcDecodeFrame.PicParams.RefPicList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3029 223 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3062 226 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3078 228 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3052 225 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3072 227 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3021 222 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3140 234 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3103 230 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3123 232 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3113 231 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3133 233 "%4!s!::[%!FUNC!]unhandled buffer %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3096 229 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp4814 341 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4800 339 "%0invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4789 338 "%0invalid private data pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4744 337 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3277 248 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3251 245 "%4!s!::[%!FUNC!]PicParams VP8 %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.lst_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp3245 244 "%4!s!::[%!FUNC!]PicParams VP8 %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.gld_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp3239 243 "%4!s!::[%!FUNC!]PicParams VP8 %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.alt_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp3229 242 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3260 246 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3270 247 "%0Invalid Buffer Type %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3221 241 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3176 237 "%4!s!::[%!FUNC!]PicParams VP9 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
m_vp9DecodeFrame.PicParams.frame_refs[i].sPicEntry.Index7Bits, ItemLong -- 10
m_vp9DecodeFrame.PicParams.frame_refs[i].sPicEntry.Index7Bits, ItemLong -- 11
}
#typev venusdecodedevice_cpp3165 236 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3187 238 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3203 240 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3197 239 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3158 235 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp4587 329 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp2554 177 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
}
#typev venusdecodedevice_cpp2546 176 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2538 175 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2522 174 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
}
#typev venusdecodedevice_cpp2604 181 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2597 180 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2612 182 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2588 179 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2571 178 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2728 193 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2721 192 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2714 191 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2705 190 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2689 189 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2682 188 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2673 187 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2659 186 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2652 185 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2644 184 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2629 183 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2778 197 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2771 196 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2786 198 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
#typev venusdecodedevice_cpp2762 195 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2745 194 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
// PDB:  qcdx12chpeum7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusvideofactory_cpp103 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
#typev venusvideofactory_cpp103 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
// PDB:  qcdx12chpeum7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusdecodedevice_cpp342 29 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp324 28 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
// PDB:  qcdx12chpeum7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusdecodedevice_cpp357 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp356 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp2122 147 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp2012 143 "%0AllocInterlaceBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2007 142 "%0AllocInterlaceBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2118 146 "%0DxResource create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2105 145 "%0DxMemObj create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2087 144 "%0Interlace Intermediate Buf DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1987 141 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp2297 157 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp2166 151 "%0AllocInternalBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2161 150 "%0AllocInternalBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2293 156 "%0AllocInternalBuffer DxResource create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2280 155 "%0AllocInternalBuffer DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2262 154 "%0AllocInternalBuffer DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp2232 153 "%4!s!::[%!FUNC!]video internal buffer %10!u! allocation success 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
createData.pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp2217 152 "%0Invalid internal buffer index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp2151 149 "%0AllocInternalBuffer allocation failed: incorrect index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp2141 148 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1390 105 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1221 102 "%4!s!::[%!FUNC!]null arg" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1246 104 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1239 103 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1215 101 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp749 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp745 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp732 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp4962 349 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4842 343 "%0Invalid input params %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4854 344 "%0failed to calloc %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4903 346 "%0Int DPB DxResource create fail %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
m_descData.sampleWidth, ItemLong -- 11
m_descData.sampleHeight, ItemLong -- 12
}
#typev venusdecodedevice_cpp4947 348 "%0Int DPB resource DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4930 347 "%0Int DPB resource DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4896 345 "%4!s!::[%!FUNC!]Int DPB DxResource create success, corresp DxMemObj to be created" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4838 342 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp2385 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp2346 161 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp3498 264 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3495 263 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3488 262 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3473 261 "%4!s!::[%!FUNC!]H264 Decode IntraPicFlag %10!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.PicParams.sBitFields.IntraPicFlag, ItemLong -- 10
}
#typev venusdecodedevice_cpp3468 260 "%4!s!::[%!FUNC!]H264 Decode IntraPicFlag %10!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.PicParams.sBitFields.IntraPicFlag, ItemLong -- 10
}
#typev venusdecodedevice_cpp3459 259 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3444 258 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3426 257 "%4!s!::[%!FUNC!]OPBIntermAddress : 0x%10!I64x!,  AllocationSize: %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.OPBIntermAddress[0].PackEngineAddress, ItemLongLongX -- 10
m_h264DecodeFrame.OPBIntermAddress[0].PackOffset, ItemLong -- 11
}
#typev venusdecodedevice_cpp3409 256 "%0HandleH264InterlaceInterweaved failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3401 255 "%4!s!::[%!FUNC!]Interlace Content Detected, field_pic_flag %10!d!, MbaffFrameFlag %11!d! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.PicParams.sBitFields.field_pic_flag, ItemLong -- 10
m_h264DecodeFrame.PicParams.sBitFields.MbaffFrameFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3399 327 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3391 254 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3360 253 "%0ValidateH264CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3357 202 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3357 201 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!, AssociatedFlag:  %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
m_h264DecodeFrame.PicParams.CurrPic.sPicEntry.AssociatedFlag, ItemLong -- 12
}
#typev venusdecodedevice_cpp3357 200 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3357 199 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3350 252 "%0ValidateH264RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3337 251 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3316 250 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3298 249 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3686 279 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3683 278 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3676 277 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3661 276 "%4!s!::[%!FUNC!]HEVC Decode IDR Flag %10!d! ,IntraPicFlag %11!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.PicParams.IdrPicFlag, ItemLong -- 10
m_hevcDecodeFrame.PicParams.IntraPicFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3656 275 "%4!s!::[%!FUNC!]HEVC Decode IDR Flag %10!d! ,IntraPicFlag %11!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.PicParams.IdrPicFlag, ItemLong -- 10
m_hevcDecodeFrame.PicParams.IntraPicFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3647 274 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3632 273 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3611 272 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3575 270 "%0ValidateHevcCurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3572 206 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3572 205 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp3572 204 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3572 203 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3565 269 "%0ValidateHevcRefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3553 268 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3532 267 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3524 266 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3519 265 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3823 288 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3819 287 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_vc1DecodeFrame.SliceInfo.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3812 286 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3794 285 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3780 284 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3737 283 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3722 282 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3712 281 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3707 280 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp4181 316 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4178 315 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp4171 314 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4157 313 "%4!s!::[%!FUNC!]VP8 Decode Frametype flag %10!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp4153 312 "%4!s!::[%!FUNC!]VP8 Decode Frametype flag %10!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp4144 311 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4129 310 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4108 309 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp4077 308 "%0ValidateVp8CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4074 210 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4074 209 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp4074 208 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4074 207 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4067 307 "%0ValidateVp8RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4055 306 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4034 305 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4028 304 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp4023 303 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4002 302 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3999 301 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp9DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3992 300 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3978 299 "%4!s!::[%!FUNC!]VP9 Decode Frametype flag %10!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp3974 298 "%4!s!::[%!FUNC!]VP9 Decode Frametype flag %10!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp3965 297 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3950 296 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3929 295 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3898 294 "%0ValidateVp9CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3895 214 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3895 213 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp3895 212 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3895 211 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3888 293 "%0ValidateVp9RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3876 292 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3855 291 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3848 290 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3843 289 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp1969 140 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1963 139 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1956 138 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1935 137 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp309 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp306 351 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp306 350 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp302 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp4532 328 "%4!s!::[%!FUNC!]Enabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4529 331 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4529 330 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
// PDB:  qcdx12chpeum7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusdecodedevice_cpp826 68 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp822 67 "%0FillBitStreamData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp815 66 "%0Invalid heap pointer in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp807 65 "%0Error: nInputFilledLen > nInputAllocLen in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp800 64 "%4!s!::[%!FUNC!]nInputAllocLen %10!u! nInputFilledLen %11!u! nInputStartOffset %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
pBitStream->nInputAllocLen, ItemLong -- 10
pBitStream->nInputFilledLen, ItemLong -- 11
pBitStream->nInputStartOffset, ItemLong -- 12
}
#typev venusdecodedevice_cpp791 63 "%0Error: BitStream Address is 0x0 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp770 62 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp5187 366 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5172 365 "%4!s!::[%!FUNC!]OPB Buffer Address : 0x%10!I64x! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
pOpbInfo[Plane0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp5161 364 "%0Error: OPB Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp5141 363 "%0pHeap->pMemObj invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5131 362 "%0pHeap invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5120 361 "%0pSubResInfo invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5110 360 "%0OpbResource invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5105 359 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5224 370 "%0Error: Descriptor width/height is greater than resource width/height" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp5273 376 "%4!s!::[%!FUNC!]Buffer req: OPB Res compress flag = %10!u!, OPB Buffer updated compress flag = %11!u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_pOpbResource->IsUBWCompressedRes(), ItemLong -- 10
pOpbInfo->BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp5271 375 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferHeight[0], ItemLong -- 10
pOpbInfo->BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5269 374 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferStride[0], ItemLong -- 10
pOpbInfo->BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5267 373 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferAlignment[0], ItemLong -- 10
pOpbInfo->BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5265 372 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferSize[0], ItemLong -- 10
pOpbInfo->BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5264 371 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp5217 369 "%4!s!::[%!FUNC!]OPB Resource Width: %10!u! , OPB Resource Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->width, ItemLong -- 10
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->height, ItemLong -- 11
}
#typev venusdecodedevice_cpp5216 368 "%4!s!::[%!FUNC!]DPB width: %10!u! , Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_dpbDesc.width, ItemLong -- 10
m_dpbDesc.height, ItemLong -- 11
}
#typev venusdecodedevice_cpp5204 367 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp1532 108 "%4!s!::[%!FUNC!]GetRefIndexFromPicParams: %10!d! for refIndex: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::GetRefIndexFromPicParams
{
refIndexFromPicParam, ItemLong -- 10
refIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp1526 107 "%0Invalid Profile %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::GetRefIndexFromPicParams
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp1519 106 "%0not valid refIndex" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::GetRefIndexFromPicParams
{
}
#typev venusdecodedevice_cpp5078 358 "%4!s!::[%!FUNC!]Exit " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5075 357 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5067 356 "%4!s!::[%!FUNC!]Failed to alloc interlace intermediate buffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5061 355 "%4!s!::[%!FUNC!]Enable Interlace 3-PASS mode " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5034 354 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5027 353 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5011 352 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp482 43 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp465 42 "%0DPB-OPB split mode driver required, NULL DPB unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp460 41 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, after 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp454 40 "%0DPB-OPB split mode changed by OS after 1st frame, not handled " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp440 39 "%0DPB-OPB split mode driver required, failed to allocate DPB" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp415 38 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp409 37 "%4!s!::[%!FUNC!]DPB-OPB split due to OS ref_only, 1st frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp404 36 "%0DPB-OPB split due to OS ref_only is already set, not expected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp397 35 "%4!s!::[%!FUNC!]DPB-OPB split 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
splitType, ItemLong -- 10
}
#typev venusdecodedevice_cpp390 34 "%0DPB-OPB split due to OS but not DPB set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp385 33 "%0DPB-OPB split due to OS but ref_only not set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp374 32 "%4!s!::[%!FUNC!]Enter " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp711 58 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp699 57 "%0HwDecodeFrame fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp645 56 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp632 55 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp606 54 "%4!s!::[%!FUNC!]OPB Resource: %10!p! changed, IsAOTResource: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pOpbResource, ItemPtr -- 10
isAoTBuffer(m_pOpbResource), ItemLong -- 11
}
#typev venusdecodedevice_cpp600 53 "%4!s!::[%!FUNC!]updateOpbInfo as the OPB Resource changed" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp583 52 "%0pDecFrameData->pOPBBuffer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp574 51 "%4!s!::[%!FUNC!]DPB Res Compress Flag = %10!u!, AOT Resource: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pDpbResource->IsUBWCompressedRes(), ItemLong -- 10
isAoTBuffer(m_pDpbResource), ItemLong -- 11
}
#typev venusdecodedevice_cpp556 50 "%0numDpbBuffers is greater than what driver can handle: %10!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
pDecFrameData->numDpbBuffers, ItemLong -- 10
}
#typev venusdecodedevice_cpp551 49 "%4!s!::[%!FUNC!]Enter profile=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp286 25 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp282 336 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp282 334 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp282 335 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp282 333 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp270 136 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp270 135 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp270 134 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp265 24 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp249 23 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp191 332 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp243 22 "%0AllocateInternalVideoBuffers fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp240 160 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp240 159 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp240 158 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp233 21 "%0InitDecodePictureBufferCount fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp217 133 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp217 132 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp217 131 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp180 20 "%4!s!::[%!FUNC!]SessionType %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
SessionType(), ItemLong -- 10
}
#typev venusdecodedevice_cpp104 14 "%0Invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp156 19 "%4!s!::[%!FUNC!]dims %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.sampleWidth, ItemLong -- 10
m_descData.sampleHeight, ItemLong -- 11
sampleMB, ItemLong -- 12
}
#typev venusdecodedevice_cpp142 18 "%4!s!::[%!FUNC!]Same DPB & OPB format, no split required %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp136 17 "%0DPB & OPB format differ %10!u! %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
m_opbDesc.format, ItemLong -- 11
}
#typev venusdecodedevice_cpp126 16 "%0Invalid output format %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp112 15 "%4!s!::[%!FUNC!]outputFormat = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp64 13 "%4!s!::[%!FUNC!]Decode profile = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.profile, ItemLong -- 10
}
#typev venusdecodedevice_cpp50 12 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp4492 327 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwIsContentInterlaced
{
}
#typev venusdecodedevice_cpp1867 130 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1863 129 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1856 128 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1828 127 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1809 126 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1760 121 "%0pDpbResource not allocated" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1801 125 "%4!s!::[%!FUNC!]DPBList[%10!d!]: 0x%11!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
refIndex, ItemLong -- 10
pDbList[refIndex][Plane0].PackEngineAddress, ItemLongLongX -- 11
}
#typev venusdecodedevice_cpp1793 124 "%4!s!::[%!FUNC!]Fill currpic index: %10!d! in DPB list with Video VA %11!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
currDpbIndexFromPicParam, ItemLong -- 10
videoVirtualAddress, ItemLongLongX -- 11
}
#typev venusdecodedevice_cpp1778 123 "%4!s!::[%!FUNC!]DPB list changed, updateDPBList" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1767 122 "%0dPBIndex: %10!d! is greater than pDpbResource->NumSubResources: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
pDecFrameData->dPBIndex, ItemLong -- 10
pDpbResource->NumSubResources(), ItemLong -- 11
}
#typev venusdecodedevice_cpp1735 109 "%0Invalid Profile %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp1742 120 "%0currDpbIndexFromPicParam: %10!d! is greater than numDpbBuffers: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
currDpbIndexFromPicParam, ItemLong -- 10
numDpbBuffers, ItemLong -- 11
}
#typev venusdecodedevice_cpp1735 110 "%4!s!::[%!FUNC!]outputSubResIndex: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
outputSubResIndex, ItemLong -- 10
}
#typev venusdecodedevice_cpp1691 116 "%0indexDpbResource:%10!d! is greater than numSubResources: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
indexDpbResource, ItemLong -- 10
numSubResources, ItemLong -- 11
}
#typev venusdecodedevice_cpp1725 119 "%4!s!::[%!FUNC!]For indexDpbResource: %10!d!, DPBResource: %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
indexDpbResource, ItemLong -- 10
pDpbResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1710 118 "%4!s!::[%!FUNC!]Changing ReferenceBfrAddr: %10!I64x! at refIndexFromPicParam: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
videoVirtualAddress, ItemLongLongX -- 10
refIndexFromPicParam, ItemLong -- 11
}
#typev venusdecodedevice_cpp1699 117 "%4!s!::[%!FUNC!]pDpbResource is NULL for refIndexFromPicParam: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
refIndexFromPicParam, ItemLong -- 10
}
#typev venusdecodedevice_cpp1666 115 "%0invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1640 114 "%0pHeap->pMemObj NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1630 113 "%0pHeap NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1616 112 "%0pDpbResource NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1611 111 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1192 100 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp1187 99 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1180 98 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1167 97 "%4!s!::[%!FUNC!]buff reqs %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
bufferReqs.BufferAlignment[0], ItemLong -- 12
}
#typev venusdecodedevice_cpp1140 96 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp876 72 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp872 71 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp865 70 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp844 69 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp930 76 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp926 75 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp919 74 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp893 73 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp5331 382 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp5323 380 "%0m_pDpbResource is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp5328 381 "%0SubResourceInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp5312 379 "%4!s!::[%!FUNC!]Aligned Buffer Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
reqOutput.stride[0], ItemLong -- 10
reqOutput.height[0], ItemLong -- 11
}
#typev venusdecodedevice_cpp5311 378 "%4!s!::[%!FUNC!]DPB Resource Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
actualResourceWidth, ItemLong -- 10
actualResourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp5294 377 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp528 48 "%4!s!::[%!FUNC!]Bitstream Resource: %10!p! , Size: %11!I64u!, Offset: %12!I64u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pBitStreamData->pBitStreamBuffer, ItemPtr -- 10
pBitStreamData->size, ItemULongLong -- 11
pBitStreamData->offset, ItemULongLong -- 12
}
#typev venusdecodedevice_cpp522 47 "%4!s!::[%!FUNC!]Reference index is :%10!d! at index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pSubmitData->refIndexList[i], ItemLong -- 10
i, ItemLong -- 11
}
#typev venusdecodedevice_cpp514 46 "%4!s!::[%!FUNC!]DPB Resource: %10!p! at index: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pDecFrameData->pdpbBuffers[i], ItemPtr -- 10
i, ItemLong -- 11
}
#typev venusdecodedevice_cpp509 45 "%4!s!::[%!FUNC!]OPB Resource: %10!p!, OPB Index: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pDecFrameData->pOPBBuffer, ItemPtr -- 10
pDecFrameData->oPBIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp503 44 "%4!s!::[%!FUNC!]Output DPB Resource: %10!p! at output DPB Index: %11!d!, numDpbBuffers: %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pDecFrameData->pDPBBuffer, ItemPtr -- 10
pDecFrameData->dPBIndex, ItemLong -- 11
pDecFrameData->numDpbBuffers, ItemLong -- 12
}
#typev venusdecodedevice_cpp4461 326 "%0Invalid Command %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
CmdType, ItemLong -- 10
}
#typev venusdecodedevice_cpp4447 325 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4416 324 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4385 323 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4354 322 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4324 321 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4295 320 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4282 319 "%0Stop Session Submit failed: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4255 318 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4242 317 "%0Start Session Submit failed:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1123 95 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1118 94 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1111 93 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1094 92 "%4!s!::[%!FUNC!]Pixel format = %10!u!, IsCompressed = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.PixelFormat, ItemLong -- 10
bufferReqs.BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp1092 91 "%4!s!::[%!FUNC!]Resource Width = %10!u!, Resource Height     = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.resourceWidth, ItemLong -- 10
bufferReqs.resourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp1088 90 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1062 88 "%0OPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1076 89 "%4!s!::[%!FUNC!]Setting following DPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1053 87 "%0DPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1039 86 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1019 85 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp1014 84 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1007 83 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp989 82 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferHeight[0], ItemLong -- 10
bufferReqs.BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp987 81 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferStride[0], ItemLong -- 10
bufferReqs.BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp985 80 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferAlignment[0], ItemLong -- 10
bufferReqs.BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp983 79 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp982 78 "%4!s!::[%!FUNC!]Setting following buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp947 77 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp2964 217 "%4!s!::[%!FUNC!]PicParams H264 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
m_h264DecodeFrame.PicParams.RefFrameList[i].sPicEntry.Index7Bits, ItemLong -- 10
m_h264DecodeFrame.PicParams.RefFrameList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2952 216 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2986 219 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp3003 221 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2976 218 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2996 220 "%4!s!::[%!FUNC!]unhandled buffer type %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2944 215 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp3041 224 "%4!s!::[%!FUNC!]PicParams HEVC sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
m_hevcDecodeFrame.PicParams.RefPicList[i].sPicEntry.Index7Bits, ItemLong -- 10
m_hevcDecodeFrame.PicParams.RefPicList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3029 223 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3062 226 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3078 228 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3052 225 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3072 227 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3021 222 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3140 234 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3103 230 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3123 232 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3113 231 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3133 233 "%4!s!::[%!FUNC!]unhandled buffer %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3096 229 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp4814 341 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4800 339 "%0invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4789 338 "%0invalid private data pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4744 337 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3277 248 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3251 245 "%4!s!::[%!FUNC!]PicParams VP8 %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.lst_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp3245 244 "%4!s!::[%!FUNC!]PicParams VP8 %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.gld_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp3239 243 "%4!s!::[%!FUNC!]PicParams VP8 %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.alt_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp3229 242 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3260 246 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3270 247 "%0Invalid Buffer Type %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3221 241 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3176 237 "%4!s!::[%!FUNC!]PicParams VP9 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
m_vp9DecodeFrame.PicParams.frame_refs[i].sPicEntry.Index7Bits, ItemLong -- 10
m_vp9DecodeFrame.PicParams.frame_refs[i].sPicEntry.Index7Bits, ItemLong -- 11
}
#typev venusdecodedevice_cpp3165 236 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3187 238 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3203 240 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3197 239 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3158 235 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp4587 329 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp2554 177 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
}
#typev venusdecodedevice_cpp2546 176 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2538 175 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2522 174 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
}
#typev venusdecodedevice_cpp2604 181 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2597 180 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2612 182 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2588 179 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2571 178 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2728 193 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2721 192 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2714 191 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2705 190 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2689 189 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2682 188 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2673 187 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2659 186 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2652 185 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2644 184 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2629 183 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2778 197 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2771 196 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2786 198 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
#typev venusdecodedevice_cpp2762 195 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2745 194 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
// PDB:  qcdx12x86um7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusvideofactory_cpp103 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
#typev venusvideofactory_cpp103 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
// PDB:  qcdx12x86um7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusdecodedevice_cpp342 29 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp324 28 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
// PDB:  qcdx12x86um7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusdecodedevice_cpp357 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp356 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp2122 147 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp2012 143 "%0AllocInterlaceBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2007 142 "%0AllocInterlaceBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2118 146 "%0DxResource create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2105 145 "%0DxMemObj create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2087 144 "%0Interlace Intermediate Buf DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1987 141 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp2297 157 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp2166 151 "%0AllocInternalBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2161 150 "%0AllocInternalBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2293 156 "%0AllocInternalBuffer DxResource create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2280 155 "%0AllocInternalBuffer DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2262 154 "%0AllocInternalBuffer DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp2232 153 "%4!s!::[%!FUNC!]video internal buffer %10!u! allocation success 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
createData.pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp2222 152 "%0Invalid internal buffer index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp2151 149 "%0AllocInternalBuffer allocation failed: incorrect index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp2141 148 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1390 105 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1221 102 "%4!s!::[%!FUNC!]null arg" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1246 104 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1239 103 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1215 101 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp4962 349 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4842 343 "%0Invalid input params %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4854 344 "%0failed to calloc %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4903 346 "%0Int DPB DxResource create fail %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
m_descData.sampleWidth, ItemLong -- 11
m_descData.sampleHeight, ItemLong -- 12
}
#typev venusdecodedevice_cpp4947 348 "%0Int DPB resource DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4930 347 "%0Int DPB resource DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4896 345 "%4!s!::[%!FUNC!]Int DPB DxResource create success, corresp DxMemObj to be created" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4838 342 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp3498 264 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3495 263 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3488 262 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3473 261 "%4!s!::[%!FUNC!]H264 Decode IntraPicFlag %10!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.PicParams.sBitFields.IntraPicFlag, ItemLong -- 10
}
#typev venusdecodedevice_cpp3468 260 "%4!s!::[%!FUNC!]H264 Decode IntraPicFlag %10!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.PicParams.sBitFields.IntraPicFlag, ItemLong -- 10
}
#typev venusdecodedevice_cpp3459 259 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3444 258 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3426 257 "%4!s!::[%!FUNC!]OPBIntermAddress : 0x%10!I64x!,  AllocationSize: %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.OPBIntermAddress[0].PackEngineAddress, ItemLongLongX -- 10
m_h264DecodeFrame.OPBIntermAddress[0].PackOffset, ItemLong -- 11
}
#typev venusdecodedevice_cpp3409 256 "%0HandleH264InterlaceInterweaved failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3401 255 "%4!s!::[%!FUNC!]Interlace Content Detected, field_pic_flag %10!d!, MbaffFrameFlag %11!d! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.PicParams.sBitFields.field_pic_flag, ItemLong -- 10
m_h264DecodeFrame.PicParams.sBitFields.MbaffFrameFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3399 327 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3391 254 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3360 253 "%0ValidateH264CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3357 202 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3357 201 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!, AssociatedFlag:  %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
m_h264DecodeFrame.PicParams.CurrPic.sPicEntry.AssociatedFlag, ItemLong -- 12
}
#typev venusdecodedevice_cpp3357 200 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3357 199 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3350 252 "%0ValidateH264RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3346 177 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3346 176 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp3346 175 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3346 174 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3337 251 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3316 250 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3298 249 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3686 279 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3683 278 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3676 277 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3661 276 "%4!s!::[%!FUNC!]HEVC Decode IDR Flag %10!d! ,IntraPicFlag %11!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.PicParams.IdrPicFlag, ItemLong -- 10
m_hevcDecodeFrame.PicParams.IntraPicFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3656 275 "%4!s!::[%!FUNC!]HEVC Decode IDR Flag %10!d! ,IntraPicFlag %11!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.PicParams.IdrPicFlag, ItemLong -- 10
m_hevcDecodeFrame.PicParams.IntraPicFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3647 274 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3632 273 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3611 272 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3575 270 "%0ValidateHevcCurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3572 206 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3572 205 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp3572 204 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3572 203 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3565 269 "%0ValidateHevcRefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3553 268 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3532 267 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3524 266 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3519 265 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3823 288 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3819 287 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_vc1DecodeFrame.SliceInfo.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3812 286 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3794 285 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3780 284 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3737 283 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3722 282 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3712 281 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3707 280 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp4181 316 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4178 315 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp4171 314 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4157 313 "%4!s!::[%!FUNC!]VP8 Decode Frametype flag %10!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp4153 312 "%4!s!::[%!FUNC!]VP8 Decode Frametype flag %10!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp4144 311 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4129 310 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4108 309 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp4077 308 "%0ValidateVp8CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4074 210 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4074 209 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp4074 208 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4074 207 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4067 307 "%0ValidateVp8RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4055 306 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4034 305 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4028 304 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp4023 303 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp4002 302 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3999 301 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp9DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3992 300 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3978 299 "%4!s!::[%!FUNC!]VP9 Decode Frametype flag %10!d! or P/B Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp3974 298 "%4!s!::[%!FUNC!]VP9 Decode Frametype flag %10!d! or I Frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp8DecodeFrame.PicParams.frame_type, ItemLong -- 10
}
#typev venusdecodedevice_cpp3965 297 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3950 296 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3929 295 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3898 294 "%0ValidateVp9CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3895 214 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3895 213 "%4!s!::[%!FUNC!]DPB Output Buffer Address is %10!I64x! for CurrPic index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_currDpbList[outputIndex][0].PackEngineAddress, ItemLongLongX -- 10
outputIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp3895 212 "%0Error: DPB Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3895 211 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3888 293 "%0ValidateVp9RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3876 292 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3855 291 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3848 290 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3843 289 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp1969 140 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1963 139 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1956 138 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1935 137 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp4532 328 "%4!s!::[%!FUNC!]Enabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4529 331 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4529 330 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
// PDB:  qcdx12x86um7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev venusdecodedevice_cpp826 68 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp822 67 "%0FillBitStreamData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp815 66 "%0Invalid heap pointer in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp807 65 "%0Error: nInputFilledLen > nInputAllocLen in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp799 64 "%4!s!::[%!FUNC!]nInputAllocLen %10!u! nInputFilledLen %11!u! nInputStartOffset %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
pBitStream->nInputAllocLen, ItemLong -- 10
pBitStream->nInputFilledLen, ItemLong -- 11
pBitStream->nInputStartOffset, ItemLong -- 12
}
#typev venusdecodedevice_cpp791 63 "%0Error: BitStream Address is 0x0 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp770 62 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp5187 366 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5172 365 "%4!s!::[%!FUNC!]OPB Buffer Address : 0x%10!I64x! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
pOpbInfo[Plane0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp5161 364 "%0Error: OPB Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp5141 363 "%0pHeap->pMemObj invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5131 362 "%0pHeap invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5120 361 "%0pSubResInfo invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5110 360 "%0OpbResource invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5105 359 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp5224 370 "%0Error: Descriptor width/height is greater than resource width/height" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp5273 376 "%4!s!::[%!FUNC!]Buffer req: OPB Res compress flag = %10!u!, OPB Buffer updated compress flag = %11!u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_pOpbResource->IsUBWCompressedRes(), ItemLong -- 10
pOpbInfo->BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp5271 375 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferHeight[0], ItemLong -- 10
pOpbInfo->BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5269 374 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferStride[0], ItemLong -- 10
pOpbInfo->BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5267 373 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferAlignment[0], ItemLong -- 10
pOpbInfo->BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5265 372 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferSize[0], ItemLong -- 10
pOpbInfo->BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp5264 371 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp5217 369 "%4!s!::[%!FUNC!]OPB Resource Width: %10!u! , OPB Resource Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->width, ItemLong -- 10
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->height, ItemLong -- 11
}
#typev venusdecodedevice_cpp5216 368 "%4!s!::[%!FUNC!]DPB width: %10!u! , Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_dpbDesc.width, ItemLong -- 10
m_dpbDesc.height, ItemLong -- 11
}
#typev venusdecodedevice_cpp5204 367 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp5078 358 "%4!s!::[%!FUNC!]Exit " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5075 357 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5067 356 "%4!s!::[%!FUNC!]Failed to alloc interlace intermediate buffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5061 355 "%4!s!::[%!FUNC!]Enable Interlace 3-PASS mode " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5034 354 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5027 353 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp5011 352 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp482 43 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp465 42 "%0DPB-OPB split mode driver required, NULL DPB unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp460 41 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, after 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp454 40 "%0DPB-OPB split mode changed by OS after 1st frame, not handled " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp440 39 "%0DPB-OPB split mode driver required, failed to allocate DPB" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp415 38 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp409 37 "%4!s!::[%!FUNC!]DPB-OPB split due to OS ref_only, 1st frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp404 36 "%0DPB-OPB split due to OS ref_only is already set, not expected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp397 35 "%4!s!::[%!FUNC!]DPB-OPB split 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
splitType, ItemLong -- 10
}
#typev venusdecodedevice_cpp390 34 "%0DPB-OPB split due to OS but not DPB set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp385 33 "%0DPB-OPB split due to OS but ref_only not set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp374 32 "%4!s!::[%!FUNC!]Enter " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp711 58 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp699 57 "%0HwDecodeFrame fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp645 56 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp632 55 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp606 54 "%4!s!::[%!FUNC!]OPB Resource: %10!p! changed, IsAOTResource: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pOpbResource, ItemPtr -- 10
isAoTBuffer(m_pOpbResource), ItemLong -- 11
}
#typev venusdecodedevice_cpp600 53 "%4!s!::[%!FUNC!]updateOpbInfo as the OPB Resource changed" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp583 52 "%0pDecFrameData->pOPBBuffer is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp574 51 "%4!s!::[%!FUNC!]DPB Res Compress Flag = %10!u!, AOT Resource: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pDpbResource->IsUBWCompressedRes(), ItemLong -- 10
isAoTBuffer(m_pDpbResource), ItemLong -- 11
}
#typev venusdecodedevice_cpp556 50 "%0numDpbBuffers is greater than what driver can handle: %10!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
pDecFrameData->numDpbBuffers, ItemLong -- 10
}
#typev venusdecodedevice_cpp551 49 "%4!s!::[%!FUNC!]Enter profile=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp286 25 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp282 336 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp282 334 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp282 335 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp282 333 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp279 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp279 161 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp276 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp276 351 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp276 350 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp276 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp270 136 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp270 135 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp270 134 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp265 24 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp249 23 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp191 332 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp243 22 "%0AllocateInternalVideoBuffers fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp240 160 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp240 159 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp240 158 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp233 21 "%0InitDecodePictureBufferCount fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp217 133 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp217 132 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp217 131 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp197 72 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp197 71 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp197 70 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp197 69 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp180 20 "%4!s!::[%!FUNC!]SessionType %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
SessionType(), ItemLong -- 10
}
#typev venusdecodedevice_cpp104 14 "%0Invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp156 19 "%4!s!::[%!FUNC!]dims %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.sampleWidth, ItemLong -- 10
m_descData.sampleHeight, ItemLong -- 11
sampleMB, ItemLong -- 12
}
#typev venusdecodedevice_cpp142 18 "%4!s!::[%!FUNC!]Same DPB & OPB format, no split required %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp136 17 "%0DPB & OPB format differ %10!u! %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
m_opbDesc.format, ItemLong -- 11
}
#typev venusdecodedevice_cpp126 16 "%0Invalid output format %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp112 15 "%4!s!::[%!FUNC!]outputFormat = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp64 13 "%4!s!::[%!FUNC!]Decode profile = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.profile, ItemLong -- 10
}
#typev venusdecodedevice_cpp50 12 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp4492 327 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwIsContentInterlaced
{
}
#typev venusdecodedevice_cpp1867 130 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1863 129 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1856 128 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1828 127 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1760 121 "%0pDpbResource not allocated" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1809 126 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1801 125 "%4!s!::[%!FUNC!]DPBList[%10!d!]: 0x%11!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
refIndex, ItemLong -- 10
pDbList[refIndex][Plane0].PackEngineAddress, ItemLongLongX -- 11
}
#typev venusdecodedevice_cpp1793 124 "%4!s!::[%!FUNC!]Fill currpic index: %10!d! in DPB list with Video VA %11!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
currDpbIndexFromPicParam, ItemLong -- 10
videoVirtualAddress, ItemLongLongX -- 11
}
#typev venusdecodedevice_cpp1778 123 "%4!s!::[%!FUNC!]DPB list changed, updateDPBList" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1767 122 "%0dPBIndex: %10!d! is greater than pDpbResource->NumSubResources: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
pDecFrameData->dPBIndex, ItemLong -- 10
pDpbResource->NumSubResources(), ItemLong -- 11
}
#typev venusdecodedevice_cpp1742 120 "%0currDpbIndexFromPicParam: %10!d! is greater than numDpbBuffers: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
currDpbIndexFromPicParam, ItemLong -- 10
numDpbBuffers, ItemLong -- 11
}
#typev venusdecodedevice_cpp1735 110 "%4!s!::[%!FUNC!]outputSubResIndex: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
outputSubResIndex, ItemLong -- 10
}
#typev venusdecodedevice_cpp1735 109 "%0Invalid Profile %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp1691 116 "%0indexDpbResource:%10!d! is greater than numSubResources: %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
indexDpbResource, ItemLong -- 10
numSubResources, ItemLong -- 11
}
#typev venusdecodedevice_cpp1725 119 "%4!s!::[%!FUNC!]For indexDpbResource: %10!d!, DPBResource: %11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
indexDpbResource, ItemLong -- 10
pDpbResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1710 118 "%4!s!::[%!FUNC!]Changing ReferenceBfrAddr: %10!I64x! at refIndexFromPicParam: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
videoVirtualAddress, ItemLongLongX -- 10
refIndexFromPicParam, ItemLong -- 11
}
#typev venusdecodedevice_cpp1699 117 "%4!s!::[%!FUNC!]pDpbResource is NULL for refIndexFromPicParam: %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
refIndexFromPicParam, ItemLong -- 10
}
#typev venusdecodedevice_cpp1681 108 "%4!s!::[%!FUNC!]GetRefIndexFromPicParams: %10!d! for refIndex: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
refIndexFromPicParam, ItemLong -- 10
refIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp1681 107 "%0Invalid Profile %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp1681 106 "%0not valid refIndex" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1666 115 "%0invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1640 114 "%0pHeap->pMemObj NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1630 113 "%0pHeap NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1616 112 "%0pDpbResource NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1611 111 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1192 100 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp1187 99 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1180 98 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1165 97 "%4!s!::[%!FUNC!]buff reqs %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
bufferReqs.BufferAlignment[0], ItemLong -- 12
}
#typev venusdecodedevice_cpp1140 96 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp930 76 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp926 75 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp919 74 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp893 73 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp5331 382 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp5323 380 "%0m_pDpbResource is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp5328 381 "%0SubResourceInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp5312 379 "%4!s!::[%!FUNC!]Aligned Buffer Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
reqOutput.stride[0], ItemLong -- 10
reqOutput.height[0], ItemLong -- 11
}
#typev venusdecodedevice_cpp5311 378 "%4!s!::[%!FUNC!]DPB Resource Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
actualResourceWidth, ItemLong -- 10
actualResourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp5294 377 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp528 48 "%4!s!::[%!FUNC!]Bitstream Resource: %10!p! , Size: %11!I64u!, Offset: %12!I64u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pBitStreamData->pBitStreamBuffer, ItemPtr -- 10
pBitStreamData->size, ItemULongLong -- 11
pBitStreamData->offset, ItemULongLong -- 12
}
#typev venusdecodedevice_cpp522 47 "%4!s!::[%!FUNC!]Reference index is :%10!d! at index %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pSubmitData->refIndexList[i], ItemLong -- 10
i, ItemLong -- 11
}
#typev venusdecodedevice_cpp514 46 "%4!s!::[%!FUNC!]DPB Resource: %10!p! at index: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pDecFrameData->pdpbBuffers[i], ItemPtr -- 10
i, ItemLong -- 11
}
#typev venusdecodedevice_cpp509 45 "%4!s!::[%!FUNC!]OPB Resource: %10!p!, OPB Index: %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pDecFrameData->pOPBBuffer, ItemPtr -- 10
pDecFrameData->oPBIndex, ItemLong -- 11
}
#typev venusdecodedevice_cpp503 44 "%4!s!::[%!FUNC!]Output DPB Resource: %10!p! at output DPB Index: %11!d!, numDpbBuffers: %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::LogFrameInfo
{
pDecFrameData->pDPBBuffer, ItemPtr -- 10
pDecFrameData->dPBIndex, ItemLong -- 11
pDecFrameData->numDpbBuffers, ItemLong -- 12
}
#typev venusdecodedevice_cpp4461 326 "%0Invalid Command %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
CmdType, ItemLong -- 10
}
#typev venusdecodedevice_cpp4447 325 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4416 324 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4385 323 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4354 322 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4324 321 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4295 320 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4282 319 "%0Stop Session Submit failed: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4255 318 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4242 317 "%0Start Session Submit failed:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1123 95 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1118 94 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1111 93 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1094 92 "%4!s!::[%!FUNC!]Pixel format = %10!u!, IsCompressed = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.PixelFormat, ItemLong -- 10
bufferReqs.BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp1092 91 "%4!s!::[%!FUNC!]Resource Width = %10!u!, Resource Height     = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.resourceWidth, ItemLong -- 10
bufferReqs.resourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp1088 90 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1062 88 "%0OPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1076 89 "%4!s!::[%!FUNC!]Setting following DPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1053 87 "%0DPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1039 86 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1019 85 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp1014 84 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1007 83 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp989 82 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferHeight[0], ItemLong -- 10
bufferReqs.BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp987 81 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferStride[0], ItemLong -- 10
bufferReqs.BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp985 80 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferAlignment[0], ItemLong -- 10
bufferReqs.BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp983 79 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp982 78 "%4!s!::[%!FUNC!]Setting following buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp947 77 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp3003 221 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2964 217 "%4!s!::[%!FUNC!]PicParams H264 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
m_h264DecodeFrame.PicParams.RefFrameList[i].sPicEntry.Index7Bits, ItemLong -- 10
m_h264DecodeFrame.PicParams.RefFrameList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2955 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2955 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2955 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2952 216 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2989 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2989 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2989 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2986 219 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2979 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2979 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2979 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2976 218 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2996 220 "%4!s!::[%!FUNC!]unhandled buffer type %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2944 215 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp3078 228 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3041 224 "%4!s!::[%!FUNC!]PicParams HEVC sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
m_hevcDecodeFrame.PicParams.RefPicList[i].sPicEntry.Index7Bits, ItemLong -- 10
m_hevcDecodeFrame.PicParams.RefPicList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp3032 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3032 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3032 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3029 223 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3065 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3065 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3065 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3062 226 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3055 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3055 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3055 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3052 225 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3072 227 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3021 222 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp3140 234 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3106 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3106 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3106 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3103 230 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3126 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3126 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3126 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3123 232 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3116 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3116 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3116 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3113 231 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp3133 233 "%4!s!::[%!FUNC!]unhandled buffer %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3096 229 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp4814 341 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4800 339 "%0invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4789 338 "%0invalid private data pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4744 337 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp3277 248 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3251 245 "%4!s!::[%!FUNC!]PicParams VP8 %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.lst_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp3245 244 "%4!s!::[%!FUNC!]PicParams VP8 %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.gld_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp3239 243 "%4!s!::[%!FUNC!]PicParams VP8 %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.alt_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp3232 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3232 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3232 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3229 242 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3263 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3263 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3263 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3260 246 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3270 247 "%0Invalid Buffer Type %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3221 241 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp3203 240 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3176 237 "%4!s!::[%!FUNC!]PicParams VP9 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
m_vp9DecodeFrame.PicParams.frame_refs[i].sPicEntry.Index7Bits, ItemLong -- 10
m_vp9DecodeFrame.PicParams.frame_refs[i].sPicEntry.Index7Bits, ItemLong -- 11
}
#typev venusdecodedevice_cpp3168 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3168 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3168 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3165 236 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3190 61 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3190 60 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3190 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3187 238 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp3197 239 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp3158 235 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp4587 329 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp4590 327 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp4583 327 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp2612 182 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2604 181 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2597 180 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2588 179 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2571 178 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2728 193 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2721 192 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2714 191 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2705 190 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2689 189 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2682 188 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2673 187 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2659 186 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2652 185 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2644 184 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2629 183 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2786 198 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
#typev venusdecodedevice_cpp2778 197 "%4!s!::[%!FUNC!]Reference Frame Address is %10!I64x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
m_currDpbList[refIndex][0].PackEngineAddress, ItemLongLongX -- 10
}
#typev venusdecodedevice_cpp2771 196 "%0Error: Output buffer and Reference frame index match for index %10!d! 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
outputIndex, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp2762 195 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2745 194 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
