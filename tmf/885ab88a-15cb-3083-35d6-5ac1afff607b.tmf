// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
885ab88a-15cb-3083-35d6-5ac1afff607b WMRIL // SRC=WMRilGetIMSI.cpp MJ= MN=
#typev WMRilGetIMSI_cpp246 19 "%0%!LEVEL! %!FUNC!:Wait for card status internal indication to check the perso state" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::Execute
{
}
#typev WMRilGetIMSI_cpp241 18 "%0%!LEVEL! %!FUNC!:Failed to register for the internal indication QMI_UIM_STATUS_CHANGE_IND_V01." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::Execute
{
}
#typev WMRilGetIMSI_cpp197 17 "%0%!LEVEL! %!FUNC!:PUK is blocked." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::Execute
{
}
#typev WMRilGetIMSI_cpp193 16 "%0%!LEVEL! %!FUNC!:PUK is required." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::Execute
{
}
#typev WMRilGetIMSI_cpp189 15 "%0%!LEVEL! %!FUNC!:PIN1 is required." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::Execute
{
}
#typev WMRilGetIMSI_cpp185 14 "%0%!LEVEL! %!FUNC!:App state is detected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::Execute
{
}
#typev WMRilGetIMSI_cpp181 13 "%0%!LEVEL! %!FUNC!:App state is unknown." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::Execute
{
}
#typev WMRilGetIMSI_cpp160 12 "%0%!LEVEL! %!FUNC!:Session Type %10!s!(%11!u!) is invalid session type for hUiccApp 0x%12!08X!.  Provisioning session type expected." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::Execute
{
Debug::QMIUIMAppSessionTypeToStr(m_Session.session_type), ItemWString -- 10
m_Session.session_type, ItemLong -- 11
m_Params, ItemLong -- 12
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp939 52 "%0%!LEVEL! %!FUNC!:Card/App info is not available." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetAppType
{
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp865 49 "%0%!LEVEL! %!FUNC!:Incorrect application type: %10!s!. hUiccApp 0x%11!08X! must be invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromCard
{
Debug::QMIUIMAppTypeToStr(AppType), ItemWString -- 10
m_Params, ItemLong -- 11
}
#typev WMRilGetIMSI_cpp884 50 "%0%!LEVEL! %!FUNC!:Incorrect application type: %10!s!. hUiccApp 0x%11!08X! must be invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromCard
{
Debug::QMIUIMAppTypeToStr(AppType), ItemWString -- 10
m_Params, ItemLong -- 11
}
#typev WMRilGetIMSI_cpp890 51 "%0%!LEVEL! %!FUNC!:Invalid session type: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromCard
{
Debug::QMIUIMAppSessionTypeToStr(m_Session.session_type), ItemWString -- 10
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp424 30 "%0%!LEVEL! %!FUNC!:Error populating the RILIMSI response structure." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp435 31 "%0%!LEVEL! %!FUNC!:IMSI MCC DWORD value: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
pRilIMSIInfo->dwMcc, ItemLong -- 10
}
#typev WMRilGetIMSI_cpp412 29 "%0%!LEVEL! %!FUNC!:IMSI = %10!s!, length = %11!u!, IMSI String length (including null terminating character) = %12!u!" //   LEVEL=TRACE_LEVEL_CRITICAL FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
pRilIMSIInfo->wszImsi, ItemWString -- 10
len, ItemLong -- 11
len + 1, ItemLong -- 12
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp393 28 "%0%!LEVEL! %!FUNC!:Min-based IMSI values are all zero" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
}
#typev WMRilGetIMSI_cpp374 82 "%0%!LEVEL! %!FUNC!:DebugDump pIMSI_S1: %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
WMRIL_LOG_XSTR(pIMSI_S1. NAS_IMSI_MIN1_LEN_V01), ItemHEXDump -- 10
}
#typev WMRilGetIMSI_cpp374 81 "%0%!LEVEL! %!FUNC!:#####  IMSI_S1:  #####" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
}
#typev WMRilGetIMSI_cpp374 80 "%0%!LEVEL! %!FUNC!:DebugDump pIMSI_S2: %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
WMRIL_LOG_XSTR(pIMSI_S2. NAS_IMSI_MIN2_LEN_V01), ItemHEXDump -- 10
}
#typev WMRilGetIMSI_cpp374 79 "%0%!LEVEL! %!FUNC!:#####  IMSI_S2:  #####" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
}
#typev WMRilGetIMSI_cpp374 78 "%0%!LEVEL! %!FUNC!:DebugDump pIMSI_11_12: %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
WMRIL_LOG_XSTR(pIMSI_11_12. NAS_IMSI_11_12_LEN_V01), ItemHEXDump -- 10
}
#typev WMRilGetIMSI_cpp374 77 "%0%!LEVEL! %!FUNC!:#####  IMSI_11_12:  #####" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
}
#typev WMRilGetIMSI_cpp374 76 "%0%!LEVEL! %!FUNC!:DebugDump pMCC: %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
WMRIL_LOG_XSTR(pMCC. NAS_MCC_LEN_V01), ItemHEXDump -- 10
}
#typev WMRilGetIMSI_cpp374 75 "%0%!LEVEL! %!FUNC!:#####  MCC:  #####" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
}
#typev WMRilGetIMSI_cpp370 27 "%0%!LEVEL! %!FUNC!:QMI_NAS_GET_3GPP2_SUBSCRIPTION_INFO_RESP True IMSI TLV not valid. Use min based IMSI TLV. NV IMSI_M from QMI." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
}
#typev WMRilGetIMSI_cpp349 26 "%0%!LEVEL! %!FUNC!:CLASS 1 NV IMSI_T with length = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
len, ItemLong -- 10
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp341 25 "%0%!LEVEL! %!FUNC!:IMSI_T_ADDR_NUM is wrong value, = %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
bImsiTAddrNum, ItemLong -- 10
}
#typev WMRilGetIMSI_cpp330 82 "%0%!LEVEL! %!FUNC!:DebugDump pIMSI_S1: %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
WMRIL_LOG_XSTR(pIMSI_S1. NAS_IMSI_MIN1_LEN_V01), ItemHEXDump -- 10
}
#typev WMRilGetIMSI_cpp330 81 "%0%!LEVEL! %!FUNC!:#####  IMSI_S1:  #####" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
}
#typev WMRilGetIMSI_cpp330 80 "%0%!LEVEL! %!FUNC!:DebugDump pIMSI_S2: %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
WMRIL_LOG_XSTR(pIMSI_S2. NAS_IMSI_MIN2_LEN_V01), ItemHEXDump -- 10
}
#typev WMRilGetIMSI_cpp330 79 "%0%!LEVEL! %!FUNC!:#####  IMSI_S2:  #####" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
}
#typev WMRilGetIMSI_cpp330 78 "%0%!LEVEL! %!FUNC!:DebugDump pIMSI_11_12: %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
WMRIL_LOG_XSTR(pIMSI_11_12. NAS_IMSI_11_12_LEN_V01), ItemHEXDump -- 10
}
#typev WMRilGetIMSI_cpp330 77 "%0%!LEVEL! %!FUNC!:#####  IMSI_11_12:  #####" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
}
#typev WMRilGetIMSI_cpp330 76 "%0%!LEVEL! %!FUNC!:DebugDump pMCC: %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
WMRIL_LOG_XSTR(pMCC. NAS_MCC_LEN_V01), ItemHEXDump -- 10
}
#typev WMRilGetIMSI_cpp330 75 "%0%!LEVEL! %!FUNC!:#####  MCC:  #####" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
}
#typev WMRilGetIMSI_cpp328 24 "%0%!LEVEL! %!FUNC!:IMSI_T_ADDR_NUM = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
bImsiTAddrNum, ItemLong -- 10
}
#typev WMRilGetIMSI_cpp327 23 "%0%!LEVEL! %!FUNC!:NV IMSI_T from QMI" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
}
#typev WMRilGetIMSI_cpp322 22 "%0%!LEVEL! %!FUNC!:QMI_NAS_GET_3GPP2_SUBSCRIPTION_INFO_RESP True IMSI TLV present" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp303 21 "%0%!LEVEL! %!FUNC!:QMI_NAS_GET_3GPP2_SUBSCRIPTION_INFO_RESP failure, error = %10!s!, result = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
nvIMSIResp.resp.error, ItemEnum(qmi_error_type_v01) -- 10
nvIMSIResp.resp.result, ItemEnum(qmi_result_type_v01) -- 11
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp282 20 "%0%!LEVEL! %!FUNC!:Sending a NAS_GET_3GPP2_SUBSCRIPTION_INFO_REQ" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::GetIMSIFromNV
{
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp82 11 "%0%!LEVEL! %!FUNC!:hUiccApp in the input param is 0x%10!08X!" //   LEVEL=TRACE_LEVEL_CRITICAL FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::InitParams
{
m_Params, ItemLong -- 10
}
#typev WMRilGetIMSI_cpp75 10 "%0%!LEVEL! %!FUNC!:Buffer size %10!u! != sizeof(HUICCAPP)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::InitParams
{
dwBufferLength, ItemLong -- 10
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp734 47 "%0%!LEVEL! %!FUNC!:Error populating the RILIMSI response structure." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessCDMAIMSI
{
}
#typev WMRilGetIMSI_cpp746 48 "%0%!LEVEL! %!FUNC!:IMSI MCC DWORD value: %10!u!.  IMSI MNC DWORD value: %11!u!" //   LEVEL=TRACE_LEVEL_CRITICAL FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessCDMAIMSI
{
pRilIMSIInfo->dwMcc, ItemLong -- 10
pRilIMSIInfo->dwMnc, ItemLong -- 11
}
#typev WMRilGetIMSI_cpp722 46 "%0%!LEVEL! %!FUNC!:IMSI = %10!s!, IMSI length = %11!u!, IMSI String length (including null terminating character) = %12!u!" //   LEVEL=TRACE_LEVEL_CRITICAL FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessCDMAIMSI
{
pRilIMSIInfo->wszImsi, ItemWString -- 10
IMSI_NumOfDigits, ItemLong -- 11
IMSI_NumOfDigits + 1, ItemLong -- 12
}
#typev WMRilGetIMSI_cpp696 44 "%0%!LEVEL! %!FUNC!:CLASS 1 IMSI with length = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessCDMAIMSI
{
IMSI_NumOfDigits, ItemLong -- 10
}
#typev WMRilGetIMSI_cpp669 43 "%0%!LEVEL! %!FUNC!:Decoded CDMA IMSI components: MCC=%10!s!, Digits 11_12=%11!s!, S2=%12!s!, S1_Second3Digits=%13!s!, S1_ThousandsDigit=%14!u!, S1_Last3Digits=%15!s!" //   LEVEL=TRACE_LEVEL_CRITICAL FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessCDMAIMSI
{
MCC, ItemString -- 10
Digits_11_12, ItemString -- 11
S2, ItemString -- 12
S1_Second3Digits, ItemString -- 13
S1_ThousandsDigit - '0', ItemLong -- 14
S1_Last3Digits, ItemString -- 15
}
#typev WMRilGetIMSI_cpp653 42 "%0%!LEVEL! %!FUNC!:IMSI_CDMA has incorrect thousands digit = %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessCDMAIMSI
{
IMSI_S1_ThousandsDigit, ItemLong -- 10
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp1169 65 "%0%!LEVEL! %!FUNC!:m_State is wrong" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessExternalIndication
{
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp1164 64 "%0%!LEVEL! %!FUNC!:Number of MNC digits: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessExternalIndication
{
NumMNCdigits, ItemLong -- 10
}
#typev WMRilGetIMSI_cpp1160 63 "%0%!LEVEL! %!FUNC!:MNC length: %10!u!. Invalid MNC length. The MNC must be either 2 or 3 digits. MNC is two digits in this case." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessExternalIndication
{
NumMNCdigits, ItemLong -- 10
}
#typev WMRilGetIMSI_cpp1149 62 "%0%!LEVEL! %!FUNC!:EF-AD file is less than 4 bytes.  MNC is two digits in this case." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessExternalIndication
{
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp1102 61 "%0%!LEVEL! %!FUNC!:IMSI_M is not programmed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessExternalIndication
{
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp1066 60 "%0%!LEVEL! %!FUNC!:IMSI_T is not programmed" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessExternalIndication
{
}
#typev WMRilGetIMSI_cpp1048 59 "%0%!LEVEL! %!FUNC!:DebugDump IMSI content: %10!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessExternalIndication
{
WMRIL_LOG_XSTR          (              pReadTransparentInd->read_result.content.               pReadTransparentInd->read_result.content_len          ), ItemHEXDump -- 10
}
#typev WMRilGetIMSI_cpp1047 58 "%0%!LEVEL! %!FUNC!:IMSI content Length = %10!u!" //   LEVEL=TRACE_LEVEL_CRITICAL FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessExternalIndication
{
pReadTransparentInd->read_result.content_len, ItemLong -- 10
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp1022 57 "%0%!LEVEL! %!FUNC!:Can't register for QMI_UIM_READ_TRANSPARENT_IND_V01" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessExternalIndication
{
}
#typev WMRilGetIMSI_cpp1018 56 "%0%!LEVEL! %!FUNC!:The indication token in QMI_UIM_READ_TRANSPARENT_IND_V01 is %10!u!, not equal to the expected token ID %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessExternalIndication
{
pReadTransparentInd->indication_token, ItemLong -- 10
m_dwIndicationTokenID, ItemLong -- 11
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp1005 55 "%0%!LEVEL! %!FUNC!:Unexpected QMI indication message ID %10!s!(0x%11!08X!)." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessExternalIndication
{
Debug::QMIIndToStr(QMIUIMService. dwMsgID), ItemWString -- 10
dwMsgID, ItemLong -- 11
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp996 54 "%0%!LEVEL! %!FUNC!:Unexpected QMI service %10!s!(%11!u!). Expecting QMIUIMService" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessExternalIndication
{
static_cast<QmiServiceType>(serviceID), ItemEnum(QmiServiceType) -- 10
serviceID, ItemLong -- 11
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp988 53 "%0%!LEVEL! %!FUNC!:Unexpected type = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessExternalIndication
{
typeid(*pIndId).name(), ItemString -- 10
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp552 37 "%0%!LEVEL! %!FUNC!:Error populating the RILIMSI response structure." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessGWIMSI
{
}
#typev WMRilGetIMSI_cpp575 39 "%0%!LEVEL! %!FUNC!:IMSI MNC DWORD value: %10!u!" //   LEVEL=TRACE_LEVEL_CRITICAL FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessGWIMSI
{
pRilIMSIInfo->dwMnc, ItemLong -- 10
}
#typev WMRilGetIMSI_cpp584 40 "%0%!LEVEL! %!FUNC!:IMSI MNC DWORD value: %10!u!" //   LEVEL=TRACE_LEVEL_CRITICAL FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessGWIMSI
{
pRilIMSIInfo->dwMnc, ItemLong -- 10
}
#typev WMRilGetIMSI_cpp589 41 "%0%!LEVEL! %!FUNC!:Improper number of MNC digits reported by the UICC card.  Error populating the RILIMSI response structure." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessGWIMSI
{
}
#typev WMRilGetIMSI_cpp564 38 "%0%!LEVEL! %!FUNC!:IMSI MCC DWORD value: %10!u!" //   LEVEL=TRACE_LEVEL_CRITICAL FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessGWIMSI
{
pRilIMSIInfo->dwMcc, ItemLong -- 10
}
#typev WMRilGetIMSI_cpp540 36 "%0%!LEVEL! %!FUNC!:IMSI = %10!s!, IMSI length = %11!u!, IMSI String length (including null terminating character) = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessGWIMSI
{
pRilIMSIInfo->wszImsi, ItemWString -- 10
IMSI_len, ItemLong -- 11
IMSI_len + 1, ItemLong -- 12
}
#typev WMRilGetIMSI_cpp522 35 "%0%!LEVEL! %!FUNC!:IMSI file content is invalid." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessGWIMSI
{
}
#typev WMRilGetIMSI_cpp516 34 "%0%!LEVEL! %!FUNC!:Oversized IMSI from EF-IMSI: len = %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessGWIMSI
{
ConvertedNum, ItemLong -- 10
}
#typev WMRilGetIMSI_cpp506 33 "%0%!LEVEL! %!FUNC!:Fail to convert EF-IMSI" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessGWIMSI
{
}
#typev WMRilGetIMSI_cpp484 32 "%0%!LEVEL! %!FUNC!:IMSI invalid length %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessGWIMSI
{
IMSI_len, ItemLong -- 10
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp1285 69 "%0%!LEVEL! %!FUNC!:Wait for card status internal indication to check the perso state" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessInternalIndication
{
}
#typev WMRilGetIMSI_cpp1280 68 "%0%!LEVEL! %!FUNC!:Failed to register for the internal indication QMI_UIM_STATUS_CHANGE_IND_V01." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessInternalIndication
{
}
#typev WMRilGetIMSI_cpp1211 67 "%0%!LEVEL! %!FUNC!:Unexpected internal indication %10!s!(%11!u!)." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessInternalIndication
{
Debug::WMRilInternalIndicationToStr(InternalIndicationID), ItemWString -- 10
InternalIndicationID, ItemLong -- 11
}
#typev WMRilGetIMSI_cpp1204 66 "%0%!LEVEL! %!FUNC!:Received internal indication %10!s!(%11!u!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessInternalIndication
{
Debug::WMRilInternalIndicationToStr(InternalIndicationID), ItemWString -- 10
InternalIndicationID, ItemLong -- 11
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp1318 74 "%0%!LEVEL! %!FUNC!:Waiting for card status intenral indication timeout." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessTimeout
{
}
#typev WMRilGetIMSI_cpp1315 73 "%0%!LEVEL! %!FUNC!:Waiting for AD timeout." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessTimeout
{
}
#typev WMRilGetIMSI_cpp1312 72 "%0%!LEVEL! %!FUNC!:Waiting for GW IMSI timeout." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessTimeout
{
}
#typev WMRilGetIMSI_cpp1309 71 "%0%!LEVEL! %!FUNC!:Waiting for CDMA IMSI M timeout." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessTimeout
{
}
#typev WMRilGetIMSI_cpp1306 70 "%0%!LEVEL! %!FUNC!:Waiting for CDMA IMSI T timeout." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ProcessTimeout
{
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp1587 95 "%0%!LEVEL! %!FUNC!:The indication token in QMI_UIM_READ_TRANSPARENT_RESP_V01 is %10!u!, not equal to the expected token ID %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::SendSyncQMIReadTransparentRequestThenProcessResponse
{
ReadTransparentResp.indication_token, ItemLong -- 10
m_dwIndicationTokenID, ItemLong -- 11
}
#typev WMRilGetIMSI_cpp1581 94 "%0%!LEVEL! %!FUNC!:The QMI_UIM_READ_TRANSPARENT_RESP_V01 does not include indication_token TLV" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::SendSyncQMIReadTransparentRequestThenProcessResponse
{
}
#typev WMRilGetIMSI_cpp1573 93 "%0%!LEVEL! %!FUNC!:QMI_UIM_READ_TRANSPARENT_RESP_V01 failure, error = %10!s!, result = %11!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::SendSyncQMIReadTransparentRequestThenProcessResponse
{
ReadTransparentResp.resp.error, ItemEnum(qmi_error_type_v01) -- 10
ReadTransparentResp.resp.result, ItemEnum(qmi_result_type_v01) -- 11
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp1566 92 "%0%!LEVEL! %!FUNC!:Failed to send QMI_UIM_READ_TRANSPARENT_REQ_V01, hr = %10!s!(0x%11!08X!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::SendSyncQMIReadTransparentRequestThenProcessResponse
{
hr, ItemEnum(RILERRORCODES) -- 10
hr, ItemLong -- 11
}
#typev WMRilGetIMSI_cpp1550 91 "%0%!LEVEL! %!FUNC!:Can not register for QMI_UIM_READ_TRANSPARENT_IND_V01" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::SendSyncQMIReadTransparentRequestThenProcessResponse
{
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp1462 86 "%0%!LEVEL! %!FUNC!:Incorrect EF-IMSI_T content length = %10!u! (should be %11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ValidateQMIIndication
{
pReadTransparentInd->read_result.content_len, ItemLong -- 10
EFIMSI_CDMALength, ItemLong -- 11
}
#typev WMRilGetIMSI_cpp1470 87 "%0%!LEVEL! %!FUNC!:Incorrect EF-IMSI_M content length = %10!u! (should be %11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ValidateQMIIndication
{
pReadTransparentInd->read_result.content_len, ItemLong -- 10
EFIMSI_CDMALength, ItemLong -- 11
}
#typev WMRilGetIMSI_cpp1490 89 "%0%!LEVEL! %!FUNC!:Invalid IMSI content length of %10!u! bytes.  IMSI file content must be <= %11!u! bytes." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ValidateQMIIndication
{
pReadTransparentInd->read_result.content[0], ItemLong -- 10
EFIMSI_IMSI_LEN, ItemLong -- 11
}
#typev WMRilGetIMSI_cpp1481 88 "%0%!LEVEL! %!FUNC!:Invalid EF-IMSI file length of %10!u! bytes.  IMSI file must be %11!u! bytes." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ValidateQMIIndication
{
pReadTransparentInd->read_result.content_len, ItemLong -- 10
EFIMSI_IMSI_LEN + 1, ItemLong -- 11
}
#typev WMRilGetIMSI_cpp1499 90 "%0%!LEVEL! %!FUNC!:QMI_UIM_READ_TRANSPARENT_IND optional TLV has invalid content len = %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ValidateQMIIndication
{
pReadTransparentInd->read_result.content_len, ItemLong -- 10
}
#typev WMRilGetIMSI_cpp1452 85 "%0%!LEVEL! %!FUNC!:QMI_UIM_READ_TRANSPARENT_IND does not include Optional read_result TLV" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ValidateQMIIndication
{
}
#typev WMRilGetIMSI_cpp1447 84 "%0%!LEVEL! %!FUNC!:QMI_UIM_READ_TRANSPARENT_IND does not include Optional card_result TLV" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_UIM FUNC=WMRil::GetIMSIClass::ValidateQMIIndication
{
}
// PDB:  WMRil.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev WMRilGetIMSI_cpp1411 83 "%0%!LEVEL! %!FUNC!:QMI_NAS_GET_3GPP2_SUBSCRIPTION_INFO_RESP does not have optional True IMSI TLV as well as MIN based TLV" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=ZONE_NETWORK FUNC=WMRil::GetIMSIClass::ValidateQMIResponse
{
}
#enumv qmi_error_type_v01
{
QMI_ERROR_TYPE_MIN_ENUM_VAL_V01,0x80000001
QMI_ERR_NONE_V01,0x0
QMI_ERR_MALFORMED_MSG_V01,0x1
QMI_ERR_NO_MEMORY_V01,0x2
QMI_ERR_INTERNAL_V01,0x3
QMI_ERR_ABORTED_V01,0x4
QMI_ERR_CLIENT_IDS_EXHAUSTED_V01,0x5
QMI_ERR_UNABORTABLE_TRANSACTION_V01,0x6
QMI_ERR_INVALID_CLIENT_ID_V01,0x7
QMI_ERR_NO_THRESHOLDS_V01,0x8
QMI_ERR_INVALID_HANDLE_V01,0x9
QMI_ERR_INVALID_PROFILE_V01,0xA
QMI_ERR_INVALID_PINID_V01,0xB
QMI_ERR_INCORRECT_PIN_V01,0xC
QMI_ERR_NO_NETWORK_FOUND_V01,0xD
QMI_ERR_CALL_FAILED_V01,0xE
QMI_ERR_OUT_OF_CALL_V01,0xF
QMI_ERR_NOT_PROVISIONED_V01,0x10
QMI_ERR_MISSING_ARG_V01,0x11
QMI_ERR_ARG_TOO_LONG_V01,0x13
QMI_ERR_INVALID_TX_ID_V01,0x16
QMI_ERR_DEVICE_IN_USE_V01,0x17
QMI_ERR_OP_NETWORK_UNSUPPORTED_V01,0x18
QMI_ERR_OP_DEVICE_UNSUPPORTED_V01,0x19
QMI_ERR_NO_EFFECT_V01,0x1A
QMI_ERR_NO_FREE_PROFILE_V01,0x1B
QMI_ERR_INVALID_PDP_TYPE_V01,0x1C
QMI_ERR_INVALID_TECH_PREF_V01,0x1D
QMI_ERR_INVALID_PROFILE_TYPE_V01,0x1E
QMI_ERR_INVALID_SERVICE_TYPE_V01,0x1F
QMI_ERR_INVALID_REGISTER_ACTION_V01,0x20
QMI_ERR_INVALID_PS_ATTACH_ACTION_V01,0x21
QMI_ERR_AUTHENTICATION_FAILED_V01,0x22
QMI_ERR_PIN_BLOCKED_V01,0x23
QMI_ERR_PIN_PERM_BLOCKED_V01,0x24
QMI_ERR_SIM_NOT_INITIALIZED_V01,0x25
QMI_ERR_MAX_QOS_REQUESTS_IN_USE_V01,0x26
QMI_ERR_INCORRECT_FLOW_FILTER_V01,0x27
QMI_ERR_NETWORK_QOS_UNAWARE_V01,0x28
QMI_ERR_INVALID_ID_V01,0x29
QMI_ERR_INVALID_QOS_ID_V01,0x29
QMI_ERR_REQUESTED_NUM_UNSUPPORTED_V01,0x2A
QMI_ERR_INTERFACE_NOT_FOUND_V01,0x2B
QMI_ERR_FLOW_SUSPENDED_V01,0x2C
QMI_ERR_INVALID_DATA_FORMAT_V01,0x2D
QMI_ERR_GENERAL_V01,0x2E
QMI_ERR_UNKNOWN_V01,0x2F
QMI_ERR_INVALID_ARG_V01,0x30
QMI_ERR_INVALID_INDEX_V01,0x31
QMI_ERR_NO_ENTRY_V01,0x32
QMI_ERR_DEVICE_STORAGE_FULL_V01,0x33
QMI_ERR_DEVICE_NOT_READY_V01,0x34
QMI_ERR_NETWORK_NOT_READY_V01,0x35
QMI_ERR_CAUSE_CODE_V01,0x36
QMI_ERR_MESSAGE_NOT_SENT_V01,0x37
QMI_ERR_MESSAGE_DELIVERY_FAILURE_V01,0x38
QMI_ERR_INVALID_MESSAGE_ID_V01,0x39
QMI_ERR_ENCODING_V01,0x3A
QMI_ERR_AUTHENTICATION_LOCK_V01,0x3B
QMI_ERR_INVALID_TRANSITION_V01,0x3C
QMI_ERR_NOT_A_MCAST_IFACE_V01,0x3D
QMI_ERR_MAX_MCAST_REQUESTS_IN_USE_V01,0x3E
QMI_ERR_INVALID_MCAST_HANDLE_V01,0x3F
QMI_ERR_INVALID_IP_FAMILY_PREF_V01,0x40
QMI_ERR_SESSION_INACTIVE_V01,0x41
QMI_ERR_SESSION_INVALID_V01,0x42
QMI_ERR_SESSION_OWNERSHIP_V01,0x43
QMI_ERR_INSUFFICIENT_RESOURCES_V01,0x44
QMI_ERR_DISABLED_V01,0x45
QMI_ERR_INVALID_OPERATION_V01,0x46
QMI_ERR_INVALID_QMI_CMD_V01,0x47
QMI_ERR_TPDU_TYPE_V01,0x48
QMI_ERR_SMSC_ADDR_V01,0x49
QMI_ERR_INFO_UNAVAILABLE_V01,0x4A
QMI_ERR_SEGMENT_TOO_LONG_V01,0x4B
QMI_ERR_SEGMENT_ORDER_V01,0x4C
QMI_ERR_BUNDLING_NOT_SUPPORTED_V01,0x4D
QMI_ERR_OP_PARTIAL_FAILURE_V01,0x4E
QMI_ERR_POLICY_MISMATCH_V01,0x4F
QMI_ERR_SIM_FILE_NOT_FOUND_V01,0x50
QMI_ERR_EXTENDED_INTERNAL_V01,0x51
QMI_ERR_ACCESS_DENIED_V01,0x52
QMI_ERR_HARDWARE_RESTRICTED_V01,0x53
QMI_ERR_ACK_NOT_SENT_V01,0x54
QMI_ERR_INJECT_TIMEOUT_V01,0x55
QMI_ERR_INCOMPATIBLE_STATE_V01,0x5A
QMI_ERR_FDN_RESTRICT_V01,0x5B
QMI_ERR_SUPS_FAILURE_CAUSE_V01,0x5C
QMI_ERR_NO_RADIO_V01,0x5D
QMI_ERR_NOT_SUPPORTED_V01,0x5E
QMI_ERR_NO_SUBSCRIPTION_V01,0x5F
QMI_ERR_CARD_CALL_CONTROL_FAILED_V01,0x60
QMI_ERR_NETWORK_ABORTED_V01,0x61
QMI_ERR_MSG_BLOCKED_V01,0x62
QMI_ERR_INVALID_SESSION_TYPE_V01,0x64
QMI_ERR_INVALID_PB_TYPE_V01,0x65
QMI_ERR_NO_SIM_V01,0x66
QMI_ERR_PB_NOT_READY_V01,0x67
QMI_ERR_PIN_RESTRICTION_V01,0x68
QMI_ERR_PIN2_RESTRICTION_V01,0x69
QMI_ERR_PUK_RESTRICTION_V01,0x6A
QMI_ERR_PUK2_RESTRICTION_V01,0x6B
QMI_ERR_PB_ACCESS_RESTRICTED_V01,0x6C
QMI_ERR_PB_DELETE_IN_PROG_V01,0x6D
QMI_ERR_PB_TEXT_TOO_LONG_V01,0x6E
QMI_ERR_PB_NUMBER_TOO_LONG_V01,0x6F
QMI_ERR_PB_HIDDEN_KEY_RESTRICTION_V01,0x70
QMI_ERR_PB_NOT_AVAILABLE_V01,0x71
QMI_ERR_DEVICE_MEMORY_ERROR_V01,0x72
QMI_ERROR_TYPE_MAX_ENUM_VAL_V01,0x7FFFFFFF
}
#enumv qmi_result_type_v01
{
QMI_RESULT_TYPE_MIN_ENUM_VAL_V01,0x80000001
QMI_RESULT_SUCCESS_V01,0x0
QMI_RESULT_FAILURE_V01,0x1
QMI_RESULT_TYPE_MAX_ENUM_VAL_V01,0x7FFFFFFF
}
#enumv QmiServiceType
{
QMIDMSService,0x0
QMINASService,0x1
QMIWMSService,0x2
QMIVoiceService,0x3
QMICATService,0x4
QMIUIMService,0x5
QMIPBMService,0x6
QMISARService,0x7
QMIIMSSettingsService,0x8
QMIIMSApplicationService,0x9
QMIDSDService,0xA
QMIDISService,0xB
QMIPDCService,0xC
}
#enumv RILERRORCODES
{
RIL_E_PHONEFAILURE,0x81000001
RIL_E_NOCONNECTION,0x81000002
RIL_E_LINKRESERVED,0x81000003
RIL_E_OPNOTALLOWED,0x81000004
RIL_E_OPNOTSUPPORTED,0x81000005
RIL_E_UICCNOTINSERTED,0x81000006
RIL_E_UICCFAILURE,0x81000007
RIL_E_UICCBUSY,0x81000008
RIL_E_UICCWRONG,0x81000009
RIL_E_INCORRECTPASSWORD,0x8100000A
RIL_E_MEMORYFULL,0x8100000B
RIL_E_INVALIDINDEX,0x8100000C
RIL_E_NOTFOUND,0x8100000D
RIL_E_MEMORYFAILURE,0x8100000E
RIL_E_TEXTSTRINGTOOLONG,0x8100000F
RIL_E_INVALIDTEXTSTRING,0x81000010
RIL_E_DIALSTRINGTOOLONG,0x81000011
RIL_E_INVALIDDIALSTRING,0x81000012
RIL_E_NONETWORKSVC,0x81000013
RIL_E_NETWORKTIMEOUT,0x81000014
RIL_E_EMERGENCYONLY,0x81000015
RIL_E_TELEMATICIWUNSUPPORTED,0x81000016
RIL_E_SMTYPE0UNSUPPORTED,0x81000017
RIL_E_CANTREPLACEMSG,0x81000018
RIL_E_PROTOCOLIDERROR,0x81000019
RIL_E_DCSUNSUPPORTED,0x8100001A
RIL_E_MSGCLASSUNSUPPORTED,0x8100001B
RIL_E_DCSERROR,0x8100001C
RIL_E_CMDCANTBEACTIONED,0x8100001D
RIL_E_CMDUNSUPPORTED,0x8100001E
RIL_E_CMDERROR,0x8100001F
RIL_E_MSGBODYHEADERERROR,0x81000020
RIL_E_SCBUSY,0x81000021
RIL_E_NOSCSUBSCRIPTION,0x81000022
RIL_E_SCSYSTEMFAILURE,0x81000023
RIL_E_INVALIDADDRESS,0x81000024
RIL_E_DESTINATIONBARRED,0x81000025
RIL_E_REJECTEDDUPLICATE,0x81000026
RIL_E_VPFUNSUPPORTED,0x81000027
RIL_E_VPUNSUPPORTED,0x81000028
RIL_E_UICCMSGSTORAGEFULL,0x81000029
RIL_E_NOUICCMSGSTORAGE,0x8100002A
RIL_E_UICCTOOLKITBUSY,0x8100002B
RIL_E_UICCDOWNLOADERROR,0x8100002C
RIL_E_MSGSVCRESERVED,0x8100002D
RIL_E_INVALIDMSGPARAM,0x8100002E
RIL_E_INVALIDSCADDRESS,0x8100002F
RIL_E_UNASSIGNEDNUMBER,0x81000030
RIL_E_MSGBARREDBYOPERATOR,0x81000031
RIL_E_MSGCALLBARRED,0x81000032
RIL_E_MSGXFERREJECTED,0x81000033
RIL_E_DESTINATIONOUTOFSVC,0x81000034
RIL_E_UNIDENTIFIEDSUBCRIBER,0x81000035
RIL_E_SVCUNSUPPORTED,0x81000036
RIL_E_UNKNOWNSUBSCRIBER,0x81000037
RIL_E_NETWKOUTOFORDER,0x81000038
RIL_E_NETWKTEMPFAILURE,0x81000039
RIL_E_CONGESTION,0x8100003A
RIL_E_RESOURCESUNAVAILABLE,0x8100003B
RIL_E_SVCNOTSUBSCRIBED,0x8100003C
RIL_E_SVCNOTIMPLEMENTED,0x8100003D
RIL_E_INVALIDMSGREFERENCE,0x8100003E
RIL_E_INVALIDMSG,0x8100003F
RIL_E_INVALIDMANDATORYINFO,0x81000040
RIL_E_MSGTYPEUNSUPPORTED,0x81000041
RIL_E_ICOMPATIBLEMSG,0x81000042
RIL_E_INFOELEMENTUNSUPPORTED,0x81000043
RIL_E_PROTOCOLERROR,0x81000044
RIL_E_NETWORKERROR,0x81000045
RIL_E_MESSAGINGERROR,0x81000046
RIL_E_NOTREADY,0x81000047
RIL_E_TIMEDOUT,0x81000048
RIL_E_CANCELLED,0x81000049
RIL_E_NONOTIFYCALLBACK,0x8100004A
RIL_E_OPFMTUNAVAILABLE,0x8100004B
RIL_E_NORESPONSETODIAL,0x8100004C
RIL_E_SECURITYFAILURE,0x8100004D
RIL_E_RADIOFAILEDINIT,0x8100004E
RIL_E_DRIVERINITFAILED,0x8100004F
RIL_E_RADIONOTPRESENT,0x81000050
RIL_E_RADIOOFF,0x81000051
RIL_E_ILLEGALMS,0x81000052
RIL_E_ILLEGALME,0x81000053
RIL_E_GPRSSERVICENOTALLOWED,0x81000054
RIL_E_PLMNNOTALLOWED,0x81000055
RIL_E_LOCATIONAREANOTALLOWED,0x81000056
RIL_E_ROAMINGNOTALLOWEDINTHISLOCATIONAREA,0x81000057
RIL_E_SERVICEOPTIONNOTSUPPORTED,0x81000058
RIL_E_REQUESTEDSERVICEOPTIONNOTSUBSCRIBED,0x81000059
RIL_E_SERVICEOPTIONTEMPORARILYOUTOFORDER,0x8100005A
RIL_E_PDPAUTHENTICATIONFAILURE,0x8100005B
RIL_E_INVALIDMOBILECLASS,0x8100005C
RIL_E_UNSPECIFIEDGPRSERROR,0x8100005D
RIL_E_RADIOREBOOTED,0x8100005E
RIL_E_INVALIDCONTEXTSTATE,0x8100005F
RIL_E_MAXCONTEXTS,0x81000060
RIL_E_SYNCHRONOUS_DATA_UNAVAILABLE,0x81000061
RIL_E_FDNRESTRICT,0x81000062
RIL_E_INVALIDASYNCCOMMANDRESPONSE,0x81000063
RIL_E_INCOMPATIBLEPROXYDRIVER,0x81000064
RIL_E_INVALIDDRIVERVERSION,0x81000065
RIL_E_USIMCALLMODIFIED,0x81000066
RIL_E_PASSWORDMISMATCH,0x81000067
RIL_E_INVALIDCONTEXTACTIVATIONSTRING,0x81000068
RIL_E_UICCAPPINACCESSIBLE,0x81000069
RIL_E_UICCPINREQUIRED,0x8100006A
RIL_E_UICCPUKREQUIRED,0x8100006B
RIL_E_UICCPUKBLOCKED,0x8100006C
RIL_E_EXECUTORNOTREADY,0x8100006D
RIL_E_INVALIDUICCKEYREF,0x8100006E
RIL_E_UICCINACTIVE,0x8100006F
RIL_E_PERSOPUKREQUIRED,0x81000070
RIL_E_PERSOPUKBLOCKED,0x81000071
RIL_E_PERSOCHECKFAILED,0x81000072
RIL_E_INVALIDUICCPATH,0x81000073
RIL_E_IMSTEMPFAILURE,0x81000074
RIL_E_UICCNOTREADY,0x81000075
RIL_E_UICCPOWEROFF,0x81000076
RIL_E_CALLISACTIVE,0x81000077
RIL_E_USIMCALLBLOCKED,0x81000078
RIL_E_UICCADMRESTRICTED,0x81000079
RIL_E_DMSERVICENOTREADY,0x8100007A
RIL_E_DMGETCONFIGFAILED,0x8100007B
RIL_E_DMCOMMITFAILED,0x8100007C
RIL_E_OTHEREXECUTORBUSY,0x8100007D
RIL_E_IMSNOHANDOVERTARGETFOUND,0x8100007E
RIL_E_VCCHANDOVERINPROGRESS,0x8100007F
RIL_E_INVALIDREMOTEURI,0x81000080
RIL_E_ECTNOTALLOWED,0x81000081
RIL_E_ECTCALLINCONF,0x81000082
RIL_E_ECTCALLNOTONHOLD,0x81000083
RIL_E_ECTNOTSUBSCRIBED,0x81000084
RIL_E_ECTUNAVAILABLE,0x81000085
RIL_E_ECTINCOMPATIBLE,0x81000086
RIL_E_ECTNOTSUPPORTED,0x81000087
RIL_E_ECTSYSTEMERROR,0x81000088
RIL_E_ECTNORESOURCE,0x81000089
RIL_E_ECTCALLBARRED,0x8100008A
RIL_E_ECTUNKNOWN,0x8100008B
RIL_E_IMSCALLISACTIVE,0x8100008C
}
