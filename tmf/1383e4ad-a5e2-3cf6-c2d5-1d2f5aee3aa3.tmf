// PDB:  qcadc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
1383e4ad-a5e2-3cf6-c2d5-1d2f5aee3aa3 kmdf // SRC=VAdcTMBsp.c MJ= MN=
#typev VAdcTMBsp_c283 21 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetChannels
{
}
#typev VAdcTMBsp_c318 23 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - zero length channel name" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetChannels
{
}
#typev VAdcTMBsp_c331 24 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - could not allocate memory for channel name %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetChannels
{
status, ItemNTSTATUS -- 10
}
#typev VAdcTMBsp_c342 25 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - could not copy string name %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetChannels
{
status, ItemNTSTATUS -- 10
}
#typev VAdcTMBsp_c302 22 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - could not allocate memory %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetChannels
{
status, ItemNTSTATUS -- 10
}
#typev VAdcTMBsp_c275 20 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetChannels
{
}
#typev VAdcTMBsp_c269 19 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - could not get ACPI data %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetChannels
{
status, ItemNTSTATUS -- 10
}
#typev VAdcTMBsp_c260 18 "%0VAdcTMBsp.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=VAdcTM_AcpiGetChannels
{
}
#typev VAdcTMBsp_c112 13 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetGenProps
{
}
#typev VAdcTMBsp_c104 12 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetGenProps
{
}
#typev VAdcTMBsp_c98 11 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - could not get ACPI data %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetGenProps
{
status, ItemNTSTATUS -- 10
}
#typev VAdcTMBsp_c89 10 "%0VAdcTMBsp.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=VAdcTM_AcpiGetGenProps
{
}
#typev VAdcTMBsp_c615 34 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetGpios
{
}
#typev VAdcTMBsp_c654 36 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - zero length for GPIO channels" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetGpios
{
}
#typev VAdcTMBsp_c668 37 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - could not allocate memory for GPIO channels %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetGpios
{
status, ItemNTSTATUS -- 10
}
#typev VAdcTMBsp_c633 35 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - could not allocate memory %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetGpios
{
status, ItemNTSTATUS -- 10
}
#typev VAdcTMBsp_c607 33 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetGpios
{
}
#typev VAdcTMBsp_c601 32 "%0VAdcTMBsp.c::%!FUNC! WARNING: VAdcTM - no GPIO channels found %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetGpios
{
status, ItemNTSTATUS -- 10
}
#typev VAdcTMBsp_c592 31 "%0VAdcTMBsp.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=VAdcTM_AcpiGetGpios
{
}
#typev VAdcTMBsp_c475 27 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - could not get ACPI data %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetLookupTables
{
status, ItemNTSTATUS -- 10
}
#typev VAdcTMBsp_c481 28 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetLookupTables
{
}
#typev VAdcTMBsp_c489 29 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetLookupTables
{
}
#typev VAdcTMBsp_c507 30 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - could not allocate memory %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetLookupTables
{
status, ItemNTSTATUS -- 10
}
#typev VAdcTMBsp_c449 26 "%0VAdcTMBsp.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=VAdcTM_AcpiGetLookupTables
{
}
#typev VAdcTMBsp_c202 17 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetMeasTimesProps
{
}
#typev VAdcTMBsp_c194 16 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetMeasTimesProps
{
}
#typev VAdcTMBsp_c188 15 "%0VAdcTMBsp.c::%!FUNC! ERROR: VAdcTM - could not get ACPI data %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdcTM_AcpiGetMeasTimesProps
{
status, ItemNTSTATUS -- 10
}
#typev VAdcTMBsp_c179 14 "%0VAdcTMBsp.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=VAdcTM_AcpiGetMeasTimesProps
{
}
#typev VAdcTMDevice_c743 38 "%0VAdcTMBsp.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=VAdcTM_DeviceInit
{
}
