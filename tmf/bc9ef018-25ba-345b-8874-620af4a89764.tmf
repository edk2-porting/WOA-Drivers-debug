// PDB:  qcsmmu850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
bc9ef018-25ba-345b-8874-620af4a89764 SMMU // SRC=Driver.cpp MJ= MN=
#typev Driver_cpp356 25 "%0 Driver.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=OnDeviceAdd
{
}
#typev Driver_cpp349 24 "%0 Driver.cpp::%!FUNC!::349 : Failed WdfInterruptCreate with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnDeviceAdd
{
status, ItemNTSTATUS -- 10
}
#typev Driver_cpp316 23 "%0 Driver.cpp::%!FUNC! :INFO WdfDeviceWdmGetDeviceObject returned PDEVICE_OBJECT=0x%10!p!!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=OnDeviceAdd
{
pDevice->PPwrDevObj, ItemPtr -- 10
}
#typev Driver_cpp302 22 "%0 Driver.cpp::%!FUNC!::302 : Could not get device context" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnDeviceAdd
{
}
#typev Driver_cpp286 21 "%0 Driver.cpp::%!FUNC!::286 : Failed WdfDeviceCreate with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=OnDeviceAdd
{
status, ItemNTSTATUS -- 10
}
#typev Driver_cpp243 20 "%0 Driver.cpp::%!FUNC! :Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=OnDeviceAdd
{
}
#typev Driver_cpp144 15 "%0 Driver.cpp::%!FUNC! :Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=OnDriverCleanup
{
}
#typev Driver_cpp206 19 "%0 Driver.cpp::%!FUNC! :IOMMU Interface not up, HVX is not enabled, go ahead with legacy SMMU driver" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=SmmuCheckHVXStatus
{
}
#typev Driver_cpp201 18 "%0 Driver.cpp::%!FUNC! :IOMMU API Not found, HVX is not enabled, go ahead with legacy SMMU driver" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=SmmuCheckHVXStatus
{
}
#typev Driver_cpp196 17 "%0 Driver.cpp::%!FUNC! :CreateDomain Failed, HVX is not enabled, go ahead with legacy SMMU driver" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=SmmuCheckHVXStatus
{
}
#typev Driver_cpp192 16 "%0 Driver.cpp::%!FUNC!::192 : HVX Enabled, Skip legacy SMMU driver Initialization" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuCheckHVXStatus
{
}
#typev Driver_cpp490 35 "%0 Driver.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=SmmuDpc
{
}
#typev Driver_cpp486 34 "%0 Driver.cpp::%!FUNC! :Decide on default behavior for interrupt servicing" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=SmmuDpc
{
}
#typev Driver_cpp481 33 "%0 Driver.cpp::%!FUNC!::481 : Client DPC returned FAILURE" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuDpc
{
}
#typev Driver_cpp464 32 "%0 Driver.cpp::%!FUNC!::464 : Unidentified interrupt or Invalid Client ID" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuDpc
{
}
#typev Driver_cpp428 31 "%0 Driver.cpp::%!FUNC!::428 : Failed device context integrity check" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuDpc
{
}
#typev Driver_cpp422 30 "%0 Driver.cpp::%!FUNC!::422 : Failed to GetDeviceContext" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SmmuDpc
{
}
#typev Driver_cpp418 29 "%0 Driver.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=SmmuDpc
{
}
#typev Driver_cpp504 36 "%0 Driver.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=SmmuEvtDeviceSurpriseRemoval
{
}
#typev Driver_cpp387 28 "%0 Driver.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=SmmuIsr
{
}
#typev Driver_cpp385 27 "%0 Driver.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=SmmuIsr
{
}
#typev Driver_cpp384 26 "%0 Driver.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=SmmuIsr
{
}
#typev Driver_cpp131 14 "%0 Driver.cpp::%!FUNC! :Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=DriverEntry
{
}
#typev Driver_cpp120 13 "%0 Driver.cpp::%!FUNC!::120 :Exit. Failed to initialize G_SmmuGlobalDataPtr %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=EntryExit FUNC=DriverEntry
{
status, ItemNTSTATUS -- 10
}
#typev Driver_cpp105 12 "%0 Driver.cpp::%!FUNC!::105 :Exit. WdfDriverCreate failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=EntryExit FUNC=DriverEntry
{
status, ItemNTSTATUS -- 10
}
#typev Driver_cpp86 11 "%0 Driver.cpp::%!FUNC!::86 :Exit. Failed to instantiate SmmuGlobalDataClass" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=EntryExit FUNC=DriverEntry
{
}
#typev Driver_cpp73 10 "%0 Driver.cpp::%!FUNC! :Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=DriverEntry
{
}
