// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
d2b018a7-7ca8-3f1c-cea1-f2c5b5687644 QcVidEncMFT // SRC=qveVideoUmdCb.cpp MJ= MN=
#typev qveVideoUmdCb_cpp580 45 "%0[0x%10!p!] QVE: HandleDriverCb Unknown Callback Type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp575 44 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_ERROR hr 0x%11!0x! Reason: %12!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
pCbParams->CBParam.Error.hr, ItemLong -- 11
pCbParams->CBParam.Error.reason, ItemLong -- 12
}
#typev qveVideoUmdCb_cpp571 43 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_DESTROY_SESSION" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp567 42 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_STOP_DONE" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp563 63 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp563 62 "%0[0x%10!p!] QVE: Failed - invalid m_hEOSDone handle" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp563 61 "%0[0x%10!p!] QVE: Posting async work to process EOS" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp562 41 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_EOS_DONE" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp558 66 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp558 65 "%0[0x%10!p!] QVE: Failed - invalid m_hFlushDone handle" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp558 64 "%0[0x%10!p!] QVE: Posting async work to process flush" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp557 40 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_FLUSH_DONE" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp552 39 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp543 38 "%0[0x%10!p!] QVE: ProcessBitStreamCb failed hr = 0x%11!0x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp539 20 "%0[0x%10!p!] QVE: Invalid bit stream pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp531 37 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_BITSTREAM" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp526 36 "%0[0x%10!p!] QVE: ProcessSeqHdrCb() failed, result = 0x%11!0x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp523 21 "%0[0x%10!p!] QVE: ProcessSeqHdrCb: Invalid Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp522 35 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_SEQHDR" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp512 34 "%0[0x%10!p!] QVE: Failed - invalid arg" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp818 58 "%0[0x%10!p!] QVE: Posting async work to process bitstream" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp688 52 "%0[0x%10!p!] QVE: Failed - Output protection is enabled, but output resource may not be usable by SCM" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp680 51 "%0[0x%10!p!] QVE: Failed - Output protection and HDCP encryption are disabled, but output resource is secure" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp784 57 "%0[0x%10!p!] QVE: Adjusted DTS(%11!I64u!)  EQUAL_TO     PTS(%12!I64u!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
uhDTS, ItemULongLong -- 11
uhPTS, ItemULongLong -- 12
}
#typev qveVideoUmdCb_cpp779 56 "%0[0x%10!p!] QVE:          DTS(%11!I64u!)  GREATER_THAN PTS(%12!I64u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
uhDTS, ItemULongLong -- 11
uhPTS, ItemULongLong -- 12
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp742 55 "%0[0x%10!p!] QVE: CleanPoint = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp726 54 "%0[0x%10!p!] QVE: LTRFrameInfo = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
ui32Value, ItemLong -- 11
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp695 53 "%0[0x%10!p!] QVE: BitStreamFilledLength %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
pBitStream->nBitStreamFilledLen, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp671 50 "%0[0x%10!p!] QVE: Updating OPM status of output buffer to 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
opmStatus.ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp666 49 "%0[0x%10!p!] QVE: Warning - Output protection is disabled, but output resource is secure" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp656 48 "%0[0x%10!p!] QVE: Failed - Output resource is Secure, but not SCM accessible" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp639 47 "%0[0x%10!p!] QVE: Bitstream OPM Status %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
pBitStream->opmStatus.ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp625 46 "%0[0x%10!p!] QVE: HandleFrameCoded: Flushing." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp202 60 "%0[0x%10!p!] QVE: Nonzero length bitstream for RC drop " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp210 19 "%0[0x%10!p!] QVE: Invalid FrameType 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
pBitStream->nFrameType, ItemLong -- 11
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp206 59 "%0[0x%10!p!] QVE: Nonzero length bitstream for frame not coded " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp183 18 "%0[0x%10!p!] QVE: FrameType 0x%11!0x! Tag %12!I64u! DTS %13!I64u! PTS %14!I64u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Perf FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
pBitStream->nFrameType, ItemLong -- 11
pBitStream->ulInputTag, ItemULongLong -- 12
pBitStream->ulDTS, ItemULongLong -- 13
pBitStream->ulPTS, ItemULongLong -- 14
}
#typev qveVideoUmdCb_cpp175 17 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp133 16 "%0***** CLEAR SAMPLE IN INPUT BUFFER and RELEASE SAMPLE *****" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
}
#typev qveVideoUmdCb_cpp121 15 "%0***** CLEAR 2D TEXTURE IN INPUT BUFFER *****" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
}
#typev qveVideoUmdCb_cpp109 14 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp99 13 "%0[0x%10!p!] QVE: Invalid input buffer " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp48 12 "%0[0x%10!p!] QVE: pBitStream->bOutputReleased = %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::OnOutputReleasedCb
{
this, ItemPtr -- 10
pBitStream->bOutputReleased, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp40 11 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnOutputReleasedCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp32 10 "%0[0x%10!p!] QVE: OnOutputReleasedCb: Invalid bit stream pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnOutputReleasedCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp372 25 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: SetMpegSeqHdr failed hr 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp357 24 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp353 23 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp346 22 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp431 29 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: SetMpegSeqHdr failed hr 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp416 28 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp412 27 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp405 26 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp487 33 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Queue MFTransformHaveOutput. hr = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp473 32 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp469 31 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp462 30 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp580 45 "%0[0x%10!p!] QVE: HandleDriverCb Unknown Callback Type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp575 44 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_ERROR hr 0x%11!0x! Reason: %12!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
pCbParams->CBParam.Error.hr, ItemLong -- 11
pCbParams->CBParam.Error.reason, ItemLong -- 12
}
#typev qveVideoUmdCb_cpp571 43 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_DESTROY_SESSION" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp567 42 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_STOP_DONE" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp563 63 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp563 62 "%0[0x%10!p!] QVE: Failed - invalid m_hEOSDone handle" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp563 61 "%0[0x%10!p!] QVE: Posting async work to process EOS" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp562 41 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_EOS_DONE" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp558 66 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp558 65 "%0[0x%10!p!] QVE: Failed - invalid m_hFlushDone handle" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp558 64 "%0[0x%10!p!] QVE: Posting async work to process flush" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp557 40 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_FLUSH_DONE" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp552 39 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp543 38 "%0[0x%10!p!] QVE: ProcessBitStreamCb failed hr = 0x%11!0x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp539 20 "%0[0x%10!p!] QVE: Invalid bit stream pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp531 37 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_BITSTREAM" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp526 36 "%0[0x%10!p!] QVE: ProcessSeqHdrCb() failed, result = 0x%11!0x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp523 21 "%0[0x%10!p!] QVE: ProcessSeqHdrCb: Invalid Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp522 35 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_SEQHDR" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp512 34 "%0[0x%10!p!] QVE: Failed - invalid arg" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp818 58 "%0[0x%10!p!] QVE: Posting async work to process bitstream" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp688 52 "%0[0x%10!p!] QVE: Failed - Output protection is enabled, but output resource may not be usable by SCM" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp680 51 "%0[0x%10!p!] QVE: Failed - Output protection and HDCP encryption are disabled, but output resource is secure" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp784 57 "%0[0x%10!p!] QVE: Adjusted DTS(%11!I64u!)  EQUAL_TO     PTS(%12!I64u!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
uhDTS, ItemULongLong -- 11
uhPTS, ItemULongLong -- 12
}
#typev qveVideoUmdCb_cpp779 56 "%0[0x%10!p!] QVE:          DTS(%11!I64u!)  GREATER_THAN PTS(%12!I64u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
uhDTS, ItemULongLong -- 11
uhPTS, ItemULongLong -- 12
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp742 55 "%0[0x%10!p!] QVE: CleanPoint = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp726 54 "%0[0x%10!p!] QVE: LTRFrameInfo = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
ui32Value, ItemLong -- 11
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp695 53 "%0[0x%10!p!] QVE: BitStreamFilledLength %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
pBitStream->nBitStreamFilledLen, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp671 50 "%0[0x%10!p!] QVE: Updating OPM status of output buffer to 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
opmStatus.ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp666 49 "%0[0x%10!p!] QVE: Warning - Output protection is disabled, but output resource is secure" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp656 48 "%0[0x%10!p!] QVE: Failed - Output resource is Secure, but not SCM accessible" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp639 47 "%0[0x%10!p!] QVE: Bitstream OPM Status %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
pBitStream->opmStatus.ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp625 46 "%0[0x%10!p!] QVE: HandleFrameCoded: Flushing." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp202 60 "%0[0x%10!p!] QVE: Nonzero length bitstream for RC drop " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp210 19 "%0[0x%10!p!] QVE: Invalid FrameType 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
pBitStream->nFrameType, ItemLong -- 11
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp206 59 "%0[0x%10!p!] QVE: Nonzero length bitstream for frame not coded " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp183 18 "%0[0x%10!p!] QVE: FrameType 0x%11!0x! Tag %12!I64u! DTS %13!I64u! PTS %14!I64u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Perf FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
pBitStream->nFrameType, ItemLong -- 11
pBitStream->ulInputTag, ItemULongLong -- 12
pBitStream->ulDTS, ItemULongLong -- 13
pBitStream->ulPTS, ItemULongLong -- 14
}
#typev qveVideoUmdCb_cpp175 17 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp133 16 "%0***** CLEAR SAMPLE IN INPUT BUFFER and RELEASE SAMPLE *****" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
}
#typev qveVideoUmdCb_cpp121 15 "%0***** CLEAR 2D TEXTURE IN INPUT BUFFER *****" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
}
#typev qveVideoUmdCb_cpp109 14 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp99 13 "%0[0x%10!p!] QVE: Invalid input buffer " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp48 12 "%0[0x%10!p!] QVE: pBitStream->bOutputReleased = %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::OnOutputReleasedCb
{
this, ItemPtr -- 10
pBitStream->bOutputReleased, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp40 11 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnOutputReleasedCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp32 10 "%0[0x%10!p!] QVE: OnOutputReleasedCb: Invalid bit stream pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnOutputReleasedCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp372 25 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: SetMpegSeqHdr failed hr 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp357 24 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp353 23 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp346 22 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp431 29 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: SetMpegSeqHdr failed hr 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp416 28 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp412 27 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp405 26 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp487 33 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Queue MFTransformHaveOutput. hr = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp473 32 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp469 31 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp462 30 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp580 45 "%0[0x%10!p!] QVE: HandleDriverCb Unknown Callback Type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp575 44 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_ERROR hr 0x%11!0x! Reason: %12!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
pCbParams->CBParam.Error.hr, ItemLong -- 11
pCbParams->CBParam.Error.reason, ItemLong -- 12
}
#typev qveVideoUmdCb_cpp571 43 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_DESTROY_SESSION" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp567 42 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_STOP_DONE" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp563 63 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp563 62 "%0[0x%10!p!] QVE: Failed - invalid m_hEOSDone handle" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp563 61 "%0[0x%10!p!] QVE: Posting async work to process EOS" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp562 41 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_EOS_DONE" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp558 66 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp558 65 "%0[0x%10!p!] QVE: Failed - invalid m_hFlushDone handle" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp558 64 "%0[0x%10!p!] QVE: Posting async work to process flush" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp557 40 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_FLUSH_DONE" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp552 39 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp543 38 "%0[0x%10!p!] QVE: ProcessBitStreamCb failed hr = 0x%11!0x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp531 37 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_BITSTREAM" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp526 36 "%0[0x%10!p!] QVE: ProcessSeqHdrCb() failed, result = 0x%11!0x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp523 21 "%0[0x%10!p!] QVE: ProcessSeqHdrCb: Invalid Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp522 35 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_SEQHDR" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp512 34 "%0[0x%10!p!] QVE: Failed - invalid arg" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp818 58 "%0[0x%10!p!] QVE: Posting async work to process bitstream" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp784 57 "%0[0x%10!p!] QVE: Adjusted DTS(%11!I64u!)  EQUAL_TO     PTS(%12!I64u!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
uhDTS, ItemULongLong -- 11
uhPTS, ItemULongLong -- 12
}
#typev qveVideoUmdCb_cpp779 56 "%0[0x%10!p!] QVE:          DTS(%11!I64u!)  GREATER_THAN PTS(%12!I64u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
uhDTS, ItemULongLong -- 11
uhPTS, ItemULongLong -- 12
}
#typev qveVideoUmdCb_cpp742 55 "%0[0x%10!p!] QVE: CleanPoint = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp726 54 "%0[0x%10!p!] QVE: LTRFrameInfo = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
ui32Value, ItemLong -- 11
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp688 52 "%0[0x%10!p!] QVE: Failed - Output protection is enabled, but output resource may not be usable by SCM" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp680 51 "%0[0x%10!p!] QVE: Failed - Output protection and HDCP encryption are disabled, but output resource is secure" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp695 53 "%0[0x%10!p!] QVE: BitStreamFilledLength %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
pBitStream->nBitStreamFilledLen, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp671 50 "%0[0x%10!p!] QVE: Updating OPM status of output buffer to 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
opmStatus.ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp666 49 "%0[0x%10!p!] QVE: Warning - Output protection is disabled, but output resource is secure" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp656 48 "%0[0x%10!p!] QVE: Failed - Output resource is Secure, but not SCM accessible" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp639 47 "%0[0x%10!p!] QVE: Bitstream OPM Status %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
pBitStream->opmStatus.ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp625 46 "%0[0x%10!p!] QVE: HandleFrameCoded: Flushing." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp869 60 "%0[0x%10!p!] QVE: Nonzero length bitstream for RC drop " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleRCDrop
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp210 19 "%0[0x%10!p!] QVE: Invalid FrameType 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
pBitStream->nFrameType, ItemLong -- 11
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp206 59 "%0[0x%10!p!] QVE: Nonzero length bitstream for frame not coded " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp183 18 "%0[0x%10!p!] QVE: FrameType 0x%11!0x! Tag %12!I64u! DTS %13!I64u! PTS %14!I64u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Perf FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
pBitStream->nFrameType, ItemLong -- 11
pBitStream->ulInputTag, ItemULongLong -- 12
pBitStream->ulDTS, ItemULongLong -- 13
pBitStream->ulPTS, ItemULongLong -- 14
}
#typev qveVideoUmdCb_cpp175 17 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp133 16 "%0***** CLEAR SAMPLE IN INPUT BUFFER and RELEASE SAMPLE *****" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
}
#typev qveVideoUmdCb_cpp121 15 "%0***** CLEAR 2D TEXTURE IN INPUT BUFFER *****" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
}
#typev qveVideoUmdCb_cpp109 14 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp99 13 "%0[0x%10!p!] QVE: Invalid input buffer " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp259 12 "%0[0x%10!p!] QVE: pBitStream->bOutputReleased = %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessBitStreamCb
{
this, ItemPtr -- 10
pBitStream->bOutputReleased, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp259 11 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessBitStreamCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp239 20 "%0[0x%10!p!] QVE: Invalid bit stream pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessBitStreamCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp346 22 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp357 24 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp372 25 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: SetMpegSeqHdr failed hr 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp353 23 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp405 26 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp416 28 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp431 29 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: SetMpegSeqHdr failed hr 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp412 27 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
// PDB:  qcvidencmfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp462 30 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp473 32 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp487 33 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Queue MFTransformHaveOutput. hr = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp469 31 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp580 45 "%0[0x%10!p!] QVE: HandleDriverCb Unknown Callback Type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp575 44 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_ERROR hr 0x%11!0x! Reason: %12!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
pCbParams->CBParam.Error.hr, ItemLong -- 11
pCbParams->CBParam.Error.reason, ItemLong -- 12
}
#typev qveVideoUmdCb_cpp571 43 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_DESTROY_SESSION" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp567 42 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_STOP_DONE" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp563 63 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp563 62 "%0[0x%10!p!] QVE: Failed - invalid m_hEOSDone handle" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp563 61 "%0[0x%10!p!] QVE: Posting async work to process EOS" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp562 41 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_EOS_DONE" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp558 66 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp558 65 "%0[0x%10!p!] QVE: Failed - invalid m_hFlushDone handle" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp558 64 "%0[0x%10!p!] QVE: Posting async work to process flush" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp557 40 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_FLUSH_DONE" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp552 39 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp543 38 "%0[0x%10!p!] QVE: ProcessBitStreamCb failed hr = 0x%11!0x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp531 37 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_BITSTREAM" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp526 36 "%0[0x%10!p!] QVE: ProcessSeqHdrCb() failed, result = 0x%11!0x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp523 21 "%0[0x%10!p!] QVE: ProcessSeqHdrCb: Invalid Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp522 35 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_SEQHDR" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp512 34 "%0[0x%10!p!] QVE: Failed - invalid arg" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp818 58 "%0[0x%10!p!] QVE: Posting async work to process bitstream" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp784 57 "%0[0x%10!p!] QVE: Adjusted DTS(%11!I64u!)  EQUAL_TO     PTS(%12!I64u!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
uhDTS, ItemULongLong -- 11
uhPTS, ItemULongLong -- 12
}
#typev qveVideoUmdCb_cpp779 56 "%0[0x%10!p!] QVE:          DTS(%11!I64u!)  GREATER_THAN PTS(%12!I64u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
uhDTS, ItemULongLong -- 11
uhPTS, ItemULongLong -- 12
}
#typev qveVideoUmdCb_cpp742 55 "%0[0x%10!p!] QVE: CleanPoint = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp726 54 "%0[0x%10!p!] QVE: LTRFrameInfo = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
ui32Value, ItemLong -- 11
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp688 52 "%0[0x%10!p!] QVE: Failed - Output protection is enabled, but output resource may not be usable by SCM" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp680 51 "%0[0x%10!p!] QVE: Failed - Output protection and HDCP encryption are disabled, but output resource is secure" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp695 53 "%0[0x%10!p!] QVE: BitStreamFilledLength %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
pBitStream->nBitStreamFilledLen, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp671 50 "%0[0x%10!p!] QVE: Updating OPM status of output buffer to 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
opmStatus.ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp666 49 "%0[0x%10!p!] QVE: Warning - Output protection is disabled, but output resource is secure" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp656 48 "%0[0x%10!p!] QVE: Failed - Output resource is Secure, but not SCM accessible" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp639 47 "%0[0x%10!p!] QVE: Bitstream OPM Status %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
pBitStream->opmStatus.ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp625 46 "%0[0x%10!p!] QVE: HandleFrameCoded: Flushing." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp869 60 "%0[0x%10!p!] QVE: Nonzero length bitstream for RC drop " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleRCDrop
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp210 19 "%0[0x%10!p!] QVE: Invalid FrameType 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
pBitStream->nFrameType, ItemLong -- 11
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp206 59 "%0[0x%10!p!] QVE: Nonzero length bitstream for frame not coded " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp183 18 "%0[0x%10!p!] QVE: FrameType 0x%11!0x! Tag %12!I64u! DTS %13!I64u! PTS %14!I64u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Perf FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
pBitStream->nFrameType, ItemLong -- 11
pBitStream->ulInputTag, ItemULongLong -- 12
pBitStream->ulDTS, ItemULongLong -- 13
pBitStream->ulPTS, ItemULongLong -- 14
}
#typev qveVideoUmdCb_cpp175 17 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp133 16 "%0***** CLEAR SAMPLE IN INPUT BUFFER and RELEASE SAMPLE *****" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
}
#typev qveVideoUmdCb_cpp121 15 "%0***** CLEAR 2D TEXTURE IN INPUT BUFFER *****" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
}
#typev qveVideoUmdCb_cpp109 14 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp99 13 "%0[0x%10!p!] QVE: Invalid input buffer " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp259 12 "%0[0x%10!p!] QVE: pBitStream->bOutputReleased = %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessBitStreamCb
{
this, ItemPtr -- 10
pBitStream->bOutputReleased, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp259 11 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessBitStreamCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp239 20 "%0[0x%10!p!] QVE: Invalid bit stream pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessBitStreamCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp346 22 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp357 24 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp372 25 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: SetMpegSeqHdr failed hr 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp353 23 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp405 26 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp416 28 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp431 29 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: SetMpegSeqHdr failed hr 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp412 27 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
// PDB:  qcvidencmfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp462 30 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp473 32 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp487 33 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Queue MFTransformHaveOutput. hr = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp469 31 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp580 45 "%0[0x%10!p!] QVE: HandleDriverCb Unknown Callback Type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp575 44 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_ERROR hr 0x%11!0x! Reason: %12!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
pCbParams->CBParam.Error.hr, ItemLong -- 11
pCbParams->CBParam.Error.reason, ItemLong -- 12
}
#typev qveVideoUmdCb_cpp571 43 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_DESTROY_SESSION" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp567 42 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_STOP_DONE" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp563 63 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp563 62 "%0[0x%10!p!] QVE: Failed - invalid m_hEOSDone handle" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp563 61 "%0[0x%10!p!] QVE: Posting async work to process EOS" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp562 41 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_EOS_DONE" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp558 66 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp558 65 "%0[0x%10!p!] QVE: Failed - invalid m_hFlushDone handle" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp558 64 "%0[0x%10!p!] QVE: Posting async work to process flush" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp557 40 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_FLUSH_DONE" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp552 39 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp543 38 "%0[0x%10!p!] QVE: ProcessBitStreamCb failed hr = 0x%11!0x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp531 37 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_BITSTREAM" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp526 36 "%0[0x%10!p!] QVE: ProcessSeqHdrCb() failed, result = 0x%11!0x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp523 21 "%0[0x%10!p!] QVE: ProcessSeqHdrCb: Invalid Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp522 35 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_SEQHDR" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp512 34 "%0[0x%10!p!] QVE: Failed - invalid arg" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp818 58 "%0[0x%10!p!] QVE: Posting async work to process bitstream" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp688 52 "%0[0x%10!p!] QVE: Failed - Output protection is enabled, but output resource may not be usable by SCM" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp680 51 "%0[0x%10!p!] QVE: Failed - Output protection and HDCP encryption are disabled, but output resource is secure" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp784 57 "%0[0x%10!p!] QVE: Adjusted DTS(%11!I64u!)  EQUAL_TO     PTS(%12!I64u!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
uhDTS, ItemULongLong -- 11
uhPTS, ItemULongLong -- 12
}
#typev qveVideoUmdCb_cpp779 56 "%0[0x%10!p!] QVE:          DTS(%11!I64u!)  GREATER_THAN PTS(%12!I64u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
uhDTS, ItemULongLong -- 11
uhPTS, ItemULongLong -- 12
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp742 55 "%0[0x%10!p!] QVE: CleanPoint = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp726 54 "%0[0x%10!p!] QVE: LTRFrameInfo = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp695 53 "%0[0x%10!p!] QVE: BitStreamFilledLength %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
pBitStream->nBitStreamFilledLen, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp671 50 "%0[0x%10!p!] QVE: Updating OPM status of output buffer to 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
opmStatus.ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp666 49 "%0[0x%10!p!] QVE: Warning - Output protection is disabled, but output resource is secure" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp656 48 "%0[0x%10!p!] QVE: Failed - Output resource is Secure, but not SCM accessible" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp639 47 "%0[0x%10!p!] QVE: Bitstream OPM Status %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
pBitStream->opmStatus.ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp625 46 "%0[0x%10!p!] QVE: HandleFrameCoded: Flushing." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp210 19 "%0[0x%10!p!] QVE: Invalid FrameType 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
pBitStream->nFrameType, ItemLong -- 11
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp206 59 "%0[0x%10!p!] QVE: Nonzero length bitstream for frame not coded " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp202 60 "%0[0x%10!p!] QVE: Nonzero length bitstream for RC drop " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp183 18 "%0[0x%10!p!] QVE: FrameType 0x%11!0x! Tag %12!I64u! DTS %13!I64u! PTS %14!I64u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Perf FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
pBitStream->nFrameType, ItemLong -- 11
pBitStream->ulInputTag, ItemULongLong -- 12
pBitStream->ulDTS, ItemULongLong -- 13
pBitStream->ulPTS, ItemULongLong -- 14
}
#typev qveVideoUmdCb_cpp175 17 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp133 16 "%0***** CLEAR SAMPLE IN INPUT BUFFER and RELEASE SAMPLE *****" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
}
#typev qveVideoUmdCb_cpp121 15 "%0***** CLEAR 2D TEXTURE IN INPUT BUFFER *****" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
}
#typev qveVideoUmdCb_cpp109 14 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp99 13 "%0[0x%10!p!] QVE: Invalid input buffer " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp259 12 "%0[0x%10!p!] QVE: pBitStream->bOutputReleased = %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessBitStreamCb
{
this, ItemPtr -- 10
pBitStream->bOutputReleased, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp259 11 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessBitStreamCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp239 20 "%0[0x%10!p!] QVE: Invalid bit stream pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessBitStreamCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp346 22 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp372 25 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: SetMpegSeqHdr failed hr 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp357 24 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp353 23 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp405 26 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp431 29 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: SetMpegSeqHdr failed hr 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp416 28 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp412 27 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
// PDB:  qcvidencx86mfth264850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp462 30 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp487 33 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Queue MFTransformHaveOutput. hr = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp473 32 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp469 31 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp580 45 "%0[0x%10!p!] QVE: HandleDriverCb Unknown Callback Type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp575 44 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_ERROR hr 0x%11!0x! Reason: %12!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
pCbParams->CBParam.Error.hr, ItemLong -- 11
pCbParams->CBParam.Error.reason, ItemLong -- 12
}
#typev qveVideoUmdCb_cpp571 43 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_DESTROY_SESSION" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp567 42 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_STOP_DONE" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp563 63 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp563 62 "%0[0x%10!p!] QVE: Failed - invalid m_hEOSDone handle" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp563 61 "%0[0x%10!p!] QVE: Posting async work to process EOS" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp562 41 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_EOS_DONE" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp558 66 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp558 65 "%0[0x%10!p!] QVE: Failed - invalid m_hFlushDone handle" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp558 64 "%0[0x%10!p!] QVE: Posting async work to process flush" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp557 40 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_FLUSH_DONE" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp552 39 "%0[0x%10!p!] QVE: Unexpected driver interface type" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp543 38 "%0[0x%10!p!] QVE: ProcessBitStreamCb failed hr = 0x%11!0x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp531 37 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_BITSTREAM" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp526 36 "%0[0x%10!p!] QVE: ProcessSeqHdrCb() failed, result = 0x%11!0x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp523 21 "%0[0x%10!p!] QVE: ProcessSeqHdrCb: Invalid Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp522 35 "%0[0x%10!p!] QVE: QC_D3D_VIDENC_CB_TYPE_SEQHDR" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=High FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp512 34 "%0[0x%10!p!] QVE: Failed - invalid arg" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleDriverCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp818 58 "%0[0x%10!p!] QVE: Posting async work to process bitstream" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp688 52 "%0[0x%10!p!] QVE: Failed - Output protection is enabled, but output resource may not be usable by SCM" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp680 51 "%0[0x%10!p!] QVE: Failed - Output protection and HDCP encryption are disabled, but output resource is secure" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp784 57 "%0[0x%10!p!] QVE: Adjusted DTS(%11!I64u!)  EQUAL_TO     PTS(%12!I64u!)" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
uhDTS, ItemULongLong -- 11
uhPTS, ItemULongLong -- 12
}
#typev qveVideoUmdCb_cpp779 56 "%0[0x%10!p!] QVE:          DTS(%11!I64u!)  GREATER_THAN PTS(%12!I64u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
uhDTS, ItemULongLong -- 11
uhPTS, ItemULongLong -- 12
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp742 55 "%0[0x%10!p!] QVE: CleanPoint = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp726 54 "%0[0x%10!p!] QVE: LTRFrameInfo = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp695 53 "%0[0x%10!p!] QVE: BitStreamFilledLength %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
pBitStream->nBitStreamFilledLen, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp671 50 "%0[0x%10!p!] QVE: Updating OPM status of output buffer to 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Low FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
opmStatus.ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp666 49 "%0[0x%10!p!] QVE: Warning - Output protection is disabled, but output resource is secure" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp656 48 "%0[0x%10!p!] QVE: Failed - Output resource is Secure, but not SCM accessible" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp639 47 "%0[0x%10!p!] QVE: Bitstream OPM Status %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
pBitStream->opmStatus.ui32Value, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp625 46 "%0[0x%10!p!] QVE: HandleFrameCoded: Flushing." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::HandleFrameCoded
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp210 19 "%0[0x%10!p!] QVE: Invalid FrameType 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
pBitStream->nFrameType, ItemLong -- 11
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp206 59 "%0[0x%10!p!] QVE: Nonzero length bitstream for frame not coded " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp202 60 "%0[0x%10!p!] QVE: Nonzero length bitstream for RC drop " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp183 18 "%0[0x%10!p!] QVE: FrameType 0x%11!0x! Tag %12!I64u! DTS %13!I64u! PTS %14!I64u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Perf FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
pBitStream->nFrameType, ItemLong -- 11
pBitStream->ulInputTag, ItemULongLong -- 12
pBitStream->ulDTS, ItemULongLong -- 13
pBitStream->ulPTS, ItemULongLong -- 14
}
#typev qveVideoUmdCb_cpp175 17 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnBitStreamAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp133 16 "%0***** CLEAR SAMPLE IN INPUT BUFFER and RELEASE SAMPLE *****" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
}
#typev qveVideoUmdCb_cpp121 15 "%0***** CLEAR 2D TEXTURE IN INPUT BUFFER *****" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
}
#typev qveVideoUmdCb_cpp109 14 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp99 13 "%0[0x%10!p!] QVE: Invalid input buffer " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::OnIpSampleAvailableCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp259 12 "%0[0x%10!p!] QVE: pBitStream->bOutputReleased = %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessBitStreamCb
{
this, ItemPtr -- 10
pBitStream->bOutputReleased, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp259 11 "%0[0x%10!p!] QVE: Invalid Bufferpool " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessBitStreamCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp239 20 "%0[0x%10!p!] QVE: Invalid bit stream pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessBitStreamCb
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp346 22 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp372 25 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: SetMpegSeqHdr failed hr 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp357 24 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp353 23 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_H264: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_H264
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp405 26 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp431 29 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: SetMpegSeqHdr failed hr 0x%11!0X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp416 28 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp412 27 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_HEVC: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_HEVC
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
// PDB:  qcvidencx86mfthevc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev qveVideoUmdCb_cpp462 30 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Invalid Sequence header size" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp487 33 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Queue MFTransformHaveOutput. hr = 0x%11!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
hr, ItemLong -- 11
}
#typev qveVideoUmdCb_cpp473 32 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Error executing memcpy_s" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
}
#typev qveVideoUmdCb_cpp469 31 "%0[0x%10!p!] QVE: ProcessSeqHdrCb_MPEG4: Seq header size %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::ProcessSeqHdrCb_MPEG4
{
this, ItemPtr -- 10
pSeqHdr->nSize, ItemLong -- 11
}
