// PDB:  qcthermalmdm7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
f86e92fa-cd52-30ea-b16c-2085a9e7dd43 ThermalMDM // SRC=Qmi.c MJ= MN=
#typev Qmi_c1094 117 "%0[Qmi.c][%!FUNC!] Exit %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiAllocateClient
{
status, ItemNTSTATUS -- 10
}
#typev Qmi_c1085 116 "%0[Qmi.c][%!FUNC!] FAILURE: WdfWaitLockCreate returned with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiAllocateClient
{
status, ItemNTSTATUS -- 10
}
#typev Qmi_c1066 115 "%0[Qmi.c][%!FUNC!] FAILURE: WdfMemoryCreate returned error status = %10!s!,when we tried to allocate space for our QMI client info structure" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiAllocateClient
{
status, ItemNTSTATUS -- 10
}
#typev Qmi_c1050 114 "%0[Qmi.c][%!FUNC!] FAILURE: service object is null" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiAllocateClient
{
}
#typev Qmi_c1046 113 "%0[Qmi.c][%!FUNC!] Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiAllocateClient
{
}
#typev Qmi_c600 72 "%0[Qmi.c][%!FUNC!] Exit %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiClientRelease
{
status, ItemNTSTATUS -- 10
}
#typev Qmi_c591 71 "%0[Qmi.c][%!FUNC!][Mitigation][%10!p!][%11!s!]QMI DeInitialized and Mitigation Device Count %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiClientRelease
{
pMitigationDevContext, ItemPtr -- 10
pMitigationDevContext->QMIMitigationDeviceName, ItemString -- 11
MitigationDeviceCount, ItemLong -- 12
}
#typev Qmi_c579 70 "%0[Qmi.c][%!FUNC!][Mitigation][%10!p!][%11!s!]Processing DeInitializeQMI" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiClientRelease
{
pMitigationDevContext, ItemPtr -- 10
pMitigationDevContext->QMIMitigationDeviceName, ItemString -- 11
}
#typev Qmi_c572 69 "%0[Qmi.c][%!FUNC!] Failed to cancel the pending request. %10!s!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiClientRelease
{
status, ItemNTSTATUS -- 10
}
#typev Qmi_c562 68 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]blockacquired %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiClientRelease
{
pSensorDevContext, ItemPtr -- 10
pSensorDevContext->QMISensorDeviceName, ItemString -- 11
blockacquired, ItemLong -- 12
}
#typev Qmi_c555 67 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]QMI DeInitialized and Sensor Device Count %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiClientRelease
{
pSensorDevContext, ItemPtr -- 10
pSensorDevContext->QMISensorDeviceName, ItemString -- 11
SensorDeviceCount, ItemLong -- 12
}
#typev Qmi_c542 66 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]blockacquired %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiClientRelease
{
pSensorDevContext, ItemPtr -- 10
pSensorDevContext->QMISensorDeviceName, ItemString -- 11
blockacquired, ItemLong -- 12
}
#typev Qmi_c536 65 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]Processing DeInitializeQMI" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiClientRelease
{
pSensorDevContext, ItemPtr -- 10
pSensorDevContext->QMISensorDeviceName, ItemString -- 11
}
#typev Qmi_c532 64 "%0[Qmi.c][%!FUNC!] Released ThermalMdm Lock." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiClientRelease
{
}
#typev Qmi_c504 63 "%0[Qmi.c][%!FUNC!]bIsqcciinitialized %10!d! bQmiPathFailedToInitialize %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiClientRelease
{
pDriver->pDriverQmiInfo->bIsqcciinitialized, ItemLong -- 10
pDriver->bQmiPathFailedToInitialize, ItemLong -- 11
}
#typev Qmi_c498 62 "%0[Qmi.c][%!FUNC!] Acquired ThermalMdm Lock." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiClientRelease
{
}
#typev Qmi_c482 61 "%0[Qmi.c][%!FUNC!] Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiClientRelease
{
}
#typev Qmi_c642 74 "%0[Qmi.c][%!FUNC!] Exit %10!s!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiDeInit
{
status, ItemNTSTATUS -- 10
}
#typev Qmi_c616 73 "%0[Qmi.c][%!FUNC!] Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiDeInit
{
}
#typev Qmi_c781 86 "%0[Qmi.c][%!FUNC!] Exit %10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiErrorCallback
{
status, ItemNTSTATUS -- 10
}
#typev Qmi_c774 85 "%0[Qmi.c][%!FUNC!] FAILURE: WdfWorkItemCreate failed, status: %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiErrorCallback
{
status, ItemNTSTATUS -- 10
}
#typev Qmi_c763 84 "%0[Qmi.c][%!FUNC!] Received Error CB Indication From Modem pCommonDeviceContext %10!p! error code %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiErrorCallback
{
pCommonDeviceContext, ItemPtr -- 10
error, ItemLong -- 11
}
#typev Qmi_c760 83 "%0[Qmi.c][%!FUNC!] pCommonDeviceContext %10!p!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiErrorCallback
{
pCommonDeviceContext, ItemPtr -- 10
}
#typev Qmi_c757 82 "%0[Qmi.c][%!FUNC!] Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiErrorCallback
{
}
#typev Qmi_c735 81 "%0[Qmi.c][%!FUNC!] Exit %10!s!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiErrorCallbackWork
{
status, ItemNTSTATUS -- 10
}
#typev Qmi_c703 78 "%0[Qmi.c][%!FUNC!][Mitigation][%10!p!][%11!s!] bisMitigationQMIInitialized %12!d! bQmiPathFailedToInitialize %13!d! devicetype %14!d! bReceivedIoSuspend %15!d!Nothing to do in SSR/Unload." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiErrorCallbackWork
{
pMitigationDevContext, ItemPtr -- 10
pMitigationDevContext->QMIMitigationDeviceName, ItemString -- 11
pMitigationDevContext->bisMitigationQMIInitialized, ItemLong -- 12
pDriver->bQmiPathFailedToInitialize, ItemLong -- 13
pCommonDeviceContext->DeviceType, ItemLong -- 14
pDriver->bReceivedIoSuspend, ItemLong -- 15
}
#typev Qmi_c729 80 "%0[Qmi.c][%!FUNC!] QmiInit %10!s!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiErrorCallbackWork
{
status, ItemNTSTATUS -- 10
}
#typev Qmi_c718 79 "%0[Qmi.c][%!FUNC!] QmiDeInit %10!s!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiErrorCallbackWork
{
status, ItemNTSTATUS -- 10
}
#typev Qmi_c680 77 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!] bisSensorQMIInitialized %12!d! bQmiPathFailedToInitialize %13!d! DeviceType %14!d! bReceivedIoSuspend %15!d!Nothing to do in SSR/Unload." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiErrorCallbackWork
{
pSensorDevContext, ItemPtr -- 10
pSensorDevContext->QMISensorDeviceName, ItemString -- 11
pSensorDevContext->bisSensorQMIInitialized, ItemLong -- 12
pDriver->bQmiPathFailedToInitialize, ItemLong -- 13
pCommonDeviceContext->DeviceType, ItemLong -- 14
pDriver->bReceivedIoSuspend, ItemLong -- 15
}
#typev Qmi_c665 76 "%0[Qmi.c][%!FUNC!] pCommonDeviceContext %10!p! DeviceType %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiErrorCallbackWork
{
pCommonDeviceContext, ItemPtr -- 10
pCommonDeviceContext->DeviceType, ItemLong -- 11
}
#typev Qmi_c659 75 "%0[Qmi.c][%!FUNC!] Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiErrorCallbackWork
{
}
#typev Qmi_c329 49 "%0[Qmi.c][%!FUNC!] Exit bmatchfound %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiExtractSensorDev
{
bmatchfound, ItemLong -- 10
}
#typev Qmi_c317 47 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]Match found for the device for which indication was received !!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiExtractSensorDev
{
pSensorDevContext, ItemPtr -- 10
pSensorDevContext->QMISensorDeviceName, ItemString -- 11
}
#typev Qmi_c334 50 "%0[Qmi.c][%!FUNC!] Exit No Match Found!!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiExtractSensorDev
{
}
#typev Qmi_c324 48 "%0[Qmi.c][%!FUNC!] pTempHeadList %10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiExtractSensorDev
{
pTempHeadList, ItemPtr -- 10
}
#typev Qmi_c311 46 "%0[Qmi.c][%!FUNC!] Going to match with device [Sensor][%10!p!][%11!s!]" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiExtractSensorDev
{
pSensorDevContext, ItemPtr -- 10
pSensorDevContext->QMISensorDeviceName, ItemString -- 11
}
#typev Qmi_c307 45 "%0[Qmi.c][%!FUNC!] Now pTempHeadList is %10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiExtractSensorDev
{
pTempHeadList, ItemPtr -- 10
}
#typev Qmi_c305 44 "%0[Qmi.c][%!FUNC!] pSensorDevContext is NULL.Move to next member in the list." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiExtractSensorDev
{
}
#typev Qmi_c292 43 "%0[Qmi.c][%!FUNC!] pTempHeadList %10!p! HeadlistEntry %11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiExtractSensorDev
{
pTempHeadList, ItemPtr -- 10
&pDriverContext->devicelist.HeadListEntry, ItemPtr -- 11
}
#typev Qmi_c285 42 "%0[Qmi.c][%!FUNC!] No Entry In the List. Fatal !!!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiExtractSensorDev
{
}
#typev Qmi_c281 41 "%0[Qmi.c][%!FUNC!] Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiExtractSensorDev
{
}
#typev Qmi_c463 60 "%0[Qmi.c][%!FUNC!] Exit %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiIndicationCallback
{
status, ItemNTSTATUS -- 10
}
#typev Qmi_c458 59 "%0[Qmi.c][%!FUNC!][Mitigation]Mitigation Device.Do Nothing." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiIndicationCallback
{
}
#typev Qmi_c447 58 "%0[Qmi.c][%!FUNC!][Sensor] No Match Found !!! This is a problem" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiIndicationCallback
{
}
#typev Qmi_c439 57 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]Failed to send response for temperature read. %12!s!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiIndicationCallback
{
pSensorExtractConcernedDevContext, ItemPtr -- 10
pSensorExtractConcernedDevContext->QMISensorDeviceName, ItemString -- 11
status, ItemNTSTATUS -- 12
}
#typev Qmi_c431 56 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]TS temperature report indication received as %12!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiIndicationCallback
{
pSensorExtractConcernedDevContext, ItemPtr -- 10
pSensorExtractConcernedDevContext->QMISensorDeviceName, ItemString -- 11
sensor_report_temperature_ind.temp, ItemDouble -- 12
}
#typev Qmi_c413 55 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]TS temperature report indication has an invalid temeparature field." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiIndicationCallback
{
pSensorDevContext, ItemPtr -- 10
pSensorDevContext->QMISensorDeviceName, ItemString -- 11
}
#typev Qmi_c402 54 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]Unable to decode the TS temperature report indication message.qmiStatus = %12!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiIndicationCallback
{
pSensorDevContext, ItemPtr -- 10
pSensorDevContext->QMISensorDeviceName, ItemString -- 11
qmiStatus, ItemLong -- 12
}
#typev Qmi_c377 53 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]FAILURE: Failure to get our QMI client info" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiIndicationCallback
{
pSensorDevContext, ItemPtr -- 10
pSensorDevContext->QMISensorDeviceName, ItemString -- 11
}
#typev Qmi_c366 52 "%0[Qmi.c][%!FUNC!] [Sensor][%10!p!][%11!s!] Received Indication" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiIndicationCallback
{
pSensorDevContext, ItemPtr -- 10
pSensorDevContext->QMISensorDeviceName, ItemString -- 11
}
#typev Qmi_c359 51 "%0[Qmi.c][%!FUNC!] Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiIndicationCallback
{
}
#typev Qmi_c142 26 "%0[Qmi.c][%!FUNC!] Exit" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiInit
{
}
#typev Qmi_c138 25 "%0[Qmi.c][%!FUNC!] pTempHeadList %10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiInit
{
pTempHeadList, ItemPtr -- 10
}
#typev Qmi_c130 24 "%0[Qmi.c][%!FUNC!] pTempHeadList %10!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiInit
{
pTempHeadList, ItemPtr -- 10
}
#typev Qmi_c128 23 "%0[Qmi.c][%!FUNC!] pMitigationDevContext is NULL.Move to next member in the list." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiInit
{
}
#typev Qmi_c117 22 "%0[Qmi.c][%!FUNC!] pTempHeadList %10!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiInit
{
pTempHeadList, ItemPtr -- 10
}
#typev Qmi_c115 21 "%0[Qmi.c][%!FUNC!] pSensorDevContext is NULL.Move to next member in the list." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiInit
{
}
#typev Qmi_c101 20 "%0[Qmi.c][%!FUNC!] pTempHeadList %10!p! HeadlistEntry %11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiInit
{
pTempHeadList, ItemPtr -- 10
&pDriverContext->devicelist.HeadListEntry, ItemPtr -- 11
}
#typev Qmi_c95 19 "%0[Qmi.c][%!FUNC!] No Entry In the List. Fatal !!!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiInit
{
}
#typev Qmi_c91 18 "%0[Qmi.c][%!FUNC!] Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiInit
{
}
#typev Qmi_c1273 136 "%0[Qmi.c][%!FUNC!] Exit %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiInitialize
{
status, ItemNTSTATUS -- 10
}
#typev Qmi_c1239 132 "%0[Qmi.c][%!FUNC!] Device %10!d! Already Initialized." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiInitialize
{
DeviceType, ItemLong -- 10
}
#typev Qmi_c1231 131 "%0[Qmi.c][%!FUNC!] bQmiPathFailedToInitialize is TRUE.Qmi Path Failed to Initialize.Will bail out." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiInitialize
{
}
#typev Qmi_c1220 130 "%0[Qmi.c][%!FUNC!][Mitigation][%10!p!][%11!s!]FAILURE: QmiServiceInit failed with status 0x%12!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiInitialize
{
pMitigationDevCtx, ItemPtr -- 10
pMitigationDevCtx->QMIMitigationDeviceName, ItemString -- 11
status, ItemLong -- 12
}
#typev Qmi_c1212 129 "%0[Qmi.c][%!FUNC!][Mitigation][%10!p!][%11!s!]Acquired ThermalMdm Lock %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiInitialize
{
pMitigationDevCtx, ItemPtr -- 10
pMitigationDevCtx->QMIMitigationDeviceName, ItemString -- 11
bLockAcquired, ItemLong -- 12
}
#typev Qmi_c1207 128 "%0[Qmi.c][%!FUNC!][Mitigation][%10!p!][%11!s!]Trigger QmiServiceInit to allocate handle." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiInitialize
{
pMitigationDevCtx, ItemPtr -- 10
pMitigationDevCtx->QMIMitigationDeviceName, ItemString -- 11
}
#typev Qmi_c1269 135 "%0[Qmi.c][%!FUNC!]Released ThermalMDM Lock %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiInitialize
{
bLockAcquired, ItemLong -- 10
}
#typev Qmi_c1257 134 "%0[Qmi.c][%!FUNC!][Mitigation][%10!p!][%11!s!]QMI Init Complete for Mitigation device with count %12!d! status %13!s!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiInitialize
{
pMitigationDevCtx, ItemPtr -- 10
pMitigationDevCtx->QMIMitigationDeviceName, ItemString -- 11
pDriver->pDriverQmiInfo->MitigationDeviceCount, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev Qmi_c1198 127 "%0[Qmi.c][%!FUNC!][Mitigation][%10!p!][%11!s!]FAILURE: failed to create Mitigation client" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiInitialize
{
pMitigationDevCtx, ItemPtr -- 10
pMitigationDevCtx->QMIMitigationDeviceName, ItemString -- 11
}
#typev Qmi_c1184 126 "%0[Qmi.c][%!FUNC!][Mitigation][%10!p!][%11!s!]Going to initialize QMI for mitigation device" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiInitialize
{
pMitigationDevCtx, ItemPtr -- 10
pMitigationDevCtx->QMIMitigationDeviceName, ItemString -- 11
}
#typev Qmi_c1176 125 "%0[Qmi.c][%!FUNC!] bQmiPathFailedToInitialize is TRUE.Qmi Path Failed to Initialize.Will bail out." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiInitialize
{
}
#typev Qmi_c1165 124 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]FAILURE: QmiServiceInit failed with status 0x%12!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiInitialize
{
pSensorDevCtx, ItemPtr -- 10
pSensorDevCtx->QMISensorDeviceName, ItemString -- 11
status, ItemLong -- 12
}
#typev Qmi_c1157 123 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]Acquire ThermalMDM Lock %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiInitialize
{
pSensorDevCtx, ItemPtr -- 10
pSensorDevCtx->QMISensorDeviceName, ItemString -- 11
bLockAcquired, ItemLong -- 12
}
#typev Qmi_c1152 122 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]Trigger QmiServiceInit to allocate handle." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiInitialize
{
pSensorDevCtx, ItemPtr -- 10
pSensorDevCtx->QMISensorDeviceName, ItemString -- 11
}
#typev Qmi_c1247 133 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]QMI Init Complete for sensor device with count %12!d! status %13!s!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiInitialize
{
pSensorDevCtx, ItemPtr -- 10
pSensorDevCtx->QMISensorDeviceName, ItemString -- 11
pDriver->pDriverQmiInfo->SensorDeviceCount, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev Qmi_c1143 121 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]QmiAllocateClient: failed to allocate for Sensor client" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiInitialize
{
pSensorDevCtx, ItemPtr -- 10
pSensorDevCtx->QMISensorDeviceName, ItemString -- 11
}
#typev Qmi_c1130 120 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]Going to initialize QMI for sensor device" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiInitialize
{
pSensorDevCtx, ItemPtr -- 10
pSensorDevCtx->QMISensorDeviceName, ItemString -- 11
}
#typev Qmi_c1115 119 "%0[Qmi.c][%!FUNC!] pCommonDevCtx %10!p! DeviceType %11!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiInitialize
{
pCommonDevCtx, ItemPtr -- 10
DeviceType, ItemLong -- 11
}
#typev Qmi_c1112 118 "%0[Qmi.c][%!FUNC!] Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiInitialize
{
}
#typev Qmi_c74 17 "%0[Qmi.c][%!FUNC!] Exit" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiQCCIDeInit
{
}
#typev Qmi_c71 16 "%0[Qmi.c][%!FUNC!] QCCI DeIntialized Properly" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiQCCIDeInit
{
}
#typev Qmi_c60 15 "%0[Qmi.c][%!FUNC!] pDriver is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiQCCIDeInit
{
}
#typev Qmi_c56 14 "%0[Qmi.c][%!FUNC!] Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiQCCIDeInit
{
}
#typev Qmi_c32 11 "%0[Qmi.c][%!FUNC!] pDriver or Device is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiQCCIInit
{
}
#typev Qmi_c46 13 "%0[Qmi.c][%!FUNC!] Exit" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiQCCIInit
{
}
#typev Qmi_c43 12 "%0[Qmi.c][%!FUNC!] QCCI Intialized Properly" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiQCCIInit
{
}
#typev Qmi_c28 10 "%0[Qmi.c][%!FUNC!] Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiQCCIInit
{
}
#typev Qmi_c264 40 "%0[Qmi.c][%!FUNC!] Exit" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiResetDeviceContext
{
}
#typev Qmi_c261 39 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]blockacquired. %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiResetDeviceContext
{
pSensorDevContext, ItemPtr -- 10
pSensorDevContext->QMISensorDeviceName, ItemString -- 11
blockacquired, ItemLong -- 12
}
#typev Qmi_c253 38 "%0[Qmi.c][%!FUNC!] pTempHeadList %10!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiResetDeviceContext
{
pTempHeadList, ItemPtr -- 10
}
#typev Qmi_c245 37 "%0[Qmi.c][%!FUNC!][Mitigation][%10!p!][%11!s!]QMI DeInitialized and Mitigation Device Count %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiResetDeviceContext
{
pMitigationDevContext, ItemPtr -- 10
pMitigationDevContext->QMIMitigationDeviceName, ItemString -- 11
MitigationDeviceCount, ItemLong -- 12
}
#typev Qmi_c232 36 "%0[Qmi.c][%!FUNC!] pMitigationDevContext is NULL.Move to next member in the list." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiResetDeviceContext
{
}
#typev Qmi_c223 35 "%0[Qmi.c][%!FUNC!] Failed to cancel the pending request. %10!s!." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiResetDeviceContext
{
status, ItemNTSTATUS -- 10
}
#typev Qmi_c213 34 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]blockacquired %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiResetDeviceContext
{
pSensorDevContext, ItemPtr -- 10
pSensorDevContext->QMISensorDeviceName, ItemString -- 11
blockacquired, ItemLong -- 12
}
#typev Qmi_c208 33 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]QMI DeInitialized and Sensor Device Count %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiResetDeviceContext
{
pSensorDevContext, ItemPtr -- 10
pSensorDevContext->QMISensorDeviceName, ItemString -- 11
pDriver->pDriverQmiInfo->SensorDeviceCount, ItemLong -- 12
}
#typev Qmi_c197 32 "%0[Qmi.c][%!FUNC!][Sensor][%10!p!][%11!s!]blockacquired %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiResetDeviceContext
{
pSensorDevContext, ItemPtr -- 10
pSensorDevContext->QMISensorDeviceName, ItemString -- 11
blockacquired, ItemLong -- 12
}
#typev Qmi_c189 31 "%0[Qmi.c][%!FUNC!] pTempHeadList %10!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiResetDeviceContext
{
pTempHeadList, ItemPtr -- 10
}
#typev Qmi_c187 30 "%0[Qmi.c][%!FUNC!] pSensorDevContext is NULL.Move to next member in the list." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiResetDeviceContext
{
}
#typev Qmi_c174 29 "%0[Qmi.c][%!FUNC!] pTempHeadList %10!p! HeadlistEntry %11!p!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiResetDeviceContext
{
pTempHeadList, ItemPtr -- 10
&pDriverContext->devicelist.HeadListEntry, ItemPtr -- 11
}
#typev Qmi_c168 28 "%0[Qmi.c][%!FUNC!] No Entry In the List. Fatal !!!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiResetDeviceContext
{
}
#typev Qmi_c164 27 "%0[Qmi.c][%!FUNC!] Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiResetDeviceContext
{
}
#typev Qmi_c1024 112 "%0[Qmi.c][%!FUNC!] Exit %10!s!." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiServiceInit
{
status, ItemNTSTATUS -- 10
}
#typev Qmi_c1019 111 "%0[Qmi.c][%!FUNC!]Setting bQmiPathFailedToInitialize to 1status %10!s! 0x%11!Ix!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiServiceInit
{
status, ItemNTSTATUS -- 10
qmiRet, ItemPtr -- 11
}
#typev Qmi_c917 101 "%0[Qmi.c][%!FUNC!] FAILURE: invalid parameter." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiServiceInit
{
}
#typev Qmi_c999 110 "%0[Qmi.c][%!FUNC!] Mitigation Client Handle %10!p! MitigationDeviceCount %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiServiceInit
{
pDriver->pDriverQmiInfo->MitigationQmiClientHandle, ItemPtr -- 10
MitigationDeviceCount, ItemLong -- 11
}
#typev Qmi_c990 109 "%0[Qmi.c][%!FUNC!] Sensor Client Handle %10!p! SensorDeviceCount %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiServiceInit
{
pDriver->pDriverQmiInfo->SensorQmiClientHandle, ItemPtr -- 10
SensorDeviceCount, ItemLong -- 11
}
#typev Qmi_c980 108 "%0[Qmi.c][%!FUNC!] FAILURE: qmi_client_register_error_cb unsuccessful, status 0x%10!Ix!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiServiceInit
{
qmiRet, ItemPtr -- 10
}
#typev Qmi_c969 107 "%0[Qmi.c][%!FUNC!] FAILURE: qmi_client_init unsuccessful, status %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiServiceInit
{
qmiRet, ItemLong -- 10
}
#typev Qmi_c958 106 "%0[Qmi.c][%!FUNC!] Triggering QMI Client Init." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiServiceInit
{
}
#typev Qmi_c954 105 "%0[Qmi.c][%!FUNC!] QmiWaitForServiceThenGetInfo() returned Success." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiServiceInit
{
}
#typev Qmi_c948 104 "%0[Qmi.c][%!FUNC!] Error getting info for QMI TS/TMD service" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiServiceInit
{
}
#typev Qmi_c936 103 "%0[Qmi.c][%!FUNC!][Mitigation]Mitigation Client Init already done. Copy Handle for client num %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiServiceInit
{
MitigationDeviceCount, ItemLong -- 10
}
#typev Qmi_c928 102 "%0[Qmi.c][%!FUNC!][Sensor]Sensor Client Init already done. Copy Handle for client num %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiServiceInit
{
SensorDeviceCount, ItemLong -- 10
}
#typev Qmi_c913 100 "%0[Qmi.c][%!FUNC!] Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiServiceInit
{
}
#typev Qmi_c893 99 "%0[Qmi.c][%!FUNC!] Exit success 0x%10!Ix!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiWaitForServiceThenGetInfo
{
success, ItemPtr -- 10
}
#typev Qmi_c888 98 "%0[Qmi.c][%!FUNC!] Releasing notifier_handle." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiWaitForServiceThenGetInfo
{
}
#typev Qmi_c870 96 "%0[Qmi.c][%!FUNC!] Got service instance success for devicetype %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiWaitForServiceThenGetInfo
{
DeviceType, ItemLong -- 10
}
#typev Qmi_c879 97 "%0[Qmi.c][%!FUNC!]Received bReceivedIoSuspend %10!d!.Bailing Out" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiWaitForServiceThenGetInfo
{
pDriver->bReceivedIoSuspend, ItemLong -- 10
}
#typev Qmi_c863 95 "%0[Qmi.c][%!FUNC!] Error %10!d! while trying to get service info for devicetype %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiWaitForServiceThenGetInfo
{
err, ItemLong -- 10
DeviceType, ItemLong -- 11
}
#typev Qmi_c856 94 "%0[Qmi.c][%!FUNC!]QMI_CCI_OS_SIGNAL_WAIT returned." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiWaitForServiceThenGetInfo
{
}
#typev Qmi_c849 93 "%0[Qmi.c][%!FUNC!]Timeout waiting for modem service for devicetype %10!d!.retry count %11!d!.Releasing current notifier_handle and retry." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiWaitForServiceThenGetInfo
{
DeviceType, ItemLong -- 10
retry++, ItemLong -- 11
}
#typev Qmi_c838 92 "%0[Qmi.c][%!FUNC!] Stop retrying to acquire the service handleas the device is in shutdown path" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiWaitForServiceThenGetInfo
{
}
#typev Qmi_c832 91 "%0[Qmi.c][%!FUNC!] Error %10!d! while trying to initialize clientnotifier for devicetype %11!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QMI FUNC=QmiWaitForServiceThenGetInfo
{
err, ItemLong -- 10
DeviceType, ItemLong -- 11
}
#typev Qmi_c810 89 "%0[Qmi.c][%!FUNC!] service_object is for mitigation." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiWaitForServiceThenGetInfo
{
}
#typev Qmi_c805 88 "%0[Qmi.c][%!FUNC!] service_object is for sensor." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QMI FUNC=QmiWaitForServiceThenGetInfo
{
}
#typev Qmi_c801 87 "%0[Qmi.c][%!FUNC!] Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_QMI FUNC=QmiWaitForServiceThenGetInfo
{
}
