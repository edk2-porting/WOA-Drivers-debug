// PDB:  qcadc850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
d6261e52-2562-39ef-368f-857afea3e0dc kmdf // SRC=VAdcBsp.c MJ= MN=
#typev VAdcBsp_c213 17 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetChannels
{
}
#typev VAdcBsp_c248 19 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - zero length channel name" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetChannels
{
}
#typev VAdcBsp_c261 20 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - could not allocate memory for channel name %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetChannels
{
status, ItemNTSTATUS -- 10
}
#typev VAdcBsp_c272 21 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - could not copy string name %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetChannels
{
status, ItemNTSTATUS -- 10
}
#typev VAdcBsp_c232 18 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - could not allocate memory %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetChannels
{
status, ItemNTSTATUS -- 10
}
#typev VAdcBsp_c205 16 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetChannels
{
}
#typev VAdcBsp_c199 15 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - could not get ACPI data %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetChannels
{
status, ItemNTSTATUS -- 10
}
#typev VAdcBsp_c190 14 "%0VAdcBsp.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=VAdc_AcpiGetChannels
{
}
#typev VAdcBsp_c111 13 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetGenProps
{
}
#typev VAdcBsp_c103 12 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetGenProps
{
}
#typev VAdcBsp_c97 11 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - could not get ACPI data %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetGenProps
{
status, ItemNTSTATUS -- 10
}
#typev VAdcBsp_c88 10 "%0VAdcBsp.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=VAdc_AcpiGetGenProps
{
}
#typev VAdcBsp_c536 30 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetGpios
{
}
#typev VAdcBsp_c575 32 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - zero length for GPIO channels" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetGpios
{
}
#typev VAdcBsp_c589 33 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - could not allocate memory for GPIO channels %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetGpios
{
status, ItemNTSTATUS -- 10
}
#typev VAdcBsp_c554 31 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - could not allocate memory %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetGpios
{
status, ItemNTSTATUS -- 10
}
#typev VAdcBsp_c528 29 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetGpios
{
}
#typev VAdcBsp_c522 28 "%0VAdcBsp.c::%!FUNC! WARNING: VAdc - no GPIO channels found %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetGpios
{
status, ItemNTSTATUS -- 10
}
#typev VAdcBsp_c513 27 "%0VAdcBsp.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=VAdc_AcpiGetGpios
{
}
#typev VAdcBsp_c396 23 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - could not get ACPI data %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetLookupTables
{
status, ItemNTSTATUS -- 10
}
#typev VAdcBsp_c402 24 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetLookupTables
{
}
#typev VAdcBsp_c410 25 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - invalid ACPI data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetLookupTables
{
}
#typev VAdcBsp_c428 26 "%0VAdcBsp.c::%!FUNC! ERROR: VAdc - could not allocate memory %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Log FUNC=VAdc_AcpiGetLookupTables
{
status, ItemNTSTATUS -- 10
}
#typev VAdcBsp_c370 22 "%0VAdcBsp.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=VAdc_AcpiGetLookupTables
{
}
#typev VAdcDevice_c591 34 "%0VAdcBsp.c::%!FUNC!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=EntryExit FUNC=VAdc_DeviceInit
{
}
