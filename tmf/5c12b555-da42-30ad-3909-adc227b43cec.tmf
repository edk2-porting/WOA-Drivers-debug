// PDB:  Qcfgbcl7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:17:128 (UTC) [tracepdb]
5c12b555-da42-30ad-3909-adc227b43cec fgbcl // SRC=fgbclCore.c MJ= MN=
#typev fgbclCore_c369 19 "%0FgBclCore_GetBCLCurrent::ERROR::Error Code = %10!X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FGBCLWPP_SelfHost FUNC=FgBclCore_GetBCLCurrent
{
status, ItemLong -- 10
}
#typev fgbclCore_c363 18 "%0FgBclCore_GetBCLCurrent::Values are:IMax = %10!d!mA,IMaxShutDown =%11!d!mA,IPresent =%12!d!mA,BCL_capability =%13!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_GetBCLCurrent
{
pBCLOutputData->IMax, ItemLong -- 10
pBCLOutputData->IMaxShutDown, ItemLong -- 11
pBCLOutputData->IPresent, ItemLong -- 12
pBCLOutputData->BCL_capability, ItemLong -- 13
}
#typev fgbclCore_c494 26 "%0FgBclCore_Get_BCL_Status::fgbclIRQStatus = %10!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_GetBCLStatus
{
fgbclIRQStatus, ItemLong -- 10
}
// PDB:  Qcfgbcl7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:17:128 (UTC) [tracepdb]
#typev fgbclCore_c487 25 "%0FgBclCore_Get_BCL_Status:: PM2_COMP_STATUS = %10!X!, PM2_COMP_STATUS_BA = %11!X!, PM2_COMP_STATUS_ALARM = %12!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_GetBCLStatus
{
monitorFgBCLStatus.fg_bcl_monitor_sts, ItemLong -- 10
monitorFgBCLStatus.fg_bcl_lmh_from_bob, ItemLong -- 11
monitorFgBCLStatus.fg_bcl_lmh_from_flash, ItemLong -- 12
}
// PDB:  Qcfgbcl7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:17:128 (UTC) [tracepdb]
#typev fgbclCore_c476 24 "%0FgBclCore_Get_BCL_Status::vcomp IRQ status = %10!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_GetBCLStatus
{
vcompIRQStatus.vcomp_irq_mask, ItemLong -- 10
}
// PDB:  Qcfgbcl7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:17:128 (UTC) [tracepdb]
#typev fgbclCore_c463 23 "%0In FgBclCore_Get_BCL_Status" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_GetBCLStatus
{
}
#typev fgbclCore_c179 13 "%0FgBclCore_InitData::ERROR::creating callback failed status = 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FGBCLWPP_SelfHost FUNC=FgBclCore_InitData
{
status, ItemLong -- 10
}
#typev fgbclCore_c603 30 "%0FgBclCore_SendBatteryLevelNotification::sent BATT_PERCENT_NORMAL_NOTIFICATION" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_SendBatteryLevelNotification
{
}
#typev fgbclCore_c593 29 "%0FgBclCore_SendBatteryLevelNotification::sent BATT_PERCENT_LOW_NOTIFICATION" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_SendBatteryLevelNotification
{
}
#typev fgbclCore_c583 28 "%0battery percent notification disabled for this platform" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_SendBatteryLevelNotification
{
}
#typev fgbclCore_c576 27 "%0In FgBclCore_SendBatteryLevelNotification" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_SendBatteryLevelNotification
{
}
#typev fgbclCore_c332 17 "%0FgBclCore_SetBCLThreshold::status = %10!X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_SetBCLThreshold
{
status, ItemLong -- 10
}
#typev fgbclCore_c328 16 "%0FgBclCore_SetBCLThreshold::ibatt_high_thr = %10!d! mA, ibatt_too_high_thr = %11!d! mA" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_SetBCLThreshold
{
ibatIRQThreshold.ibatt_high_thr, ItemLong -- 10
ibatIRQThreshold.ibatt_too_high_thr, ItemLong -- 11
}
#typev fgbclCore_c150 12 "%0FgBclCore_Thread_Init::ERROR::Failed to create Thread, Error Code =%10!X!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=FGBCLWPP_SelfHost FUNC=FgBclCore_Thread_Init
{
status, ItemLong -- 10
}
#typev fgbclCore_c135 11 "%0FgBclCore_Thread_Init::Thread created successfully" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_SelfHost FUNC=FgBclCore_Thread_Init
{
}
#typev fgbclCore_c121 10 "%0FgBclCore_Thread_Init::++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_SelfHost FUNC=FgBclCore_Thread_Init
{
}
#typev fgbclCore_c450 22 "%0FgBclCore_UpdateBCLState::send BCL notification BCLState = %10!d!, notification reason = %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_UpdateBCLState
{
newBclState, ItemLong -- 10
newNotificationReason, ItemLong -- 11
}
#typev fgbclCore_c439 21 "%0FgBclCore_UpdateBCLState::after Vcomp newBclState = %10!d!, newNotificationReason = %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_UpdateBCLState
{
newBclState, ItemLong -- 10
newNotificationReason, ItemLong -- 11
}
#typev fgbclCore_c417 20 "%0FgBclCore_UpdateBCLState entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBclCore_UpdateBCLState
{
}
#typev fgbclCore_c647 32 "%0FGBCL::Warning::Entered EXIT event, driver unloading" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=FGBCLWPP_SelfHost FUNC=FgBcl_Main_Thread
{
}
#typev fgbclCore_c669 33 "%0FgBcl_Main_Thread::EventID = %10!d!, processed status = %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBcl_Main_Thread
{
eventID, ItemLong -- 10
status, ItemLong -- 11
}
#typev fgbclCore_c632 15 "%0FgBclCore_Init::status = 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_SelfHost FUNC=FgBcl_Main_Thread
{
status, ItemLong -- 10
}
#typev fgbclCore_c632 14 "%0FgBclCore_Init entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_SelfHost FUNC=FgBcl_Main_Thread
{
}
#typev fgbclCore_c625 31 "%0FgBcl_Main_Thread::++" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBcl_Main_Thread
{
}
#typev fgbclCore_c712 35 "%0FgBcl_SignalThread::Ignore the event as BCLEventInit is FALSE" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBcl_SignalThread
{
}
#typev fgbclCore_c686 34 "%0FgBcl_SignalThread::Event signalled is %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=FGBCLWPP_Core FUNC=FgBcl_SignalThread
{
EventNum, ItemLong -- 10
}
