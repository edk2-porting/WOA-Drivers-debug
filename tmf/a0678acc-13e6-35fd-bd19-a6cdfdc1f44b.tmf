// PDB:  qcauddev850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
a0678acc-13e6-35fd-bd19-a6cdfdc1f44b vcxproj // SRC=wcd_interrupt_handler.c MJ= MN=
#typev wcd_interrupt_handler_c536 39 "%0=WCD_IH: <wcd_register_for_interrupt, returning> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=handle_subscription
{
}
#typev wcd_interrupt_handler_c533 38 "%0=WCD_IH: <wcd_register_for_interrupt, unsupported client type or client already registered> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=handle_subscription
{
}
#typev wcd_interrupt_handler_c527 37 "%0=WCD_IH: <wcd_register_for_interrupt, Calling client callback> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=handle_subscription
{
}
#typev wcd_interrupt_handler_c279 17 "%0=WCD_IH: <ih_check_client_status, Error, thread is not running> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=ih_check_client_status
{
}
#typev wcd_interrupt_handler_c274 16 "%0=WCD_IH: <ih_check_client_status, client not registered or invalid handle> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=ih_check_client_status
{
}
#typev wcd_interrupt_handler_c823 70 "%0=WCD_IH: <wcd_clear_interrupt, returning> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_clear_interrupt
{
}
#typev wcd_interrupt_handler_c820 69 "%0=WCD_IH: <wcd_clear_interrupt, Could not release the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_clear_interrupt
{
}
// PDB:  qcauddev850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev wcd_interrupt_handler_c799 68 "%0=WCD_IH: <wcd_clear_interrupt, Could not acquire the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_clear_interrupt
{
}
#typev wcd_interrupt_handler_c792 67 "%0=WCD_IH: <wcd_clear_interrupt, Interrupt Handler mutex is NULL, Exiting> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_clear_interrupt
{
}
#typev wcd_interrupt_handler_c781 66 "%0=WCD_IH: <wcd_clear_interrupt called> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_clear_interrupt
{
}
#typev wcd_interrupt_handler_c505 36 "%0-WCD_IH: <wcd_deinit_interrupt_handler, returning, wcd_ih_init_count=(%10!u!)> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_deinit_interrupt_handler
{
wcd_ih_init_count, ItemLong -- 10
}
#typev wcd_interrupt_handler_c495 35 "%0=WCD_IH: <wcd_deinit_interrupt_handler, Could not release the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_deinit_interrupt_handler
{
}
#typev wcd_interrupt_handler_c486 34 "%0=WCD_IH: <wcd_deinit_interrupt_handler, Some other client is already registered, hence skipping deinit> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_deinit_interrupt_handler
{
}
#typev wcd_interrupt_handler_c481 15 "%0=WCD_IH: <wcd_ih_deinitialize_status, ih_status is NULL> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_deinit_interrupt_handler
{
}
#typev wcd_interrupt_handler_c481 14 "%0=WCD_IH: <wcd_ih_deinitialize_status, IH status deinitialized> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_deinit_interrupt_handler
{
}
#typev wcd_interrupt_handler_c481 13 "%0+WCD_IH: <wcd_ih_deinitialize_status, ih_clients_registered = (%10!u!)> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_deinit_interrupt_handler
{
(uint32)ih_clients_registered, ItemLong -- 10
}
// PDB:  qcauddev850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev wcd_interrupt_handler_c450 33 "%0=WCD_IH: <wcd_deinit_interrupt_handler called, wcd_ih_init_count=(%10!u!)> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_deinit_interrupt_handler
{
wcd_ih_init_count, ItemLong -- 10
}
#typev wcd_interrupt_handler_c445 32 "%0=WCD_IH: <wcd_deinit_interrupt_handler, Could not acquire the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_deinit_interrupt_handler
{
}
#typev wcd_interrupt_handler_c657 51 "%0=WCD_IH: <wcd_deregister_interrupt, returning> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_deregister_interrupt
{
}
#typev wcd_interrupt_handler_c655 50 "%0=WCD_IH: <wcd_deregister_interrupt, Could not release the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_deregister_interrupt
{
}
#typev wcd_interrupt_handler_c633 49 "%0=WCD_IH: <wcd_deregister_interrupt called with client=(%10!d!)> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_deregister_interrupt
{
info->type, ItemLong -- 10
}
#typev wcd_interrupt_handler_c628 48 "%0=WCD_IH: <wcd_deregister_interrupt, Could not acquire the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_deregister_interrupt
{
}
#typev wcd_interrupt_handler_c621 47 "%0=WCD_IH: <wcd_deregister_interrupt, Interrupt Handler mutex is NULL, Exiting> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_deregister_interrupt
{
}
#typev wcd_interrupt_handler_c614 46 "%0=WCD_IH: <wcd_deregister_interrupt called with NULL handle> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_deregister_interrupt
{
}
#typev wcd_interrupt_handler_c770 65 "%0=WCD_IH: <wcd_disable_interrupt, returning> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_disable_interrupt
{
}
#typev wcd_interrupt_handler_c767 64 "%0=WCD_IH: <wcd_disable_interrupt, Could not release the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_disable_interrupt
{
}
#typev wcd_interrupt_handler_c759 63 "%0=WCD_IH: <wcd_disable_interrupt, Could not disable the interrupt err = (%10!d!)> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_disable_interrupt
{
wcdrc, ItemLong -- 10
}
#typev wcd_interrupt_handler_c754 62 "%0=WCD_IH: <wcd_disable_interrupt, interrupt(s) disabled> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_disable_interrupt
{
}
#typev wcd_interrupt_handler_c746 61 "%0=WCD_IH: <wcd_disable_interrupt called> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_disable_interrupt
{
}
#typev wcd_interrupt_handler_c741 60 "%0=WCD_IH: <wcd_disable_interrupt, Could not acquire the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_disable_interrupt
{
}
#typev wcd_interrupt_handler_c734 59 "%0=WCD_IH: <wcd_disable_interrupt, Interrupt Handler mutex is NULL, Exiting> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_disable_interrupt
{
}
#typev wcd_interrupt_handler_c714 58 "%0=WCD_IH: <wcd_enable_interrupt, returning> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_enable_interrupt
{
}
#typev wcd_interrupt_handler_c711 57 "%0=WCD_IH: <wcd_enable_interrupt, Could not release the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_enable_interrupt
{
}
#typev wcd_interrupt_handler_c702 56 "%0=WCD_IH: <wcd_enable_interrupt, Could not enable the interrupt err = (%10!d!)>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_enable_interrupt
{
wcdrc, ItemLong -- 10
}
#typev wcd_interrupt_handler_c697 55 "%0=WCD_IH: <wcd_enable_interrupt, interrupt(s) enabled> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_enable_interrupt
{
}
// PDB:  qcauddev850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev wcd_interrupt_handler_c689 54 "%0=WCD_IH: <wcd_enable_interrupt> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_enable_interrupt
{
}
#typev wcd_interrupt_handler_c684 53 "%0=WCD_IH: <wcd_enable_interrupt, Could not acquire the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_enable_interrupt
{
}
#typev wcd_interrupt_handler_c677 52 "%0=WCD_IH: <wcd_enable_interrupt, Interrupt Handler mutex is NULL, Exiting> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_enable_interrupt
{
}
#typev wcd_interrupt_handler_c134 12 "%0=WCD_IH: <wcd_ih_initialize_status, Some other client has already connected before> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_initialize_status
{
}
#typev wcd_interrupt_handler_c127 11 "%0=WCD_IH: <wcd_ih_initialize_status, WCD_MALLOC Error> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_ih_initialize_status
{
}
#typev wcd_interrupt_handler_c123 10 "%0=WCD_IH: <wcd_ih_initialize_status, New clients connected status initialized> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_initialize_status
{
}
#typev wcd_interrupt_handler_c1046 88 "%0-WCD_IH: <wcd_ih_irq_handler, exiting> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_irq_handler
{
}
#typev wcd_interrupt_handler_c942 83 "%0=WCD_IH: <wcd_ih_irq_handler status bits are not set> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_irq_handler
{
}
#typev wcd_interrupt_handler_c1040 87 "%0=WCD_IH: <wcd_ih_irq_handler, Called MBHC CB> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_irq_handler
{
}
#typev wcd_interrupt_handler_c1027 86 "%0=WCD_IH: <wcd_ih_irq_handler, Called MBHC CB> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_irq_handler
{
}
#typev wcd_interrupt_handler_c1022 85 "%0=WCD_IH: <wcd_ih_irq_handler, notify MBHC=(%10!u!)> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_irq_handler
{
notify, ItemLong -- 10
}
// PDB:  qcauddev850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev wcd_interrupt_handler_c1015 84 "%0=WCD_IH: <wcd_ih_irq_handler, mbhc_in_use=(%10!u!)> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_irq_handler
{
ih_status->mbhc.in_use, ItemLong -- 10
}
// PDB:  qcauddev850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev wcd_interrupt_handler_c925 82 "%0+WCD_IH: <wcd_ih_irq_handler called> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_irq_handler
{
}
#typev wcd_interrupt_handler_c921 81 "%0=WCD_IH: <wcd_ih_irq_handler called but status not initialized> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_irq_handler
{
}
#typev wcd_interrupt_handler_c1160 100 "%0=WCD_IH: <wcd_ih_set_irq, returning> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_set_irq
{
}
#typev wcd_interrupt_handler_c1157 99 "%0=WCD_IH: <wcd_ih_set_irq, Could not release the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_ih_set_irq
{
}
#typev wcd_interrupt_handler_c1149 98 "%0=WCD_IH: <wcd_ih_set_irq, Could not enable the interrupt err = (%10!d!)>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_ih_set_irq
{
wcdrc, ItemLong -- 10
}
// PDB:  qcauddev850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev wcd_interrupt_handler_c1141 97 "%0=WCD_IH: <wcd_ih_set_irq> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_set_irq
{
}
#typev wcd_interrupt_handler_c1136 96 "%0=WCD_IH: <wcd_ih_set_irq, Could not acquire the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_set_irq
{
}
#typev wcd_interrupt_handler_c1129 95 "%0=WCD_IH: <wcd_ih_set_irq, Interrupt Handler mutex is NULL, Exiting> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_ih_set_irq
{
}
#typev wcd_interrupt_handler_c1106 94 "%0=WCD_IH: <wcd_ih_set_irq_test_mode, returning> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_set_irq_test_mode
{
}
#typev wcd_interrupt_handler_c1103 93 "%0=WCD_IH: <wcd_ih_set_irq_test_mode, Could not release the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_ih_set_irq_test_mode
{
}
#typev wcd_interrupt_handler_c1094 92 "%0=WCD_IH: <wcd_ih_set_irq_test_mode, Could not enable the interrupt err = (%10!d!)>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_ih_set_irq_test_mode
{
wcdrc, ItemLong -- 10
}
// PDB:  qcauddev850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev wcd_interrupt_handler_c1086 91 "%0=WCD_IH: <wcd_ih_set_irq_test_mode> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_set_irq_test_mode
{
}
#typev wcd_interrupt_handler_c1081 90 "%0=WCD_IH: <wcd_ih_set_irq_test_mode, Could not acquire the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_ih_set_irq_test_mode
{
}
#typev wcd_interrupt_handler_c1074 89 "%0=WCD_IH: <wcd_ih_set_irq_test_mode, Interrupt Handler mutex is NULL, Exiting> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_ih_set_irq_test_mode
{
}
#typev wcd_interrupt_handler_c430 31 "%0=WCD_IH: <wcd_init_interrupt_handler, RC:%10!d!., wcd_ih_init_count=(%11!u!) " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_init_interrupt_handler
{
rc, ItemLong -- 10
wcd_ih_init_count, ItemLong -- 11
}
#typev wcd_interrupt_handler_c427 30 "%0=WCD_IH: <wcd_init_interrupt_handle, Interrupt Handler mutex is NULL, Exiting> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_init_interrupt_handler
{
}
#typev wcd_interrupt_handler_c422 29 "%0=WCD_IH: <wcd_init_interrupt_handle, Could not release the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_init_interrupt_handler
{
}
#typev wcd_interrupt_handler_c352 25 "%0=WCD_IH: <wcd_init_interrupt_handler, Could not initialize interrupt handler internal error = (%10!d!)> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_init_interrupt_handler
{
wcdrc, ItemLong -- 10
}
#typev wcd_interrupt_handler_c349 24 "%0=WCD_IH: <wcd_init_interrupt_handler, Interrupt handler internal init status = (%10!d!)> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_init_interrupt_handler
{
wcdrc, ItemLong -- 10
}
// PDB:  qcauddev850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev wcd_interrupt_handler_c343 23 "%0=WCD_IH: <wcd_init_interrupt_handler, Interrupt handler initialization status = (%10!d!)> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_init_interrupt_handler
{
rc, ItemLong -- 10
}
#typev wcd_interrupt_handler_c338 22 "%0=WCD_IH: <wcd_init_interrupt_handler, Thread already initialized, Not returning an error, rc=(%10!d!), wcd_ih_init_count=(%11!u!) " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_init_interrupt_handler
{
rc, ItemLong -- 10
wcd_ih_init_count, ItemLong -- 11
}
#typev wcd_interrupt_handler_c331 21 "%0=WCD_IH: <wcd_init_interrupt_handler called, thread_running = (%10!u!)> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_init_interrupt_handler
{
(uint32)ih_is_thread_running, ItemLong -- 10
}
#typev wcd_interrupt_handler_c321 19 "%0=WCD_IH: <wcd_init_interrupt_handle, Could not acquire the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_init_interrupt_handler
{
}
#typev wcd_interrupt_handler_c310 18 "%0=WCD_93XX: <WCD_Interrupt_handler_Mutex creation failed> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_init_interrupt_handler
{
}
#typev wcd_interrupt_handler_c601 45 "%0=WCD_IH: <wcd_register_for_interrupt, Could not release the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_register_for_interrupt
{
}
#typev wcd_interrupt_handler_c592 44 "%0=WCD_IH: <wcd_register_for_interrupt, Unsupported type, Error> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_register_for_interrupt
{
}
#typev wcd_interrupt_handler_c586 43 "%0-WCD_IH: <wcd_register_for_interrupt, Unsupported type, Error> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_register_for_interrupt
{
}
#typev wcd_interrupt_handler_c566 42 "%0=WCD_IH: <wcd_register_for_interrupt called with client=(%10!d!)> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_register_for_interrupt
{
subscriptiontype, ItemLong -- 10
}
#typev wcd_interrupt_handler_c562 41 "%0=WCD_IH: <wcd_register_for_interrupt, Could not acquire the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_register_for_interrupt
{
}
#typev wcd_interrupt_handler_c554 40 "%0=WCD_93XX: <wcd_register_for_interrupt mutex creation failed> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_register_for_interrupt
{
}
#typev wcd_interrupt_handler_c867 75 "%0=WCD_IH: <wcd_set_manual_clear_interrupt, returning> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_set_manual_clear_interrupt
{
}
#typev wcd_interrupt_handler_c864 74 "%0=WCD_IH: <wcd_set_manual_clear_interrupt, Could not release the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_set_manual_clear_interrupt
{
}
#typev wcd_interrupt_handler_c850 73 "%0=WCD_IH: <wcd_set_manual_clear_interrupt, Could not acquire the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_set_manual_clear_interrupt
{
}
#typev wcd_interrupt_handler_c843 72 "%0=WCD_IH: <wcd_set_manual_clear_interrupt, Interrupt Handler mutex is NULL, Exiting> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd_set_manual_clear_interrupt
{
}
#typev wcd_interrupt_handler_c832 71 "%0=WCD_IH: <wcd_set_manual_clear_interrupt called> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_set_manual_clear_interrupt
{
}
// PDB:  qcauddev850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev tgt_wcd934x_c8441 45 "%0=WCD_IH: <wcd_register_for_interrupt, Could not release the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd934x_WDSP_SET_CONFIG
{
}
#typev tgt_wcd934x_c8441 43 "%0-WCD_IH: <wcd_register_for_interrupt, Unsupported type, Error> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd934x_WDSP_SET_CONFIG
{
}
#typev tgt_wcd934x_c8441 44 "%0=WCD_IH: <wcd_register_for_interrupt, Unsupported type, Error> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd934x_WDSP_SET_CONFIG
{
}
#typev tgt_wcd934x_c8441 42 "%0=WCD_IH: <wcd_register_for_interrupt called with client=(%10!d!)> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd934x_WDSP_SET_CONFIG
{
subscriptiontype, ItemLong -- 10
}
#typev tgt_wcd934x_c8441 41 "%0=WCD_IH: <wcd_register_for_interrupt, Could not acquire the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd934x_WDSP_SET_CONFIG
{
}
#typev tgt_wcd934x_c8441 40 "%0=WCD_93XX: <wcd_register_for_interrupt mutex creation failed> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wcd934x_WDSP_SET_CONFIG
{
}
// PDB:  qcauddev850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev swr_osal_c80 45 "%0=WCD_IH: <wcd_register_for_interrupt, Could not release the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_reg_swr_master_IRQ
{
}
#typev swr_osal_c80 44 "%0=WCD_IH: <wcd_register_for_interrupt, Unsupported type, Error> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_reg_swr_master_IRQ
{
}
#typev swr_osal_c80 43 "%0-WCD_IH: <wcd_register_for_interrupt, Unsupported type, Error> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_reg_swr_master_IRQ
{
}
#typev swr_osal_c80 42 "%0=WCD_IH: <wcd_register_for_interrupt called with client=(%10!d!)> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_reg_swr_master_IRQ
{
subscriptiontype, ItemLong -- 10
}
#typev swr_osal_c80 41 "%0=WCD_IH: <wcd_register_for_interrupt, Could not acquire the Interrupt Handler mutex> " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=swr_reg_swr_master_IRQ
{
}
#typev swr_osal_c80 40 "%0=WCD_93XX: <wcd_register_for_interrupt mutex creation failed> " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=swr_reg_swr_master_IRQ
{
}
