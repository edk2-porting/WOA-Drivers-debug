// PDB:  qciommu.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
761829e6-7bae-37dd-4f00-4c915b4cfab0 IOMMU // SRC=SmmuInit.cpp MJ= MN=
#typev SmmuInit_cpp404 33 "%0 SmmuInit.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=EvaluateRegistryS1ARIDGroupInfo
{
}
#typev SmmuInit_cpp387 32 "%0 SmmuInit.cpp::%!FUNC!::387 : Invalid ARID data!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistryS1ARIDGroupInfo
{
}
#typev SmmuInit_cpp367 31 "%0 SmmuInit.cpp::%!FUNC!::367 : Invalid S2CB data!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistryS1ARIDGroupInfo
{
}
#typev SmmuInit_cpp361 30 "%0 SmmuInit.cpp::%!FUNC!::361 : Failed WdfRegistryQueryMemory with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistryS1ARIDGroupInfo
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp349 29 "%0 SmmuInit.cpp::%!FUNC!::349 : Failed DMF_Registry_HandleOpenByHandle with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistryS1ARIDGroupInfo
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp338 28 "%0 SmmuInit.cpp::%!FUNC!::338 :Unable to retrieve DMF module from device." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistryS1ARIDGroupInfo
{
}
#typev SmmuInit_cpp331 27 "%0 SmmuInit.cpp::%!FUNC!::331 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistryS1ARIDGroupInfo
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp324 26 "%0 SmmuInit.cpp::%!FUNC!::324 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistryS1ARIDGroupInfo
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp317 25 "%0 SmmuInit.cpp::%!FUNC!::317 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistryS1ARIDGroupInfo
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp308 24 "%0 SmmuInit.cpp::%!FUNC!::308 : InstanceId buffer size exceeds the limit!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistryS1ARIDGroupInfo
{
}
#typev SmmuInit_cpp303 23 "%0 SmmuInit.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=EvaluateRegistryS1ARIDGroupInfo
{
}
#typev SmmuInit_cpp404 33 "%0 SmmuInit.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`EvaluateRegistryS1ARIDGroupInfo'::`1'::fin$0
{
}
#typev SmmuInit_cpp387 32 "%0 SmmuInit.cpp::%!FUNC!::387 : Invalid ARID data!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistryS1ARIDGroupInfo'::`1'::fin$0
{
}
#typev SmmuInit_cpp367 31 "%0 SmmuInit.cpp::%!FUNC!::367 : Invalid S2CB data!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistryS1ARIDGroupInfo'::`1'::fin$0
{
}
#typev SmmuInit_cpp361 30 "%0 SmmuInit.cpp::%!FUNC!::361 : Failed WdfRegistryQueryMemory with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistryS1ARIDGroupInfo'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp349 29 "%0 SmmuInit.cpp::%!FUNC!::349 : Failed DMF_Registry_HandleOpenByHandle with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistryS1ARIDGroupInfo'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp338 28 "%0 SmmuInit.cpp::%!FUNC!::338 :Unable to retrieve DMF module from device." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistryS1ARIDGroupInfo'::`1'::fin$0
{
}
#typev SmmuInit_cpp331 27 "%0 SmmuInit.cpp::%!FUNC!::331 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistryS1ARIDGroupInfo'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp324 26 "%0 SmmuInit.cpp::%!FUNC!::324 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistryS1ARIDGroupInfo'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp317 25 "%0 SmmuInit.cpp::%!FUNC!::317 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistryS1ARIDGroupInfo'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp308 24 "%0 SmmuInit.cpp::%!FUNC!::308 : InstanceId buffer size exceeds the limit!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistryS1ARIDGroupInfo'::`1'::fin$0
{
}
#typev SmmuInit_cpp303 23 "%0 SmmuInit.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`EvaluateRegistryS1ARIDGroupInfo'::`1'::fin$0
{
}
#typev SmmuInit_cpp796 60 "%0 SmmuInit.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=EvaluateRegistrySmmuErrataCLients
{
}
#typev SmmuInit_cpp773 59 "%0 SmmuInit.cpp::%!FUNC!::773 : Invalid ErrataApplicableClients data!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuErrataCLients
{
}
#typev SmmuInit_cpp765 58 "%0 SmmuInit.cpp::%!FUNC!::765 : Invalid ErrataApplicableClients data!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuErrataCLients
{
}
#typev SmmuInit_cpp758 57 "%0 SmmuInit.cpp::%!FUNC!::758 : Failed DMF_Registry_ValueReadBinary with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuErrataCLients
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp746 56 "%0 SmmuInit.cpp::%!FUNC!::746 : Failed DMF_Registry_HandleOpenByHandle with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuErrataCLients
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp735 55 "%0 SmmuInit.cpp::%!FUNC!::735 :Unable to retrieve DMF module from device." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuErrataCLients
{
}
#typev SmmuInit_cpp729 54 "%0 SmmuInit.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=EvaluateRegistrySmmuErrataCLients
{
}
#typev SmmuInit_cpp796 60 "%0 SmmuInit.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`EvaluateRegistrySmmuErrataCLients'::`1'::fin$0
{
}
#typev SmmuInit_cpp773 59 "%0 SmmuInit.cpp::%!FUNC!::773 : Invalid ErrataApplicableClients data!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuErrataCLients'::`1'::fin$0
{
}
#typev SmmuInit_cpp765 58 "%0 SmmuInit.cpp::%!FUNC!::765 : Invalid ErrataApplicableClients data!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuErrataCLients'::`1'::fin$0
{
}
#typev SmmuInit_cpp758 57 "%0 SmmuInit.cpp::%!FUNC!::758 : Failed DMF_Registry_ValueReadBinary with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuErrataCLients'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp746 56 "%0 SmmuInit.cpp::%!FUNC!::746 : Failed DMF_Registry_HandleOpenByHandle with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuErrataCLients'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp735 55 "%0 SmmuInit.cpp::%!FUNC!::735 :Unable to retrieve DMF module from device." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuErrataCLients'::`1'::fin$0
{
}
#typev SmmuInit_cpp729 54 "%0 SmmuInit.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`EvaluateRegistrySmmuErrataCLients'::`1'::fin$0
{
}
#typev SmmuInit_cpp632 50 "%0 SmmuInit.cpp::%!FUNC!::632 : Failed DMF_Registry_ValueReadDword with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuErrataInformation
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp622 49 "%0 SmmuInit.cpp::%!FUNC!::622 : Failed DMF_Registry_HandleOpenByHandle with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuErrataInformation
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp610 48 "%0 SmmuInit.cpp::%!FUNC!::610 :Unable to retrieve DMF module from device." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuErrataInformation
{
}
#typev SmmuInit_cpp603 47 "%0 SmmuInit.cpp::%!FUNC!::603 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuErrataInformation
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp596 46 "%0 SmmuInit.cpp::%!FUNC!::596 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuErrataInformation
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp589 45 "%0 SmmuInit.cpp::%!FUNC!::589 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuErrataInformation
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp580 44 "%0 SmmuInit.cpp::%!FUNC!::580 : InstanceId buffer size exceeds the limit!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuErrataInformation
{
}
#typev SmmuInit_cpp632 50 "%0 SmmuInit.cpp::%!FUNC!::632 : Failed DMF_Registry_ValueReadDword with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuErrataInformation'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp622 49 "%0 SmmuInit.cpp::%!FUNC!::622 : Failed DMF_Registry_HandleOpenByHandle with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuErrataInformation'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp610 48 "%0 SmmuInit.cpp::%!FUNC!::610 :Unable to retrieve DMF module from device." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuErrataInformation'::`1'::fin$0
{
}
#typev SmmuInit_cpp603 47 "%0 SmmuInit.cpp::%!FUNC!::603 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuErrataInformation'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp596 46 "%0 SmmuInit.cpp::%!FUNC!::596 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuErrataInformation'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp589 45 "%0 SmmuInit.cpp::%!FUNC!::589 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuErrataInformation'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp580 44 "%0 SmmuInit.cpp::%!FUNC!::580 : InstanceId buffer size exceeds the limit!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuErrataInformation'::`1'::fin$0
{
}
#typev SmmuInit_cpp116 16 "%0 SmmuInit.cpp::%!FUNC!::116 : Failed RtlGUIDFromString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuGuid
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp109 15 "%0 SmmuInit.cpp::%!FUNC!::109 : Failed RtlUnicodeStringInit with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuGuid
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp93 14 "%0 SmmuInit.cpp::%!FUNC!::93 : Failed DMF_Registry_HandleOpenByHandle with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuGuid
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp82 13 "%0 SmmuInit.cpp::%!FUNC!::82 :Unable to retrieve DMF module from device." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuGuid
{
}
#typev SmmuInit_cpp75 12 "%0 SmmuInit.cpp::%!FUNC!::75 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuGuid
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp68 11 "%0 SmmuInit.cpp::%!FUNC!::68 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuGuid
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp59 10 "%0 SmmuInit.cpp::%!FUNC!::59 : InstanceId buffer size exceeds the limit!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuGuid
{
}
#typev SmmuInit_cpp116 16 "%0 SmmuInit.cpp::%!FUNC!::116 : Failed RtlGUIDFromString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuGuid'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp109 15 "%0 SmmuInit.cpp::%!FUNC!::109 : Failed RtlUnicodeStringInit with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuGuid'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp93 14 "%0 SmmuInit.cpp::%!FUNC!::93 : Failed DMF_Registry_HandleOpenByHandle with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuGuid'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp82 13 "%0 SmmuInit.cpp::%!FUNC!::82 :Unable to retrieve DMF module from device." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuGuid'::`1'::fin$0
{
}
#typev SmmuInit_cpp75 12 "%0 SmmuInit.cpp::%!FUNC!::75 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuGuid'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp68 11 "%0 SmmuInit.cpp::%!FUNC!::68 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuGuid'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp59 10 "%0 SmmuInit.cpp::%!FUNC!::59 : InstanceId buffer size exceeds the limit!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuGuid'::`1'::fin$0
{
}
#typev SmmuInit_cpp692 53 "%0 SmmuInit.cpp::%!FUNC!::692 : Failed DMF_Registry_ValueReadDword with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuIOCoherentPTWInfo
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp682 52 "%0 SmmuInit.cpp::%!FUNC!::682 : Failed DMF_Registry_HandleOpenByHandle with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuIOCoherentPTWInfo
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp671 51 "%0 SmmuInit.cpp::%!FUNC!::671 :Unable to retrieve DMF module from device." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuIOCoherentPTWInfo
{
}
#typev SmmuInit_cpp692 53 "%0 SmmuInit.cpp::%!FUNC!::692 : Failed DMF_Registry_ValueReadDword with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuIOCoherentPTWInfo'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp682 52 "%0 SmmuInit.cpp::%!FUNC!::682 : Failed DMF_Registry_HandleOpenByHandle with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuIOCoherentPTWInfo'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp671 51 "%0 SmmuInit.cpp::%!FUNC!::671 :Unable to retrieve DMF module from device." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuIOCoherentPTWInfo'::`1'::fin$0
{
}
#typev SmmuInit_cpp536 43 "%0 SmmuInit.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=EvaluateRegistrySmmuInputMappingInformation
{
}
#typev SmmuInit_cpp500 42 "%0 SmmuInit.cpp::%!FUNC!::500 : Invalid CTXI data!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuInputMappingInformation
{
}
#typev SmmuInit_cpp494 41 "%0 SmmuInit.cpp::%!FUNC!::494 : Failed WdfRegistryQueryMemory with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuInputMappingInformation
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp482 40 "%0 SmmuInit.cpp::%!FUNC!::482 : Failed DMF_Registry_HandleOpenByHandle with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuInputMappingInformation
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp471 39 "%0 SmmuInit.cpp::%!FUNC!::471 :Unable to retrieve DMF module from device." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuInputMappingInformation
{
}
#typev SmmuInit_cpp463 38 "%0 SmmuInit.cpp::%!FUNC!::463 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuInputMappingInformation
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp456 37 "%0 SmmuInit.cpp::%!FUNC!::456 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuInputMappingInformation
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp449 36 "%0 SmmuInit.cpp::%!FUNC!::449 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuInputMappingInformation
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp440 35 "%0 SmmuInit.cpp::%!FUNC!::440 : InstanceId buffer size exceeds the limit!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=EvaluateRegistrySmmuInputMappingInformation
{
}
#typev SmmuInit_cpp435 34 "%0 SmmuInit.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=EvaluateRegistrySmmuInputMappingInformation
{
}
#typev SmmuInit_cpp536 43 "%0 SmmuInit.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`EvaluateRegistrySmmuInputMappingInformation'::`1'::fin$0
{
}
#typev SmmuInit_cpp500 42 "%0 SmmuInit.cpp::%!FUNC!::500 : Invalid CTXI data!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuInputMappingInformation'::`1'::fin$0
{
}
#typev SmmuInit_cpp494 41 "%0 SmmuInit.cpp::%!FUNC!::494 : Failed WdfRegistryQueryMemory with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuInputMappingInformation'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp482 40 "%0 SmmuInit.cpp::%!FUNC!::482 : Failed DMF_Registry_HandleOpenByHandle with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuInputMappingInformation'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp471 39 "%0 SmmuInit.cpp::%!FUNC!::471 :Unable to retrieve DMF module from device." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuInputMappingInformation'::`1'::fin$0
{
}
#typev SmmuInit_cpp463 38 "%0 SmmuInit.cpp::%!FUNC!::463 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuInputMappingInformation'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp456 37 "%0 SmmuInit.cpp::%!FUNC!::456 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuInputMappingInformation'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp449 36 "%0 SmmuInit.cpp::%!FUNC!::449 : Failed RtlAppendUnicodeStringToString with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuInputMappingInformation'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp440 35 "%0 SmmuInit.cpp::%!FUNC!::440 : InstanceId buffer size exceeds the limit!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`EvaluateRegistrySmmuInputMappingInformation'::`1'::fin$0
{
}
#typev SmmuInit_cpp435 34 "%0 SmmuInit.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`EvaluateRegistrySmmuInputMappingInformation'::`1'::fin$0
{
}
#typev SmmuInit_cpp261 22 "%0 SmmuInit.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=PopulateAridInfo
{
}
#typev SmmuInit_cpp251 21 "%0 SmmuInit.cpp::%!FUNC!::251 :SmmuDomainLock create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PopulateAridInfo
{
}
#typev SmmuInit_cpp227 20 "%0 SmmuInit.cpp::%!FUNC!::227 :Invalid Input parameters" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PopulateAridInfo
{
}
#typev SmmuInit_cpp199 19 "%0 SmmuInit.cpp::%!FUNC!::199 :Invalid Input parameters" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PopulateAridInfo
{
}
#typev SmmuInit_cpp179 18 "%0 SmmuInit.cpp::%!FUNC!::179 :Invalid Input parameters" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=PopulateAridInfo
{
}
#typev SmmuInit_cpp172 17 "%0 SmmuInit.cpp::%!FUNC! : Entry." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=PopulateAridInfo
{
}
#typev SmmuInit_cpp261 22 "%0 SmmuInit.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`PopulateAridInfo'::`1'::fin$0
{
}
#typev SmmuInit_cpp251 21 "%0 SmmuInit.cpp::%!FUNC!::251 :SmmuDomainLock create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PopulateAridInfo'::`1'::fin$0
{
}
#typev SmmuInit_cpp227 20 "%0 SmmuInit.cpp::%!FUNC!::227 :Invalid Input parameters" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PopulateAridInfo'::`1'::fin$0
{
}
#typev SmmuInit_cpp199 19 "%0 SmmuInit.cpp::%!FUNC!::199 :Invalid Input parameters" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PopulateAridInfo'::`1'::fin$0
{
}
#typev SmmuInit_cpp179 18 "%0 SmmuInit.cpp::%!FUNC!::179 :Invalid Input parameters" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`PopulateAridInfo'::`1'::fin$0
{
}
#typev SmmuInit_cpp172 17 "%0 SmmuInit.cpp::%!FUNC! : Entry." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`PopulateAridInfo'::`1'::fin$0
{
}
#typev SmmuInit_cpp858 65 "%0 SmmuInit.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=QueryIfKeyExists
{
}
#typev SmmuInit_cpp840 64 "%0 SmmuInit.cpp::%!FUNC!::840 : Failed WdfRegistryQueryMemory with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=QueryIfKeyExists
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp833 63 "%0 SmmuInit.cpp::%!FUNC!::833 :WdfRegistryOpenKey() failed for opening subkey!  status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=QueryIfKeyExists
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp826 62 "%0 SmmuInit.cpp::%!FUNC!::826 : Failed WdfDeviceOpenRegistryKey with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=QueryIfKeyExists
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp816 61 "%0 SmmuInit.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=QueryIfKeyExists
{
}
#typev SmmuInit_cpp858 65 "%0 SmmuInit.cpp::%!FUNC! : Exit." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`QueryIfKeyExists'::`1'::fin$0
{
}
#typev SmmuInit_cpp840 64 "%0 SmmuInit.cpp::%!FUNC!::840 : Failed WdfRegistryQueryMemory with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`QueryIfKeyExists'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp833 63 "%0 SmmuInit.cpp::%!FUNC!::833 :WdfRegistryOpenKey() failed for opening subkey!  status = %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`QueryIfKeyExists'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp826 62 "%0 SmmuInit.cpp::%!FUNC!::826 : Failed WdfDeviceOpenRegistryKey with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`QueryIfKeyExists'::`1'::fin$0
{
status, ItemNTSTATUS -- 10
}
#typev SmmuInit_cpp816 61 "%0 SmmuInit.cpp::%!FUNC! : Enter." //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=EntryExit FUNC=`QueryIfKeyExists'::`1'::fin$0
{
}
