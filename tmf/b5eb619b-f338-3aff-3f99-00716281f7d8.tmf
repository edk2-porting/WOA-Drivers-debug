// PDB:  qcvidencarm64um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
b5eb619b-f338-3aff-3f99-00716281f7d8 dll // SRC=videoenccaps.cpp MJ= MN=
#typev videoenccaps_cpp57 11 "%0memcpy_s failed for m_encoderCaps" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::Create
{
}
#typev videoenccaps_cpp57 10 "%0encode device is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::Create
{
}
// PDB:  qcvidencarm64um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev videoenccaps_cpp311 21 "%0Vertical Max Scale: 0x%10!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.maxScaleY, ItemLong -- 10
}
#typev videoenccaps_cpp310 20 "%0Vertical Min Scale: 0x%10!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.minScaleY, ItemLong -- 10
}
#typev videoenccaps_cpp309 19 "%0Horizontal Max Scale: 0x%10!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.maxScaleX, ItemLong -- 10
}
#typev videoenccaps_cpp308 18 "%0Horizontal Min Scale: 0x%10!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.minScaleX, ItemLong -- 10
}
#typev videoenccaps_cpp306 17 "%0Mirror Support: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.supportsMirror, ItemLong -- 10
}
#typev videoenccaps_cpp305 16 "%0Rotation Support: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.supportsRotation, ItemLong -- 10
}
#typev videoenccaps_cpp304 15 "%0Scaling Support: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.supportsScaling, ItemLong -- 10
}
#typev videoenccaps_cpp303 14 "%0Cropping Support: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.supportsCropping, ItemLong -- 10
}
// PDB:  qcvidencarm64um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev videoenccaps_cpp224 13 "%0Invalid Codec" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::GetCaps
{
}
// PDB:  qcvidencarm64um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev videoenccaps_cpp192 12 "%0Invalid encode device" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::GetCaps
{
}
// PDB:  qcvidencarm64um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev videoenccaps_cpp663 22 "%0Caps check failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::ValidateCaps
{
}
#typev videoenccaps_cpp721 25 "%0Invalid Advance caps " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::ValidateCaps
{
}
#typev videoenccaps_cpp701 24 "%0Invalid FPS " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::ValidateCaps
{
}
#typev videoenccaps_cpp674 23 "%0Min MB dimension check failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::ValidateCaps
{
}
// PDB:  qcvidencum850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev videoenccaps_cpp57 11 "%0memcpy_s failed for m_encoderCaps" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::Create
{
}
#typev videoenccaps_cpp57 10 "%0encode device is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::Create
{
}
// PDB:  qcvidencum850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev videoenccaps_cpp311 21 "%0Vertical Max Scale: 0x%10!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.maxScaleY, ItemLong -- 10
}
#typev videoenccaps_cpp310 20 "%0Vertical Min Scale: 0x%10!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.minScaleY, ItemLong -- 10
}
#typev videoenccaps_cpp309 19 "%0Horizontal Max Scale: 0x%10!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.maxScaleX, ItemLong -- 10
}
#typev videoenccaps_cpp308 18 "%0Horizontal Min Scale: 0x%10!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.minScaleX, ItemLong -- 10
}
#typev videoenccaps_cpp306 17 "%0Mirror Support: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.supportsMirror, ItemLong -- 10
}
#typev videoenccaps_cpp305 16 "%0Rotation Support: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.supportsRotation, ItemLong -- 10
}
#typev videoenccaps_cpp304 15 "%0Scaling Support: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.supportsScaling, ItemLong -- 10
}
#typev videoenccaps_cpp303 14 "%0Cropping Support: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.supportsCropping, ItemLong -- 10
}
// PDB:  qcvidencum850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev videoenccaps_cpp224 13 "%0Invalid Codec" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::GetCaps
{
}
// PDB:  qcvidencum850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev videoenccaps_cpp192 12 "%0Invalid encode device" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::GetCaps
{
}
// PDB:  qcvidencum850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev videoenccaps_cpp663 22 "%0Caps check failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::ValidateCaps
{
}
#typev videoenccaps_cpp721 25 "%0Invalid Advance caps " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::ValidateCaps
{
}
// PDB:  qcvidencum850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev videoenccaps_cpp701 24 "%0Invalid FPS " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::ValidateCaps
{
}
#typev videoenccaps_cpp674 23 "%0Min MB dimension check failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::ValidateCaps
{
}
// PDB:  qcvidencx86um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev videoenccaps_cpp57 11 "%0memcpy_s failed for m_encoderCaps" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::Create
{
}
#typev videoenccaps_cpp57 10 "%0encode device is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::Create
{
}
// PDB:  qcvidencx86um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev videoenccaps_cpp311 21 "%0Vertical Max Scale: 0x%10!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.maxScaleY, ItemLong -- 10
}
#typev videoenccaps_cpp310 20 "%0Vertical Min Scale: 0x%10!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.minScaleY, ItemLong -- 10
}
#typev videoenccaps_cpp309 19 "%0Horizontal Max Scale: 0x%10!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.maxScaleX, ItemLong -- 10
}
#typev videoenccaps_cpp308 18 "%0Horizontal Min Scale: 0x%10!0X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.minScaleX, ItemLong -- 10
}
#typev videoenccaps_cpp306 17 "%0Mirror Support: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.supportsMirror, ItemLong -- 10
}
#typev videoenccaps_cpp305 16 "%0Rotation Support: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.supportsRotation, ItemLong -- 10
}
#typev videoenccaps_cpp304 15 "%0Scaling Support: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.supportsScaling, ItemLong -- 10
}
#typev videoenccaps_cpp303 14 "%0Cropping Support: %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=VideoEncodeCaps::FillCommonCodecCaps
{
pCaps->EncCaps.supportsCropping, ItemLong -- 10
}
// PDB:  qcvidencx86um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev videoenccaps_cpp224 13 "%0Invalid Codec" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::GetCaps
{
}
// PDB:  qcvidencx86um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev videoenccaps_cpp192 12 "%0Invalid encode device" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::GetCaps
{
}
// PDB:  qcvidencx86um850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev videoenccaps_cpp663 22 "%0Caps check failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::ValidateCaps
{
}
#typev videoenccaps_cpp721 25 "%0Invalid Advance caps " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::ValidateCaps
{
}
#typev videoenccaps_cpp701 24 "%0Invalid FPS " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::ValidateCaps
{
}
#typev videoenccaps_cpp674 23 "%0Min MB dimension check failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=VideoEncodeCaps::ValidateCaps
{
}
