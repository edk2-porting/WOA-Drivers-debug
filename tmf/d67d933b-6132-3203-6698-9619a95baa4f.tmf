// PDB:  qcbattmngr850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
d67d933b-6132-3203-6698-9619a95baa4f BattMngr // SRC=BattMngrTech_SOCFilter_R1.c MJ= MN=
#typev BattMngrPlat_SMChg_FGGge_R3_c4302 19 "%0BattMngrTech_SOCFilter_SetAppliedDeltaSoc::savedAppliedDeltaSoC = %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_FGGge FUNC=BattMngrPlat_SMChg_FGGge_R3_SRAMReadsAndWrites
{
appliedDeltaSoC, ItemLong -- 10
}
// PDB:  qcbattmngr850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev BattMngrTech_SOCFilter_R1_c294 17 "%0BattMngrTech_SOCFilter_Get_Filtered_SOC::other state." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_FGGge FUNC=BattMngrTech_SOCFilter_Get_Filtered_SOC
{
}
#typev BattMngrTech_SOCFilter_R1_c281 16 "%0BattMngrTech_SOCFilter_Get_Filtered_SOC::discharging, calcualtedSoc = %10!d!, appliedDeltaSoC = %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_FGGge FUNC=BattMngrTech_SOCFilter_Get_Filtered_SOC
{
calculatedSoc, ItemLong -- 10
appliedDeltaSoC, ItemLong -- 11
}
#typev BattMngrTech_SOCFilter_R1_c236 15 "%0BattMngrTech_SOCFilter_Get_Filtered_SOC::charging, appliedDeltaSoC = %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_FGGge FUNC=BattMngrTech_SOCFilter_Get_Filtered_SOC
{
appliedDeltaSoC, ItemLong -- 10
}
#typev BattMngrTech_SOCFilter_R1_c213 14 "%0BattMngrTech_SOCFilter_Get_Filtered_SOC::in cv mode, ibat = %10!d! mA calcualtedSoc = %11!d!, appliedDeltaSoC = %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_FGGge FUNC=BattMngrTech_SOCFilter_Get_Filtered_SOC
{
ibat, ItemLong -- 10
calculatedSoc, ItemLong -- 11
appliedDeltaSoC, ItemLong -- 12
}
#typev BattMngrTech_SOCFilter_R1_c170 13 "%0BattMngrTech_SOCFilter_Get_Filtered_SOC::ibat <= ibatTerm, need to recalculate deltaSoc_per_100mA" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_FGGge FUNC=BattMngrTech_SOCFilter_Get_Filtered_SOC
{
}
#typev BattMngrTech_SOCFilter_R1_c164 12 "%0BattMngrTech_SOCFilter_Get_Filtered_SOC::delta_soc_per_100_mA = %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_FGGge FUNC=BattMngrTech_SOCFilter_Get_Filtered_SOC
{
deltaSoc_per_100mA, ItemLong -- 10
}
#typev BattMngrTech_SOCFilter_R1_c150 11 "%0BattMngrTech_SOCFilter_Get_Filtered_SOC::inCvCharging = %10!d!, cvCharging = %11!d!, bRecalDelta = %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_FGGge FUNC=BattMngrTech_SOCFilter_Get_Filtered_SOC
{
inCvCharging, ItemLong -- 10
cvCharging, ItemLong -- 11
bRecalDelta_soc, ItemLong -- 12
}
#typev BattMngrTech_SOCFilter_R1_c306 18 "%0BattMngrTech_SOCFilter_Get_Filtered_SOC::filtered soc = %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_FGGge FUNC=BattMngrTech_SOCFilter_Get_Filtered_SOC
{
*filteredSoc, ItemLong -- 10
}
#typev BattMngrTech_SOCFilter_R1_c118 10 "%0BattMngrTech_SOCFilter_Get_Filtered_SOC::done or recharge, set calcualted soc to 1000." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=BattMngrWPP_FGGge FUNC=BattMngrTech_SOCFilter_Get_Filtered_SOC
{
}
