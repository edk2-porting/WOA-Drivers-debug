// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
01990cc0-eb16-3c08-b1bb-81dcc60c9fb3 QcVidEncMFT // SRC=qveCaps.cpp MJ= MN=
#typev qveMftCore_cpp498 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::Initialize
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCore_cpp2585 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::QueryCaps
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
#typev qveMftCore_cpp2585 35 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::QueryCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp1406 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::CalculateMaxFPSRange
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp3785 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::HandleCaptureFrameRate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp2987 25 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::UpdateDefaultBFrameCount
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp642 67 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp641 66 "%0[0x%10!p!] CAP: Default RCMode = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nDefaultMode, ItemLong -- 11
}
#typev qveCaps_cpp639 65 "%0[0x%10!p!] CAP: RCMode[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncCaps.EncRCModeInfo.nSupportedModes[index], ItemLong -- 12
}
#typev qveCaps_cpp636 64 "%0[0x%10!p!] CAP: Number of supported RC Modes = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nCount, ItemLong -- 11
}
#typev qveCaps_cpp633 63 "%0[0x%10!p!] CAP: format[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncInputFormats[index], ItemLong -- 12
}
#typev qveCaps_cpp630 62 "%0[0x%10!p!] CAP: Number of Supported input formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncInputFormatCount, ItemLong -- 11
}
#typev qveCaps_cpp627 61 "%0[0x%10!p!] CAP: format[%11!u!] = %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
&(m_Caps.EncGUIDs[index]), ItemGuid -- 12
}
#typev qveCaps_cpp624 60 "%0[0x%10!p!] CAP: Number of Supported output formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncGUIDCount, ItemLong -- 11
}
#typev qveCaps_cpp623 59 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp622 58 "%0[0x%10!p!] CAP: SupportsNv12UBWC =       %11!10u!| Max MBps with B-frames =  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsNv12Compression, ItemLong -- 11
m_Caps.EncCaps.nEncMaxMBpsSupportedWithBFrame, ItemLong -- 12
}
#typev qveCaps_cpp621 57 "%0[0x%10!p!] CAP: MinScaleY =            0x%11!10X!| MaxScaleY =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleY, ItemLong -- 11
m_Caps.EncCaps.maxScaleY, ItemLong -- 12
}
#typev qveCaps_cpp620 56 "%0[0x%10!p!] CAP: MinScaleX =            0x%11!10X!| MaxScaleX =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleX, ItemLong -- 11
m_Caps.EncCaps.maxScaleX, ItemLong -- 12
}
#typev qveCaps_cpp619 55 "%0[0x%10!p!] CAP: SupportsRotation =       %11!10u!| SupportsMirror =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsRotation, ItemLong -- 11
m_Caps.EncCaps.supportsMirror, ItemLong -- 12
}
#typev qveCaps_cpp618 54 "%0[0x%10!p!] CAP: SupportsScaling =        %11!10u!| SupportsCropping =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsScaling, ItemLong -- 11
m_Caps.EncCaps.supportsCropping, ItemLong -- 12
}
#typev qveCaps_cpp617 53 "%0[0x%10!p!] CAP: Min QP =                 %11!10u!| Max QP =                  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinQP, ItemLong -- 11
m_Caps.EncCaps.nEncMaxQP, ItemLong -- 12
}
#typev qveCaps_cpp616 52 "%0[0x%10!p!] CAP: SliceControlMode Min =   %11!10u!| SliceControlMode Max =    %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultSliceControlMode_Min, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultSliceControlMode_Max, ItemLong -- 12
}
#typev qveCaps_cpp615 51 "%0[0x%10!p!] CAP: Default B-frame count =  %11!10u!| Max Ref frame count =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxRefFrameCount, ItemLong -- 12
}
#typev qveCaps_cpp614 50 "%0[0x%10!p!] CAP: Low Latency Mode =       %11!10u!| Cabac Support =           %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncLowLatencyMode, ItemLong -- 11
m_Caps.EncCaps.nEncCABACSupport, ItemLong -- 12
}
#typev qveCaps_cpp613 49 "%0[0x%10!p!] CAP: Default Mean Bitrate =   %11!10u!| Default Max Bitrate =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultMeanBitRate, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultMaxBitRate, ItemLong -- 12
}
#typev qveCaps_cpp612 48 "%0[0x%10!p!] CAP: Max Peak Bitrate =       %11!10u!| Max Hier P-layer =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxPeakMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveCaps_cpp611 47 "%0[0x%10!p!] CAP: Max Profile =            %11!10u!| Max Level =               %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxProfile, ItemLong -- 11
m_Caps.EncCaps.nEncMaxLevel, ItemLong -- 12
}
#typev qveCaps_cpp610 46 "%0[0x%10!p!] CAP: Max B-frame Count =      %11!10u!| Max Num LTR =             %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumLTR, ItemLong -- 12
}
#typev qveCaps_cpp609 45 "%0[0x%10!p!] CAP: Max Mean Bitrate (bps) = %11!10u!| Max MacroBlocks Per Sec = %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMeanMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMbsPerSecond, ItemLong -- 12
}
#typev qveCaps_cpp608 44 "%0[0x%10!p!] CAP: Max MacroBlocks =        %11!10u!| Min Dim =                 %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMB, ItemLong -- 11
m_Caps.EncCaps.nEncMinDimension, ItemLong -- 12
}
#typev qveCaps_cpp607 43 "%0[0x%10!p!] CAP: Min height (px) =        %11!10u!| Min Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMinWidth, ItemLong -- 12
}
#typev qveCaps_cpp606 42 "%0[0x%10!p!] CAP: Max height (px) =        %11!10u!| Max Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMaxWidth, ItemLong -- 12
}
#typev qveCaps_cpp605 41 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp604 40 "%0[0x%10!p!] CAP: =========================Encoder Capabilities==============================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp603 39 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp599 38 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp598 37 "%0[0x%10!p!] CAP: caps are NOT available" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp597 36 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp531 34 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp522 33 "%0[0x%10!p!] CAP: caps are not available" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp385 28 "%0[0x%10!p!] CAP: invalid arg" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp404 29 "%0[0x%10!p!] CAP: frame rate is higher than supported(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
uiCapsFps, ItemLong -- 11
}
#typev qveCaps_cpp379 27 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp104 13 "%0[0x%10!p!] CAP: Invalid Mean Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveCaps_cpp88 12 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp72 25 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp81 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp59 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2919 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::IsBFrameSupportLimited
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2273 21 "%0[0x%10!p!] CAP: Invalid CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2273 20 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2269 19 "%0[0x%10!p!] CAP: Invalid max CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2269 18 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2265 17 "%0[0x%10!p!] CAP: Invalid max temporal layer count(%11!u!), caps value %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxTemprlLyrs, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2265 16 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2251 15 "%0[0x%10!p!] CAP: Invalid Peak Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2251 14 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2243 11 "%0[0x%10!p!] CAP: Invalid width/Height(%11!u!,%12!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiWidth, ItemLong -- 11
uiHeight, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2243 10 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp1592 32 "%0[0x%10!p!] CAP: Max supported encoding level %11!d!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::setLevelH264
{
this, ItemPtr -- 10
*pEncLevel, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp1592 31 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::setLevelH264
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp1697 32 "%0[0x%10!p!] CAP: Max supported encoding level %11!d!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::setLevelHEVC
{
this, ItemPtr -- 10
*pEncLevel, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp1697 31 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::setLevelHEVC
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCore_cpp498 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::Initialize
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCore_cpp2585 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::QueryCaps
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
#typev qveMftCore_cpp2585 35 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::QueryCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp72 25 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp81 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp59 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2919 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::IsBFrameSupportLimited
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2273 21 "%0[0x%10!p!] CAP: Invalid CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2273 20 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2269 19 "%0[0x%10!p!] CAP: Invalid max CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2269 18 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2265 17 "%0[0x%10!p!] CAP: Invalid max temporal layer count(%11!u!), caps value %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxTemprlLyrs, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2265 16 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2251 15 "%0[0x%10!p!] CAP: Invalid Peak Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2251 14 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2243 11 "%0[0x%10!p!] CAP: Invalid width/Height(%11!u!,%12!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiWidth, ItemLong -- 11
uiHeight, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2243 10 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp1592 32 "%0[0x%10!p!] CAP: Max supported encoding level %11!d!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::setLevelH264
{
this, ItemPtr -- 10
*pEncLevel, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp1592 31 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::setLevelH264
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp1697 32 "%0[0x%10!p!] CAP: Max supported encoding level %11!d!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::setLevelHEVC
{
this, ItemPtr -- 10
*pEncLevel, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp1697 31 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::setLevelHEVC
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp1406 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::CalculateMaxFPSRange
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp3785 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::HandleCaptureFrameRate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp2987 25 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::UpdateDefaultBFrameCount
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp642 67 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp641 66 "%0[0x%10!p!] CAP: Default RCMode = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nDefaultMode, ItemLong -- 11
}
#typev qveCaps_cpp639 65 "%0[0x%10!p!] CAP: RCMode[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncCaps.EncRCModeInfo.nSupportedModes[index], ItemLong -- 12
}
#typev qveCaps_cpp636 64 "%0[0x%10!p!] CAP: Number of supported RC Modes = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nCount, ItemLong -- 11
}
#typev qveCaps_cpp633 63 "%0[0x%10!p!] CAP: format[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncInputFormats[index], ItemLong -- 12
}
#typev qveCaps_cpp630 62 "%0[0x%10!p!] CAP: Number of Supported input formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncInputFormatCount, ItemLong -- 11
}
#typev qveCaps_cpp627 61 "%0[0x%10!p!] CAP: format[%11!u!] = %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
&(m_Caps.EncGUIDs[index]), ItemGuid -- 12
}
#typev qveCaps_cpp624 60 "%0[0x%10!p!] CAP: Number of Supported output formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncGUIDCount, ItemLong -- 11
}
#typev qveCaps_cpp623 59 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp622 58 "%0[0x%10!p!] CAP: SupportsNv12UBWC =       %11!10u!| Max MBps with B-frames =  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsNv12Compression, ItemLong -- 11
m_Caps.EncCaps.nEncMaxMBpsSupportedWithBFrame, ItemLong -- 12
}
#typev qveCaps_cpp621 57 "%0[0x%10!p!] CAP: MinScaleY =            0x%11!10X!| MaxScaleY =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleY, ItemLong -- 11
m_Caps.EncCaps.maxScaleY, ItemLong -- 12
}
#typev qveCaps_cpp620 56 "%0[0x%10!p!] CAP: MinScaleX =            0x%11!10X!| MaxScaleX =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleX, ItemLong -- 11
m_Caps.EncCaps.maxScaleX, ItemLong -- 12
}
#typev qveCaps_cpp619 55 "%0[0x%10!p!] CAP: SupportsRotation =       %11!10u!| SupportsMirror =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsRotation, ItemLong -- 11
m_Caps.EncCaps.supportsMirror, ItemLong -- 12
}
#typev qveCaps_cpp618 54 "%0[0x%10!p!] CAP: SupportsScaling =        %11!10u!| SupportsCropping =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsScaling, ItemLong -- 11
m_Caps.EncCaps.supportsCropping, ItemLong -- 12
}
#typev qveCaps_cpp617 53 "%0[0x%10!p!] CAP: Min QP =                 %11!10u!| Max QP =                  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinQP, ItemLong -- 11
m_Caps.EncCaps.nEncMaxQP, ItemLong -- 12
}
#typev qveCaps_cpp616 52 "%0[0x%10!p!] CAP: SliceControlMode Min =   %11!10u!| SliceControlMode Max =    %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultSliceControlMode_Min, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultSliceControlMode_Max, ItemLong -- 12
}
#typev qveCaps_cpp615 51 "%0[0x%10!p!] CAP: Default B-frame count =  %11!10u!| Max Ref frame count =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxRefFrameCount, ItemLong -- 12
}
#typev qveCaps_cpp614 50 "%0[0x%10!p!] CAP: Low Latency Mode =       %11!10u!| Cabac Support =           %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncLowLatencyMode, ItemLong -- 11
m_Caps.EncCaps.nEncCABACSupport, ItemLong -- 12
}
#typev qveCaps_cpp613 49 "%0[0x%10!p!] CAP: Default Mean Bitrate =   %11!10u!| Default Max Bitrate =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultMeanBitRate, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultMaxBitRate, ItemLong -- 12
}
#typev qveCaps_cpp612 48 "%0[0x%10!p!] CAP: Max Peak Bitrate =       %11!10u!| Max Hier P-layer =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxPeakMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveCaps_cpp611 47 "%0[0x%10!p!] CAP: Max Profile =            %11!10u!| Max Level =               %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxProfile, ItemLong -- 11
m_Caps.EncCaps.nEncMaxLevel, ItemLong -- 12
}
#typev qveCaps_cpp610 46 "%0[0x%10!p!] CAP: Max B-frame Count =      %11!10u!| Max Num LTR =             %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumLTR, ItemLong -- 12
}
#typev qveCaps_cpp609 45 "%0[0x%10!p!] CAP: Max Mean Bitrate (bps) = %11!10u!| Max MacroBlocks Per Sec = %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMeanMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMbsPerSecond, ItemLong -- 12
}
#typev qveCaps_cpp608 44 "%0[0x%10!p!] CAP: Max MacroBlocks =        %11!10u!| Min Dim =                 %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMB, ItemLong -- 11
m_Caps.EncCaps.nEncMinDimension, ItemLong -- 12
}
#typev qveCaps_cpp607 43 "%0[0x%10!p!] CAP: Min height (px) =        %11!10u!| Min Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMinWidth, ItemLong -- 12
}
#typev qveCaps_cpp606 42 "%0[0x%10!p!] CAP: Max height (px) =        %11!10u!| Max Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMaxWidth, ItemLong -- 12
}
#typev qveCaps_cpp605 41 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp604 40 "%0[0x%10!p!] CAP: =========================Encoder Capabilities==============================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp603 39 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp599 38 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp598 37 "%0[0x%10!p!] CAP: caps are NOT available" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp597 36 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp531 34 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp522 33 "%0[0x%10!p!] CAP: caps are not available" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp385 28 "%0[0x%10!p!] CAP: invalid arg" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp404 29 "%0[0x%10!p!] CAP: frame rate is higher than supported(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
uiCapsFps, ItemLong -- 11
}
#typev qveCaps_cpp379 27 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp104 13 "%0[0x%10!p!] CAP: Invalid Mean Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveCaps_cpp88 12 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCore_cpp498 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::Initialize
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCore_cpp2585 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::QueryCaps
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
#typev qveMftCore_cpp2585 35 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::QueryCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp1406 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::CalculateMaxFPSRange
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp3785 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::HandleCaptureFrameRate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp2987 25 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::UpdateDefaultBFrameCount
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp642 67 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp641 66 "%0[0x%10!p!] CAP: Default RCMode = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nDefaultMode, ItemLong -- 11
}
#typev qveCaps_cpp639 65 "%0[0x%10!p!] CAP: RCMode[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncCaps.EncRCModeInfo.nSupportedModes[index], ItemLong -- 12
}
#typev qveCaps_cpp636 64 "%0[0x%10!p!] CAP: Number of supported RC Modes = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nCount, ItemLong -- 11
}
#typev qveCaps_cpp633 63 "%0[0x%10!p!] CAP: format[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncInputFormats[index], ItemLong -- 12
}
#typev qveCaps_cpp630 62 "%0[0x%10!p!] CAP: Number of Supported input formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncInputFormatCount, ItemLong -- 11
}
#typev qveCaps_cpp627 61 "%0[0x%10!p!] CAP: format[%11!u!] = %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
&(m_Caps.EncGUIDs[index]), ItemGuid -- 12
}
#typev qveCaps_cpp624 60 "%0[0x%10!p!] CAP: Number of Supported output formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncGUIDCount, ItemLong -- 11
}
#typev qveCaps_cpp623 59 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp622 58 "%0[0x%10!p!] CAP: SupportsNv12UBWC =       %11!10u!| Max MBps with B-frames =  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsNv12Compression, ItemLong -- 11
m_Caps.EncCaps.nEncMaxMBpsSupportedWithBFrame, ItemLong -- 12
}
#typev qveCaps_cpp621 57 "%0[0x%10!p!] CAP: MinScaleY =            0x%11!10X!| MaxScaleY =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleY, ItemLong -- 11
m_Caps.EncCaps.maxScaleY, ItemLong -- 12
}
#typev qveCaps_cpp620 56 "%0[0x%10!p!] CAP: MinScaleX =            0x%11!10X!| MaxScaleX =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleX, ItemLong -- 11
m_Caps.EncCaps.maxScaleX, ItemLong -- 12
}
#typev qveCaps_cpp619 55 "%0[0x%10!p!] CAP: SupportsRotation =       %11!10u!| SupportsMirror =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsRotation, ItemLong -- 11
m_Caps.EncCaps.supportsMirror, ItemLong -- 12
}
#typev qveCaps_cpp618 54 "%0[0x%10!p!] CAP: SupportsScaling =        %11!10u!| SupportsCropping =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsScaling, ItemLong -- 11
m_Caps.EncCaps.supportsCropping, ItemLong -- 12
}
#typev qveCaps_cpp617 53 "%0[0x%10!p!] CAP: Min QP =                 %11!10u!| Max QP =                  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinQP, ItemLong -- 11
m_Caps.EncCaps.nEncMaxQP, ItemLong -- 12
}
#typev qveCaps_cpp616 52 "%0[0x%10!p!] CAP: SliceControlMode Min =   %11!10u!| SliceControlMode Max =    %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultSliceControlMode_Min, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultSliceControlMode_Max, ItemLong -- 12
}
#typev qveCaps_cpp615 51 "%0[0x%10!p!] CAP: Default B-frame count =  %11!10u!| Max Ref frame count =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxRefFrameCount, ItemLong -- 12
}
#typev qveCaps_cpp614 50 "%0[0x%10!p!] CAP: Low Latency Mode =       %11!10u!| Cabac Support =           %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncLowLatencyMode, ItemLong -- 11
m_Caps.EncCaps.nEncCABACSupport, ItemLong -- 12
}
#typev qveCaps_cpp613 49 "%0[0x%10!p!] CAP: Default Mean Bitrate =   %11!10u!| Default Max Bitrate =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultMeanBitRate, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultMaxBitRate, ItemLong -- 12
}
#typev qveCaps_cpp612 48 "%0[0x%10!p!] CAP: Max Peak Bitrate =       %11!10u!| Max Hier P-layer =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxPeakMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveCaps_cpp611 47 "%0[0x%10!p!] CAP: Max Profile =            %11!10u!| Max Level =               %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxProfile, ItemLong -- 11
m_Caps.EncCaps.nEncMaxLevel, ItemLong -- 12
}
#typev qveCaps_cpp610 46 "%0[0x%10!p!] CAP: Max B-frame Count =      %11!10u!| Max Num LTR =             %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumLTR, ItemLong -- 12
}
#typev qveCaps_cpp609 45 "%0[0x%10!p!] CAP: Max Mean Bitrate (bps) = %11!10u!| Max MacroBlocks Per Sec = %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMeanMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMbsPerSecond, ItemLong -- 12
}
#typev qveCaps_cpp608 44 "%0[0x%10!p!] CAP: Max MacroBlocks =        %11!10u!| Min Dim =                 %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMB, ItemLong -- 11
m_Caps.EncCaps.nEncMinDimension, ItemLong -- 12
}
#typev qveCaps_cpp607 43 "%0[0x%10!p!] CAP: Min height (px) =        %11!10u!| Min Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMinWidth, ItemLong -- 12
}
#typev qveCaps_cpp606 42 "%0[0x%10!p!] CAP: Max height (px) =        %11!10u!| Max Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMaxWidth, ItemLong -- 12
}
#typev qveCaps_cpp605 41 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp604 40 "%0[0x%10!p!] CAP: =========================Encoder Capabilities==============================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp603 39 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp599 38 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp598 37 "%0[0x%10!p!] CAP: caps are NOT available" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp597 36 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp531 34 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp522 33 "%0[0x%10!p!] CAP: caps are not available" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp385 28 "%0[0x%10!p!] CAP: invalid arg" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp404 29 "%0[0x%10!p!] CAP: frame rate is higher than supported(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
uiCapsFps, ItemLong -- 11
}
#typev qveCaps_cpp379 27 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp104 13 "%0[0x%10!p!] CAP: Invalid Mean Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveCaps_cpp88 12 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp72 25 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp81 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp59 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2919 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::IsBFrameSupportLimited
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2273 21 "%0[0x%10!p!] CAP: Invalid CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2273 20 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2269 19 "%0[0x%10!p!] CAP: Invalid max CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2269 18 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2265 17 "%0[0x%10!p!] CAP: Invalid max temporal layer count(%11!u!), caps value %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxTemprlLyrs, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2265 16 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2251 15 "%0[0x%10!p!] CAP: Invalid Peak Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2251 14 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2243 11 "%0[0x%10!p!] CAP: Invalid width/Height(%11!u!,%12!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiWidth, ItemLong -- 11
uiHeight, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2243 10 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp1592 32 "%0[0x%10!p!] CAP: Max supported encoding level %11!d!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::setLevelH264
{
this, ItemPtr -- 10
*pEncLevel, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp1592 31 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::setLevelH264
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp1697 32 "%0[0x%10!p!] CAP: Max supported encoding level %11!d!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::setLevelHEVC
{
this, ItemPtr -- 10
*pEncLevel, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp1697 31 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::setLevelHEVC
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCore_cpp498 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::Initialize
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCore_cpp2585 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::QueryCaps
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
#typev qveMftCore_cpp2585 35 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::QueryCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp72 25 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp81 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp59 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2919 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::IsBFrameSupportLimited
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2273 21 "%0[0x%10!p!] CAP: Invalid CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2273 20 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2269 19 "%0[0x%10!p!] CAP: Invalid max CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2269 18 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2265 17 "%0[0x%10!p!] CAP: Invalid max temporal layer count(%11!u!), caps value %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxTemprlLyrs, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2265 16 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2251 15 "%0[0x%10!p!] CAP: Invalid Peak Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2251 14 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2243 11 "%0[0x%10!p!] CAP: Invalid width/Height(%11!u!,%12!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiWidth, ItemLong -- 11
uiHeight, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2243 10 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp1592 32 "%0[0x%10!p!] CAP: Max supported encoding level %11!d!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::setLevelH264
{
this, ItemPtr -- 10
*pEncLevel, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp1592 31 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::setLevelH264
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp1697 32 "%0[0x%10!p!] CAP: Max supported encoding level %11!d!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQCVideoEncoderMft::setLevelHEVC
{
this, ItemPtr -- 10
*pEncLevel, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp1697 31 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::setLevelHEVC
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp1406 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::CalculateMaxFPSRange
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp3785 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::HandleCaptureFrameRate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp2987 25 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::UpdateDefaultBFrameCount
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp642 67 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp641 66 "%0[0x%10!p!] CAP: Default RCMode = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nDefaultMode, ItemLong -- 11
}
#typev qveCaps_cpp639 65 "%0[0x%10!p!] CAP: RCMode[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncCaps.EncRCModeInfo.nSupportedModes[index], ItemLong -- 12
}
#typev qveCaps_cpp636 64 "%0[0x%10!p!] CAP: Number of supported RC Modes = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nCount, ItemLong -- 11
}
#typev qveCaps_cpp633 63 "%0[0x%10!p!] CAP: format[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncInputFormats[index], ItemLong -- 12
}
#typev qveCaps_cpp630 62 "%0[0x%10!p!] CAP: Number of Supported input formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncInputFormatCount, ItemLong -- 11
}
#typev qveCaps_cpp627 61 "%0[0x%10!p!] CAP: format[%11!u!] = %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
&(m_Caps.EncGUIDs[index]), ItemGuid -- 12
}
#typev qveCaps_cpp624 60 "%0[0x%10!p!] CAP: Number of Supported output formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncGUIDCount, ItemLong -- 11
}
#typev qveCaps_cpp623 59 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp622 58 "%0[0x%10!p!] CAP: SupportsNv12UBWC =       %11!10u!| Max MBps with B-frames =  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsNv12Compression, ItemLong -- 11
m_Caps.EncCaps.nEncMaxMBpsSupportedWithBFrame, ItemLong -- 12
}
#typev qveCaps_cpp621 57 "%0[0x%10!p!] CAP: MinScaleY =            0x%11!10X!| MaxScaleY =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleY, ItemLong -- 11
m_Caps.EncCaps.maxScaleY, ItemLong -- 12
}
#typev qveCaps_cpp620 56 "%0[0x%10!p!] CAP: MinScaleX =            0x%11!10X!| MaxScaleX =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleX, ItemLong -- 11
m_Caps.EncCaps.maxScaleX, ItemLong -- 12
}
#typev qveCaps_cpp619 55 "%0[0x%10!p!] CAP: SupportsRotation =       %11!10u!| SupportsMirror =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsRotation, ItemLong -- 11
m_Caps.EncCaps.supportsMirror, ItemLong -- 12
}
#typev qveCaps_cpp618 54 "%0[0x%10!p!] CAP: SupportsScaling =        %11!10u!| SupportsCropping =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsScaling, ItemLong -- 11
m_Caps.EncCaps.supportsCropping, ItemLong -- 12
}
#typev qveCaps_cpp617 53 "%0[0x%10!p!] CAP: Min QP =                 %11!10u!| Max QP =                  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinQP, ItemLong -- 11
m_Caps.EncCaps.nEncMaxQP, ItemLong -- 12
}
#typev qveCaps_cpp616 52 "%0[0x%10!p!] CAP: SliceControlMode Min =   %11!10u!| SliceControlMode Max =    %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultSliceControlMode_Min, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultSliceControlMode_Max, ItemLong -- 12
}
#typev qveCaps_cpp615 51 "%0[0x%10!p!] CAP: Default B-frame count =  %11!10u!| Max Ref frame count =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxRefFrameCount, ItemLong -- 12
}
#typev qveCaps_cpp614 50 "%0[0x%10!p!] CAP: Low Latency Mode =       %11!10u!| Cabac Support =           %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncLowLatencyMode, ItemLong -- 11
m_Caps.EncCaps.nEncCABACSupport, ItemLong -- 12
}
#typev qveCaps_cpp613 49 "%0[0x%10!p!] CAP: Default Mean Bitrate =   %11!10u!| Default Max Bitrate =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultMeanBitRate, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultMaxBitRate, ItemLong -- 12
}
#typev qveCaps_cpp612 48 "%0[0x%10!p!] CAP: Max Peak Bitrate =       %11!10u!| Max Hier P-layer =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxPeakMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveCaps_cpp611 47 "%0[0x%10!p!] CAP: Max Profile =            %11!10u!| Max Level =               %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxProfile, ItemLong -- 11
m_Caps.EncCaps.nEncMaxLevel, ItemLong -- 12
}
#typev qveCaps_cpp610 46 "%0[0x%10!p!] CAP: Max B-frame Count =      %11!10u!| Max Num LTR =             %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumLTR, ItemLong -- 12
}
#typev qveCaps_cpp609 45 "%0[0x%10!p!] CAP: Max Mean Bitrate (bps) = %11!10u!| Max MacroBlocks Per Sec = %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMeanMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMbsPerSecond, ItemLong -- 12
}
#typev qveCaps_cpp608 44 "%0[0x%10!p!] CAP: Max MacroBlocks =        %11!10u!| Min Dim =                 %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMB, ItemLong -- 11
m_Caps.EncCaps.nEncMinDimension, ItemLong -- 12
}
#typev qveCaps_cpp607 43 "%0[0x%10!p!] CAP: Min height (px) =        %11!10u!| Min Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMinWidth, ItemLong -- 12
}
#typev qveCaps_cpp606 42 "%0[0x%10!p!] CAP: Max height (px) =        %11!10u!| Max Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMaxWidth, ItemLong -- 12
}
#typev qveCaps_cpp605 41 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp604 40 "%0[0x%10!p!] CAP: =========================Encoder Capabilities==============================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp603 39 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp599 38 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp598 37 "%0[0x%10!p!] CAP: caps are NOT available" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp597 36 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp531 34 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp522 33 "%0[0x%10!p!] CAP: caps are not available" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp385 28 "%0[0x%10!p!] CAP: invalid arg" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp404 29 "%0[0x%10!p!] CAP: frame rate is higher than supported(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
uiCapsFps, ItemLong -- 11
}
#typev qveCaps_cpp379 27 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencarm64xmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp104 13 "%0[0x%10!p!] CAP: Invalid Mean Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveCaps_cpp88 12 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCore_cpp498 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::Initialize
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCore_cpp2585 35 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::QueryCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp72 25 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp81 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp59 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2919 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::IsBFrameSupportLimited
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2273 21 "%0[0x%10!p!] CAP: Invalid CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2273 20 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2269 19 "%0[0x%10!p!] CAP: Invalid max CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2269 18 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2265 17 "%0[0x%10!p!] CAP: Invalid max temporal layer count(%11!u!), caps value %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxTemprlLyrs, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2265 16 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2251 15 "%0[0x%10!p!] CAP: Invalid Peak Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2251 14 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2243 11 "%0[0x%10!p!] CAP: Invalid width/Height(%11!u!,%12!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiWidth, ItemLong -- 11
uiHeight, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2243 10 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp599 38 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp598 37 "%0[0x%10!p!] CAP: caps are NOT available" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp597 36 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp642 67 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp641 66 "%0[0x%10!p!] CAP: Default RCMode = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nDefaultMode, ItemLong -- 11
}
#typev qveCaps_cpp639 65 "%0[0x%10!p!] CAP: RCMode[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncCaps.EncRCModeInfo.nSupportedModes[index], ItemLong -- 12
}
#typev qveCaps_cpp636 64 "%0[0x%10!p!] CAP: Number of supported RC Modes = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nCount, ItemLong -- 11
}
#typev qveCaps_cpp633 63 "%0[0x%10!p!] CAP: format[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncInputFormats[index], ItemLong -- 12
}
#typev qveCaps_cpp630 62 "%0[0x%10!p!] CAP: Number of Supported input formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncInputFormatCount, ItemLong -- 11
}
#typev qveCaps_cpp627 61 "%0[0x%10!p!] CAP: format[%11!u!] = %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
&(m_Caps.EncGUIDs[index]), ItemGuid -- 12
}
#typev qveCaps_cpp624 60 "%0[0x%10!p!] CAP: Number of Supported output formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncGUIDCount, ItemLong -- 11
}
#typev qveCaps_cpp623 59 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp622 58 "%0[0x%10!p!] CAP: SupportsNv12UBWC =       %11!10u!| Max MBps with B-frames =  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsNv12Compression, ItemLong -- 11
m_Caps.EncCaps.nEncMaxMBpsSupportedWithBFrame, ItemLong -- 12
}
#typev qveCaps_cpp621 57 "%0[0x%10!p!] CAP: MinScaleY =            0x%11!10X!| MaxScaleY =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleY, ItemLong -- 11
m_Caps.EncCaps.maxScaleY, ItemLong -- 12
}
#typev qveCaps_cpp620 56 "%0[0x%10!p!] CAP: MinScaleX =            0x%11!10X!| MaxScaleX =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleX, ItemLong -- 11
m_Caps.EncCaps.maxScaleX, ItemLong -- 12
}
#typev qveCaps_cpp619 55 "%0[0x%10!p!] CAP: SupportsRotation =       %11!10u!| SupportsMirror =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsRotation, ItemLong -- 11
m_Caps.EncCaps.supportsMirror, ItemLong -- 12
}
#typev qveCaps_cpp618 54 "%0[0x%10!p!] CAP: SupportsScaling =        %11!10u!| SupportsCropping =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsScaling, ItemLong -- 11
m_Caps.EncCaps.supportsCropping, ItemLong -- 12
}
#typev qveCaps_cpp617 53 "%0[0x%10!p!] CAP: Min QP =                 %11!10u!| Max QP =                  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinQP, ItemLong -- 11
m_Caps.EncCaps.nEncMaxQP, ItemLong -- 12
}
#typev qveCaps_cpp616 52 "%0[0x%10!p!] CAP: SliceControlMode Min =   %11!10u!| SliceControlMode Max =    %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultSliceControlMode_Min, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultSliceControlMode_Max, ItemLong -- 12
}
#typev qveCaps_cpp615 51 "%0[0x%10!p!] CAP: Default B-frame count =  %11!10u!| Max Ref frame count =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxRefFrameCount, ItemLong -- 12
}
#typev qveCaps_cpp614 50 "%0[0x%10!p!] CAP: Low Latency Mode =       %11!10u!| Cabac Support =           %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncLowLatencyMode, ItemLong -- 11
m_Caps.EncCaps.nEncCABACSupport, ItemLong -- 12
}
#typev qveCaps_cpp613 49 "%0[0x%10!p!] CAP: Default Mean Bitrate =   %11!10u!| Default Max Bitrate =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultMeanBitRate, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultMaxBitRate, ItemLong -- 12
}
#typev qveCaps_cpp612 48 "%0[0x%10!p!] CAP: Max Peak Bitrate =       %11!10u!| Max Hier P-layer =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxPeakMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveCaps_cpp611 47 "%0[0x%10!p!] CAP: Max Profile =            %11!10u!| Max Level =               %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxProfile, ItemLong -- 11
m_Caps.EncCaps.nEncMaxLevel, ItemLong -- 12
}
#typev qveCaps_cpp610 46 "%0[0x%10!p!] CAP: Max B-frame Count =      %11!10u!| Max Num LTR =             %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumLTR, ItemLong -- 12
}
#typev qveCaps_cpp609 45 "%0[0x%10!p!] CAP: Max Mean Bitrate (bps) = %11!10u!| Max MacroBlocks Per Sec = %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMeanMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMbsPerSecond, ItemLong -- 12
}
#typev qveCaps_cpp608 44 "%0[0x%10!p!] CAP: Max MacroBlocks =        %11!10u!| Min Dim =                 %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMB, ItemLong -- 11
m_Caps.EncCaps.nEncMinDimension, ItemLong -- 12
}
#typev qveCaps_cpp607 43 "%0[0x%10!p!] CAP: Min height (px) =        %11!10u!| Min Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMinWidth, ItemLong -- 12
}
#typev qveCaps_cpp606 42 "%0[0x%10!p!] CAP: Max height (px) =        %11!10u!| Max Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMaxWidth, ItemLong -- 12
}
#typev qveCaps_cpp605 41 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp604 40 "%0[0x%10!p!] CAP: =========================Encoder Capabilities==============================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp603 39 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp531 34 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp522 33 "%0[0x%10!p!] CAP: caps are not available" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp453 32 "%0[0x%10!p!] CAP: Max supported encoding level %11!d!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::GetMaxLevel
{
this, ItemPtr -- 10
*pEncLevel, ItemLong -- 11
}
#typev qveCaps_cpp444 31 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetMaxLevel
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp435 30 "%0[0x%10!p!] CAP: invalid Input pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetMaxLevel
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp352 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQVECaps::SetState
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp385 28 "%0[0x%10!p!] CAP: invalid arg" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp404 29 "%0[0x%10!p!] CAP: frame rate is higher than supported(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
uiCapsFps, ItemLong -- 11
}
#typev qveCaps_cpp379 27 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp104 13 "%0[0x%10!p!] CAP: Invalid Mean Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveCaps_cpp88 12 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCore_cpp498 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::Initialize
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCore_cpp2585 35 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::QueryCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp72 25 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp81 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp59 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2919 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::IsBFrameSupportLimited
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2273 21 "%0[0x%10!p!] CAP: Invalid CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2273 20 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2269 19 "%0[0x%10!p!] CAP: Invalid max CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2269 18 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2265 17 "%0[0x%10!p!] CAP: Invalid max temporal layer count(%11!u!), caps value %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxTemprlLyrs, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2265 16 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2251 15 "%0[0x%10!p!] CAP: Invalid Peak Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2251 14 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2243 11 "%0[0x%10!p!] CAP: Invalid width/Height(%11!u!,%12!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiWidth, ItemLong -- 11
uiHeight, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2243 10 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp599 38 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp598 37 "%0[0x%10!p!] CAP: caps are NOT available" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp597 36 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp642 67 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp641 66 "%0[0x%10!p!] CAP: Default RCMode = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nDefaultMode, ItemLong -- 11
}
#typev qveCaps_cpp639 65 "%0[0x%10!p!] CAP: RCMode[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncCaps.EncRCModeInfo.nSupportedModes[index], ItemLong -- 12
}
#typev qveCaps_cpp636 64 "%0[0x%10!p!] CAP: Number of supported RC Modes = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nCount, ItemLong -- 11
}
#typev qveCaps_cpp633 63 "%0[0x%10!p!] CAP: format[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncInputFormats[index], ItemLong -- 12
}
#typev qveCaps_cpp630 62 "%0[0x%10!p!] CAP: Number of Supported input formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncInputFormatCount, ItemLong -- 11
}
#typev qveCaps_cpp627 61 "%0[0x%10!p!] CAP: format[%11!u!] = %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
&(m_Caps.EncGUIDs[index]), ItemGuid -- 12
}
#typev qveCaps_cpp624 60 "%0[0x%10!p!] CAP: Number of Supported output formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncGUIDCount, ItemLong -- 11
}
#typev qveCaps_cpp623 59 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp622 58 "%0[0x%10!p!] CAP: SupportsNv12UBWC =       %11!10u!| Max MBps with B-frames =  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsNv12Compression, ItemLong -- 11
m_Caps.EncCaps.nEncMaxMBpsSupportedWithBFrame, ItemLong -- 12
}
#typev qveCaps_cpp621 57 "%0[0x%10!p!] CAP: MinScaleY =            0x%11!10X!| MaxScaleY =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleY, ItemLong -- 11
m_Caps.EncCaps.maxScaleY, ItemLong -- 12
}
#typev qveCaps_cpp620 56 "%0[0x%10!p!] CAP: MinScaleX =            0x%11!10X!| MaxScaleX =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleX, ItemLong -- 11
m_Caps.EncCaps.maxScaleX, ItemLong -- 12
}
#typev qveCaps_cpp619 55 "%0[0x%10!p!] CAP: SupportsRotation =       %11!10u!| SupportsMirror =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsRotation, ItemLong -- 11
m_Caps.EncCaps.supportsMirror, ItemLong -- 12
}
#typev qveCaps_cpp618 54 "%0[0x%10!p!] CAP: SupportsScaling =        %11!10u!| SupportsCropping =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsScaling, ItemLong -- 11
m_Caps.EncCaps.supportsCropping, ItemLong -- 12
}
#typev qveCaps_cpp617 53 "%0[0x%10!p!] CAP: Min QP =                 %11!10u!| Max QP =                  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinQP, ItemLong -- 11
m_Caps.EncCaps.nEncMaxQP, ItemLong -- 12
}
#typev qveCaps_cpp616 52 "%0[0x%10!p!] CAP: SliceControlMode Min =   %11!10u!| SliceControlMode Max =    %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultSliceControlMode_Min, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultSliceControlMode_Max, ItemLong -- 12
}
#typev qveCaps_cpp615 51 "%0[0x%10!p!] CAP: Default B-frame count =  %11!10u!| Max Ref frame count =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxRefFrameCount, ItemLong -- 12
}
#typev qveCaps_cpp614 50 "%0[0x%10!p!] CAP: Low Latency Mode =       %11!10u!| Cabac Support =           %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncLowLatencyMode, ItemLong -- 11
m_Caps.EncCaps.nEncCABACSupport, ItemLong -- 12
}
#typev qveCaps_cpp613 49 "%0[0x%10!p!] CAP: Default Mean Bitrate =   %11!10u!| Default Max Bitrate =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultMeanBitRate, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultMaxBitRate, ItemLong -- 12
}
#typev qveCaps_cpp612 48 "%0[0x%10!p!] CAP: Max Peak Bitrate =       %11!10u!| Max Hier P-layer =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxPeakMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveCaps_cpp611 47 "%0[0x%10!p!] CAP: Max Profile =            %11!10u!| Max Level =               %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxProfile, ItemLong -- 11
m_Caps.EncCaps.nEncMaxLevel, ItemLong -- 12
}
#typev qveCaps_cpp610 46 "%0[0x%10!p!] CAP: Max B-frame Count =      %11!10u!| Max Num LTR =             %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumLTR, ItemLong -- 12
}
#typev qveCaps_cpp609 45 "%0[0x%10!p!] CAP: Max Mean Bitrate (bps) = %11!10u!| Max MacroBlocks Per Sec = %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMeanMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMbsPerSecond, ItemLong -- 12
}
#typev qveCaps_cpp608 44 "%0[0x%10!p!] CAP: Max MacroBlocks =        %11!10u!| Min Dim =                 %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMB, ItemLong -- 11
m_Caps.EncCaps.nEncMinDimension, ItemLong -- 12
}
#typev qveCaps_cpp607 43 "%0[0x%10!p!] CAP: Min height (px) =        %11!10u!| Min Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMinWidth, ItemLong -- 12
}
#typev qveCaps_cpp606 42 "%0[0x%10!p!] CAP: Max height (px) =        %11!10u!| Max Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMaxWidth, ItemLong -- 12
}
#typev qveCaps_cpp605 41 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp604 40 "%0[0x%10!p!] CAP: =========================Encoder Capabilities==============================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp603 39 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp531 34 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp522 33 "%0[0x%10!p!] CAP: caps are not available" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp453 32 "%0[0x%10!p!] CAP: Max supported encoding level %11!d!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::GetMaxLevel
{
this, ItemPtr -- 10
*pEncLevel, ItemLong -- 11
}
#typev qveCaps_cpp444 31 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetMaxLevel
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp435 30 "%0[0x%10!p!] CAP: invalid Input pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetMaxLevel
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp352 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQVECaps::SetState
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp385 28 "%0[0x%10!p!] CAP: invalid arg" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp404 29 "%0[0x%10!p!] CAP: frame rate is higher than supported(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
uiCapsFps, ItemLong -- 11
}
#typev qveCaps_cpp379 27 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencmfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp104 13 "%0[0x%10!p!] CAP: Invalid Mean Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveCaps_cpp88 12 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCore_cpp498 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::Initialize
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCore_cpp2585 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::QueryCaps
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
#typev qveMftCore_cpp2585 35 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::QueryCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp81 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp72 25 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp59 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2919 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::IsBFrameSupportLimited
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2273 21 "%0[0x%10!p!] CAP: Invalid CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2273 20 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2269 19 "%0[0x%10!p!] CAP: Invalid max CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2269 18 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2265 17 "%0[0x%10!p!] CAP: Invalid max temporal layer count(%11!u!), caps value %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxTemprlLyrs, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2265 16 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2251 15 "%0[0x%10!p!] CAP: Invalid Peak Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2251 14 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2243 11 "%0[0x%10!p!] CAP: Invalid width/Height(%11!u!,%12!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiWidth, ItemLong -- 11
uiHeight, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2243 10 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp1406 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::CalculateMaxFPSRange
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp3785 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::HandleCaptureFrameRate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp2987 25 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::UpdateDefaultBFrameCount
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp642 67 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp641 66 "%0[0x%10!p!] CAP: Default RCMode = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nDefaultMode, ItemLong -- 11
}
#typev qveCaps_cpp639 65 "%0[0x%10!p!] CAP: RCMode[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncCaps.EncRCModeInfo.nSupportedModes[index], ItemLong -- 12
}
#typev qveCaps_cpp636 64 "%0[0x%10!p!] CAP: Number of supported RC Modes = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nCount, ItemLong -- 11
}
#typev qveCaps_cpp633 63 "%0[0x%10!p!] CAP: format[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncInputFormats[index], ItemLong -- 12
}
#typev qveCaps_cpp630 62 "%0[0x%10!p!] CAP: Number of Supported input formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncInputFormatCount, ItemLong -- 11
}
#typev qveCaps_cpp627 61 "%0[0x%10!p!] CAP: format[%11!u!] = %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
&(m_Caps.EncGUIDs[index]), ItemGuid -- 12
}
#typev qveCaps_cpp624 60 "%0[0x%10!p!] CAP: Number of Supported output formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncGUIDCount, ItemLong -- 11
}
#typev qveCaps_cpp623 59 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp622 58 "%0[0x%10!p!] CAP: SupportsNv12UBWC =       %11!10u!| Max MBps with B-frames =  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsNv12Compression, ItemLong -- 11
m_Caps.EncCaps.nEncMaxMBpsSupportedWithBFrame, ItemLong -- 12
}
#typev qveCaps_cpp621 57 "%0[0x%10!p!] CAP: MinScaleY =            0x%11!10X!| MaxScaleY =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleY, ItemLong -- 11
m_Caps.EncCaps.maxScaleY, ItemLong -- 12
}
#typev qveCaps_cpp620 56 "%0[0x%10!p!] CAP: MinScaleX =            0x%11!10X!| MaxScaleX =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleX, ItemLong -- 11
m_Caps.EncCaps.maxScaleX, ItemLong -- 12
}
#typev qveCaps_cpp619 55 "%0[0x%10!p!] CAP: SupportsRotation =       %11!10u!| SupportsMirror =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsRotation, ItemLong -- 11
m_Caps.EncCaps.supportsMirror, ItemLong -- 12
}
#typev qveCaps_cpp618 54 "%0[0x%10!p!] CAP: SupportsScaling =        %11!10u!| SupportsCropping =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsScaling, ItemLong -- 11
m_Caps.EncCaps.supportsCropping, ItemLong -- 12
}
#typev qveCaps_cpp617 53 "%0[0x%10!p!] CAP: Min QP =                 %11!10u!| Max QP =                  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinQP, ItemLong -- 11
m_Caps.EncCaps.nEncMaxQP, ItemLong -- 12
}
#typev qveCaps_cpp616 52 "%0[0x%10!p!] CAP: SliceControlMode Min =   %11!10u!| SliceControlMode Max =    %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultSliceControlMode_Min, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultSliceControlMode_Max, ItemLong -- 12
}
#typev qveCaps_cpp615 51 "%0[0x%10!p!] CAP: Default B-frame count =  %11!10u!| Max Ref frame count =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxRefFrameCount, ItemLong -- 12
}
#typev qveCaps_cpp614 50 "%0[0x%10!p!] CAP: Low Latency Mode =       %11!10u!| Cabac Support =           %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncLowLatencyMode, ItemLong -- 11
m_Caps.EncCaps.nEncCABACSupport, ItemLong -- 12
}
#typev qveCaps_cpp613 49 "%0[0x%10!p!] CAP: Default Mean Bitrate =   %11!10u!| Default Max Bitrate =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultMeanBitRate, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultMaxBitRate, ItemLong -- 12
}
#typev qveCaps_cpp612 48 "%0[0x%10!p!] CAP: Max Peak Bitrate =       %11!10u!| Max Hier P-layer =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxPeakMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveCaps_cpp611 47 "%0[0x%10!p!] CAP: Max Profile =            %11!10u!| Max Level =               %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxProfile, ItemLong -- 11
m_Caps.EncCaps.nEncMaxLevel, ItemLong -- 12
}
#typev qveCaps_cpp610 46 "%0[0x%10!p!] CAP: Max B-frame Count =      %11!10u!| Max Num LTR =             %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumLTR, ItemLong -- 12
}
#typev qveCaps_cpp609 45 "%0[0x%10!p!] CAP: Max Mean Bitrate (bps) = %11!10u!| Max MacroBlocks Per Sec = %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMeanMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMbsPerSecond, ItemLong -- 12
}
#typev qveCaps_cpp608 44 "%0[0x%10!p!] CAP: Max MacroBlocks =        %11!10u!| Min Dim =                 %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMB, ItemLong -- 11
m_Caps.EncCaps.nEncMinDimension, ItemLong -- 12
}
#typev qveCaps_cpp607 43 "%0[0x%10!p!] CAP: Min height (px) =        %11!10u!| Min Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMinWidth, ItemLong -- 12
}
#typev qveCaps_cpp606 42 "%0[0x%10!p!] CAP: Max height (px) =        %11!10u!| Max Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMaxWidth, ItemLong -- 12
}
#typev qveCaps_cpp605 41 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp604 40 "%0[0x%10!p!] CAP: =========================Encoder Capabilities==============================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp603 39 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp599 38 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp598 37 "%0[0x%10!p!] CAP: caps are NOT available" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp597 36 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp531 34 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp522 33 "%0[0x%10!p!] CAP: caps are not available" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp453 32 "%0[0x%10!p!] CAP: Max supported encoding level %11!d!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::GetMaxLevel
{
this, ItemPtr -- 10
*pEncLevel, ItemLong -- 11
}
#typev qveCaps_cpp444 31 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetMaxLevel
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp435 30 "%0[0x%10!p!] CAP: invalid Input pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetMaxLevel
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp385 28 "%0[0x%10!p!] CAP: invalid arg" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp404 29 "%0[0x%10!p!] CAP: frame rate is higher than supported(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
uiCapsFps, ItemLong -- 11
}
#typev qveCaps_cpp379 27 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfth2647280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp104 13 "%0[0x%10!p!] CAP: Invalid Mean Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveCaps_cpp88 12 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCore_cpp498 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::Initialize
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCore_cpp2585 26 "%0[0x%10!p!] CAP: Caps State transition %11!d! -> %12!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Medium FUNC=CQCVideoEncoderMft::QueryCaps
{
this, ItemPtr -- 10
m_CapsState, ItemLong -- 11
eState, ItemLong -- 12
}
#typev qveMftCore_cpp2585 35 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::QueryCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp81 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp72 25 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp59 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::GetProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2919 69 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::IsBFrameSupportLimited
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2273 21 "%0[0x%10!p!] CAP: Invalid CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2273 20 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2269 19 "%0[0x%10!p!] CAP: Invalid max CTB size (%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxCTBSize, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2269 18 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2265 17 "%0[0x%10!p!] CAP: Invalid max temporal layer count(%11!u!), caps value %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiMaxTemprlLyrs, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2265 16 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2251 15 "%0[0x%10!p!] CAP: Invalid Peak Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveMftCoreIntf_cpp2251 14 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveMftCoreIntf_cpp2243 11 "%0[0x%10!p!] CAP: Invalid width/Height(%11!u!,%12!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
uiWidth, ItemLong -- 11
uiHeight, ItemLong -- 12
}
#typev qveMftCoreIntf_cpp2243 10 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQCVideoEncoderMft::ValidateProperty
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp1406 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::CalculateMaxFPSRange
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp3785 23 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::HandleCaptureFrameRate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveIcodec_cpp2987 25 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVEICODEC::UpdateDefaultBFrameCount
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp642 67 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp641 66 "%0[0x%10!p!] CAP: Default RCMode = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nDefaultMode, ItemLong -- 11
}
#typev qveCaps_cpp639 65 "%0[0x%10!p!] CAP: RCMode[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncCaps.EncRCModeInfo.nSupportedModes[index], ItemLong -- 12
}
#typev qveCaps_cpp636 64 "%0[0x%10!p!] CAP: Number of supported RC Modes = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.EncRCModeInfo.nCount, ItemLong -- 11
}
#typev qveCaps_cpp633 63 "%0[0x%10!p!] CAP: format[%11!u!] = %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
m_Caps.EncInputFormats[index], ItemLong -- 12
}
#typev qveCaps_cpp630 62 "%0[0x%10!p!] CAP: Number of Supported input formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncInputFormatCount, ItemLong -- 11
}
#typev qveCaps_cpp627 61 "%0[0x%10!p!] CAP: format[%11!u!] = %12!s!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
index, ItemLong -- 11
&(m_Caps.EncGUIDs[index]), ItemGuid -- 12
}
#typev qveCaps_cpp624 60 "%0[0x%10!p!] CAP: Number of Supported output formats = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.nEncGUIDCount, ItemLong -- 11
}
#typev qveCaps_cpp623 59 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp622 58 "%0[0x%10!p!] CAP: SupportsNv12UBWC =       %11!10u!| Max MBps with B-frames =  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsNv12Compression, ItemLong -- 11
m_Caps.EncCaps.nEncMaxMBpsSupportedWithBFrame, ItemLong -- 12
}
#typev qveCaps_cpp621 57 "%0[0x%10!p!] CAP: MinScaleY =            0x%11!10X!| MaxScaleY =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleY, ItemLong -- 11
m_Caps.EncCaps.maxScaleY, ItemLong -- 12
}
#typev qveCaps_cpp620 56 "%0[0x%10!p!] CAP: MinScaleX =            0x%11!10X!| MaxScaleX =             0x%12!10X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.minScaleX, ItemLong -- 11
m_Caps.EncCaps.maxScaleX, ItemLong -- 12
}
#typev qveCaps_cpp619 55 "%0[0x%10!p!] CAP: SupportsRotation =       %11!10u!| SupportsMirror =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsRotation, ItemLong -- 11
m_Caps.EncCaps.supportsMirror, ItemLong -- 12
}
#typev qveCaps_cpp618 54 "%0[0x%10!p!] CAP: SupportsScaling =        %11!10u!| SupportsCropping =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.supportsScaling, ItemLong -- 11
m_Caps.EncCaps.supportsCropping, ItemLong -- 12
}
#typev qveCaps_cpp617 53 "%0[0x%10!p!] CAP: Min QP =                 %11!10u!| Max QP =                  %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinQP, ItemLong -- 11
m_Caps.EncCaps.nEncMaxQP, ItemLong -- 12
}
#typev qveCaps_cpp616 52 "%0[0x%10!p!] CAP: SliceControlMode Min =   %11!10u!| SliceControlMode Max =    %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultSliceControlMode_Min, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultSliceControlMode_Max, ItemLong -- 12
}
#typev qveCaps_cpp615 51 "%0[0x%10!p!] CAP: Default B-frame count =  %11!10u!| Max Ref frame count =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxRefFrameCount, ItemLong -- 12
}
#typev qveCaps_cpp614 50 "%0[0x%10!p!] CAP: Low Latency Mode =       %11!10u!| Cabac Support =           %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncLowLatencyMode, ItemLong -- 11
m_Caps.EncCaps.nEncCABACSupport, ItemLong -- 12
}
#typev qveCaps_cpp613 49 "%0[0x%10!p!] CAP: Default Mean Bitrate =   %11!10u!| Default Max Bitrate =     %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncDefaultMeanBitRate, ItemLong -- 11
m_Caps.EncCaps.nEncDefaultMaxBitRate, ItemLong -- 12
}
#typev qveCaps_cpp612 48 "%0[0x%10!p!] CAP: Max Peak Bitrate =       %11!10u!| Max Hier P-layer =        %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxPeakMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumHierPEnhLayer, ItemLong -- 12
}
#typev qveCaps_cpp611 47 "%0[0x%10!p!] CAP: Max Profile =            %11!10u!| Max Level =               %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxProfile, ItemLong -- 11
m_Caps.EncCaps.nEncMaxLevel, ItemLong -- 12
}
#typev qveCaps_cpp610 46 "%0[0x%10!p!] CAP: Max B-frame Count =      %11!10u!| Max Num LTR =             %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxBframeCount, ItemLong -- 11
m_Caps.EncCaps.nEncMaxNumLTR, ItemLong -- 12
}
#typev qveCaps_cpp609 45 "%0[0x%10!p!] CAP: Max Mean Bitrate (bps) = %11!10u!| Max MacroBlocks Per Sec = %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMeanMbps, ItemLong -- 11
m_Caps.EncCaps.nEncMbsPerSecond, ItemLong -- 12
}
#typev qveCaps_cpp608 44 "%0[0x%10!p!] CAP: Max MacroBlocks =        %11!10u!| Min Dim =                 %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxMB, ItemLong -- 11
m_Caps.EncCaps.nEncMinDimension, ItemLong -- 12
}
#typev qveCaps_cpp607 43 "%0[0x%10!p!] CAP: Min height (px) =        %11!10u!| Min Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMinHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMinWidth, ItemLong -- 12
}
#typev qveCaps_cpp606 42 "%0[0x%10!p!] CAP: Max height (px) =        %11!10u!| Max Width (px) =          %12!10u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
m_Caps.EncCaps.nEncMaxHeight, ItemLong -- 11
m_Caps.EncCaps.nEncMaxWidth, ItemLong -- 12
}
#typev qveCaps_cpp605 41 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp604 40 "%0[0x%10!p!] CAP: =========================Encoder Capabilities==============================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp603 39 "%0[0x%10!p!] CAP: ===========================================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp599 38 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp598 37 "%0[0x%10!p!] CAP: caps are NOT available" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp597 36 "%0[0x%10!p!] CAP: ===========================================================" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::DumpCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp531 34 "%0[0x%10!p!] CAP: copying caps failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp522 33 "%0[0x%10!p!] CAP: caps are not available" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetCaps
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp453 32 "%0[0x%10!p!] CAP: Max supported encoding level %11!d!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=High FUNC=CQVECaps::GetMaxLevel
{
this, ItemPtr -- 10
*pEncLevel, ItemLong -- 11
}
#typev qveCaps_cpp444 31 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetMaxLevel
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp435 30 "%0[0x%10!p!] CAP: invalid Input pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::GetMaxLevel
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp385 28 "%0[0x%10!p!] CAP: invalid arg" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
#typev qveCaps_cpp404 29 "%0[0x%10!p!] CAP: frame rate is higher than supported(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
uiCapsFps, ItemLong -- 11
}
#typev qveCaps_cpp379 27 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateFrameRate
{
this, ItemPtr -- 10
}
// PDB:  qcvidencx86mfthevc7280.pdb
// PDB:  Last Updated :2022-05-17:11:06:06:456 (UTC) [tracepdb]
#typev qveCaps_cpp104 13 "%0[0x%10!p!] CAP: Invalid Mean Bitrate(%11!u!)" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
uiBitrate, ItemLong -- 11
}
#typev qveCaps_cpp88 12 "%0[0x%10!p!] CAP: caps are not available yet" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Error FUNC=CQVECaps::ValidateMeanBitrate
{
this, ItemPtr -- 10
}
