// PDB:  qcauddev850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
126de703-5146-36b4-8017-4b4e2ce4691a vcxproj // SRC=bongo_hal.c MJ= MN=
#typev wcd_slave_device_handler_c536 37 "%0=WSA:<wsa_deinit>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_slave_device_deinit
{
}
// PDB:  qcauddev850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev wcd_slave_device_handler_c486 36 "%0=WSA:<wsa_init>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wcd_slave_device_init
{
}
// PDB:  qcauddev850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev bongo_hal_c300 24 "%0-WSA:<wsa_HW_reset>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_HW_reset
{
}
#typev bongo_hal_c263 23 "%0+WSA:<wsa_HW_reset>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_HW_reset
{
}
#typev bongo_hal_c182 18 "%0=WSA:<valid WCD slave found>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c179 17 "%0=WSA:<slave varian unknown>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c175 16 "%0=WSA:<slave not initialized, ignoring>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c171 15 "%0=WSA:<slave not present, ignoring>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c167 14 "%0=WSA:<slave ID was not recognized>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c163 13 "%0=WSA:<slave pointer is null>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c159 12 "%0=WSA:<bongo hal not initialized>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c154 11 "%0=WSA:<processing broadcast>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c151 10 "%0=WSA:<verifying wcd_slave info>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_check_params
{
}
#typev bongo_hal_c1004 62 "%0-WSA:<wsa_cleanup_slave>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_cleanup_slave
{
}
#typev bongo_hal_c990 61 "%0-WSA:<slave is not WSA881x type>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_cleanup_slave
{
}
#typev bongo_hal_c985 60 "%0-WSA:<invalid parameter>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_cleanup_slave
{
}
#typev bongo_hal_c982 59 "%0+WSA:<wsa_cleanup_slave>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_cleanup_slave
{
}
#typev bongo_hal_c1090 67 "%0=WSA:<wsa_configure returned: %10!d!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_configure
{
rc, ItemLong -- 10
}
#typev bongo_hal_c661 22 "%0=WSA:<wsa_register_read: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_enable_RDAC
{
reg, ItemLong -- 10
*value, ItemLong -- 11
}
#typev bongo_hal_c617 34 "%0=WSA:<wsa_enable_RDAC>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_enable_RDAC
{
}
#typev bongo_hal_c411 25 "%0=WSA:<wsa_enable_bandgap>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_enable_bandgap
{
}
#typev bongo_hal_c969 58 "%0-WSA:<wsa_identify_slave>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c966 57 "%0=WSA:<wsa881x identified as right>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c963 56 "%0=WSA:<wsa881x identified as left>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c959 22 "%0=WSA:<wsa_register_read: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
reg, ItemLong -- 10
*value, ItemLong -- 11
}
#typev bongo_hal_c945 53 "%0=WSA:<wsa881x v1.1>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c943 22 "%0=WSA:<wsa_register_read: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
reg, ItemLong -- 10
*value, ItemLong -- 11
}
#typev bongo_hal_c941 52 "%0=WSA:<wsa881x v1>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c950 54 "%0=WSA:<wsa881x v2>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c954 55 "%0=WSA:<wsa881x version unknown!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c931 51 "%0=WSA:<found WSA8815 variant>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c926 50 "%0=WSA:<found WSA8810 variant>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c915 49 "%0=WSA:<reading WSA881x chip id.>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c904 48 "%0-WSA:<out of memory!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c886 44 "%0=WSA:<slave was not recognized as WSA881x>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c896 47 "%0-WSA:<out of memory!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c890 46 "%0=WSA:<Adding slave to soundwire group 1>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c889 45 "%0=WSA:<slave was recognized as WSA881x>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c873 43 "%0=WSA:<using soundwire slave address to indentify type of slave>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c868 42 "%0-WSA:<slave already identified as not WSA881x>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c865 41 "%0-WSA:<slave already identified as WSA881x>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c859 40 "%0-WSA:<slave not present>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c854 39 "%0-WSA:<entry is a null pointer>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c851 38 "%0+WSA:<wsa_identify_slave>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_identify_slave
{
}
#typev bongo_hal_c1046 20 "%0=WSA:<wsa_register_write: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_process_slave_irq
{
reg, ItemLong -- 10
value, ItemLong -- 11
}
#typev bongo_hal_c1038 64 "%0=WSA:<Received OCP IRQ, ignoring!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_process_slave_irq
{
}
#typev bongo_hal_c1029 22 "%0=WSA:<wsa_register_read: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_process_slave_irq
{
reg, ItemLong -- 10
*value, ItemLong -- 11
}
#typev bongo_hal_c1025 63 "%0=WSA:<wsa_process_slave_irq>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_process_slave_irq
{
}
#typev bongo_hal_c1255 22 "%0=WSA:<wsa_register_read: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_read_temp_HW
{
reg, ItemLong -- 10
*value, ItemLong -- 11
}
#typev bongo_hal_c1254 22 "%0=WSA:<wsa_register_read: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_read_temp_HW
{
reg, ItemLong -- 10
*value, ItemLong -- 11
}
#typev bongo_hal_c1318 24 "%0-WSA:<wsa_HW_reset>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_read_temp_sensor
{
}
#typev bongo_hal_c1318 20 "%0=WSA:<wsa_register_write: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_read_temp_sensor
{
reg, ItemLong -- 10
value, ItemLong -- 11
}
#typev bongo_hal_c1318 20 "%0=WSA:<wsa_register_write: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_read_temp_sensor
{
reg, ItemLong -- 10
value, ItemLong -- 11
}
#typev bongo_hal_c1318 23 "%0+WSA:<wsa_HW_reset>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_read_temp_sensor
{
}
#typev bongo_hal_c1316 20 "%0=WSA:<wsa_register_write: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_read_temp_sensor
{
reg, ItemLong -- 10
value, ItemLong -- 11
}
#typev bongo_hal_c1316 26 "%0=WSA:<wsa_disable_bandgap>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_read_temp_sensor
{
}
#typev bongo_hal_c1298 22 "%0=WSA:<wsa_register_read: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_read_temp_sensor
{
reg, ItemLong -- 10
*value, ItemLong -- 11
}
#typev bongo_hal_c1298 22 "%0=WSA:<wsa_register_read: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_read_temp_sensor
{
reg, ItemLong -- 10
*value, ItemLong -- 11
}
#typev bongo_hal_c1292 22 "%0=WSA:<wsa_register_read: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_read_temp_sensor
{
reg, ItemLong -- 10
*value, ItemLong -- 11
}
#typev bongo_hal_c1292 22 "%0=WSA:<wsa_register_read: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_read_temp_sensor
{
reg, ItemLong -- 10
*value, ItemLong -- 11
}
#typev bongo_hal_c1292 22 "%0=WSA:<wsa_register_read: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_read_temp_sensor
{
reg, ItemLong -- 10
*value, ItemLong -- 11
}
#typev bongo_hal_c1292 22 "%0=WSA:<wsa_register_read: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_read_temp_sensor
{
reg, ItemLong -- 10
*value, ItemLong -- 11
}
#typev bongo_hal_c230 21 "%0=WSA:<register 0x%10!x! is out of range>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_register_read
{
reg, ItemLong -- 10
}
#typev bongo_hal_c253 22 "%0=WSA:<wsa_register_read: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_register_read
{
reg, ItemLong -- 10
*value, ItemLong -- 11
}
#typev bongo_hal_c195 19 "%0=WSA:<register 0x%10!x! is out of range>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_register_write
{
reg, ItemLong -- 10
}
#typev bongo_hal_c199 20 "%0=WSA:<wsa_register_write: 0x%10!x!, 0x%11!x!>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_register_write
{
reg, ItemLong -- 10
value, ItemLong -- 11
}
#typev bongo_hal_c1071 66 "%0=WSA:<wsa_reset>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_reset
{
}
#typev bongo_hal_c1063 65 "%0=WSA:<wsa_reset returned: %10!d!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_reset
{
rc, ItemLong -- 10
}
#typev bongo_hal_c1203 71 "%0-WSA:<wsa_spkr_disable>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_disable
{
}
#typev bongo_hal_c1195 24 "%0-WSA:<wsa_HW_reset>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_disable
{
}
#typev bongo_hal_c1195 23 "%0+WSA:<wsa_HW_reset>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_disable
{
}
#typev bongo_hal_c1190 33 "%0-WSA:<wsa_spkr_smart_boost_disable>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_disable
{
}
#typev bongo_hal_c1190 32 "%0=WSA:<wsa_spkr_smart_boost_disable returned %10!d!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_spkr_disable
{
rc, ItemLong -- 10
}
#typev bongo_hal_c1190 31 "%0+WSA:<wsa_spkr_smart_boost_disable>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_disable
{
}
#typev bongo_hal_c1188 26 "%0=WSA:<wsa_disable_bandgap>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_disable
{
}
#typev bongo_hal_c1187 35 "%0=WSA:<wsa_disable_RDAC>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_disable
{
}
#typev bongo_hal_c1180 70 "%0+WSA:<wsa_spkr_disable>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_disable
{
}
#typev bongo_hal_c1170 69 "%0-WSA:<wsa_spkr_enable>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_enable
{
}
#typev bongo_hal_c1133 68 "%0+WSA:<wsa_spkr_enable>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_enable
{
}
#typev bongo_hal_c531 30 "%0=WSA:<using WSA8810, boost_level bigger than max>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_smart_boost_enable
{
}
#typev bongo_hal_c521 29 "%0=WSA:<using WSA8815, setting first boost level to 6v>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_smart_boost_enable
{
}
#typev bongo_hal_c445 28 "%0=WSA:<wsa_spkr_smart_boost_enable returned: %10!d!>" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=wsa_spkr_smart_boost_enable
{
rc, ItemLong -- 10
}
#typev bongo_hal_c442 27 "%0=WSA:<wsa_spkr_smart_boost_enable>" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=wsa_spkr_smart_boost_enable
{
}
