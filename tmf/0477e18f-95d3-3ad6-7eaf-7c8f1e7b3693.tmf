// PDB:  qcaudminiport850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
0477e18f-95d3-3ad6-7eaf-7c8f1e7b3693 10.4.1 // SRC=MinWaveRTPullModeStream.cpp MJ= MN=
#typev MinWaveRTPullModeStream_cpp85 11 "%0:CMiniportWaveRTPullModeStream::CMiniportWaveRTPullModeStream: Leaving Contructor" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::CMiniportWaveRTPullModeStream
{
}
#typev MinWaveRTPullModeStream_cpp59 10 "%0:CMiniportWaveRTPullModeStream::CMiniportWaveRTPullModeStream: Entering Constructor" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::CMiniportWaveRTPullModeStream
{
}
#typev MinWaveRTPullModeStream_cpp97 13 "%0:CMiniportWaveRTPullModeStream::~CMiniportWaveRTPullModeStream: Leaving Destructor" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::~CMiniportWaveRTPullModeStream
{
}
#typev MinWaveRTPullModeStream_cpp94 12 "%0:CMiniportWaveRTPullModeStream::~CMiniportWaveRTPullModeStream: Entering Destructor" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::~CMiniportWaveRTPullModeStream
{
}
#typev MinWaveRTPullModeStream_cpp1011 60 "%0CMiniportWaveRTPullModeStream::AllocateSharedPosBuffer Shared Position Buffer alloc Failed" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRTPullModeStream::AllocateStreamBufferWithNotification
{
}
#typev MinWaveRTPullModeStream_cpp1021 58 "%0Leaving CMiniportWaveRTPullModeStream::AllocateStreamBufferWithNotification 0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::AllocateStreamBufferWithNotification
{
*ActualSize_, ItemLong -- 10
}
#typev MinWaveRTPullModeStream_cpp1011 59 "%0CMiniportWaveRTPullModeStream::AllocateSharedPosBuffer Shared Position Buffer of Size 4k allocated" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::AllocateStreamBufferWithNotification
{
}
#typev MinWaveRTPullModeStream_cpp1006 57 "%0CMiniportWaveRTPullModeStream::AllocateStreamBufferWithNotification - Invalid MiniPort Handle" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRTPullModeStream::AllocateStreamBufferWithNotification
{
}
#typev MinWaveRTPullModeStream_cpp970 56 "%0CMiniportWaveRTPullModeStrean::AllocateStreamBufferWithNotification,  ERROR allocating windows memory" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRTPullModeStream::AllocateStreamBufferWithNotification
{
}
#typev MinWaveRTPullModeStream_cpp929 55 "%0:CMiniportWaveRTPullModeStream::AllocateStreamBufferWithNotification:  RequestedSize_ =0x%10!x!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::AllocateStreamBufferWithNotification
{
RequestedSize_, ItemLong -- 10
}
#typev MinWaveRTPullModeStream_cpp928 54 "%0:CMiniportWaveRTPullModeStream::AllocateStreamBufferWithNotification:  Entering Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::AllocateStreamBufferWithNotification
{
}
#typev MinWaveRTPullModeStream_cpp1106 63 "%0:CMiniportWaveRTPullModeStream::FreeStreamBufferWithNotification: Leaving Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::FreeStreamBufferWithNotification
{
}
#typev MinWaveRTPullModeStream_cpp1091 62 "%0:CMiniportWaveRTPullModeStream::FreeStreamBufferWithNotification: Freeing portcls allocated memory" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::FreeStreamBufferWithNotification
{
}
#typev MinWaveRTPullModeStream_cpp1067 61 "%0:CMiniportWaveRTPullModeStream::FreeStreamBufferWithNotification:  Entering Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::FreeStreamBufferWithNotification
{
}
#typev MinWaveRTPullModeStream_cpp423 31 "%0:CMiniportWaveRTPullModeStream::GetDSPPosition: frameCounter - %10!d!,  readWriteIndex - %11!d!,  dspTimeStamp - %12!I64u!,  Status - 0x%13!x! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::GetDSPPosition
{
frameCounter, ItemLong -- 10
pDSPPositionBuffer->uiReadWriteIndex, ItemLong -- 11
pDSPPositionBuffer->ullDSPTimeStamp, ItemULongLong -- 12
status, ItemLong -- 13
}
#typev MinWaveRTPullModeStream_cpp572 37 "%0Leaving CMiniportWaveRTPullModeStream::GetOutputPresentationPosition: streamID = %10!I64u! ,  u64PositionInBlocks = %11!I64u!,  u64QPCPosition = %12!I64u!
 " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::GetOutputPresentationPosition
{
m_streamID, ItemULongLong -- 10
pPresentationPosition->u64PositionInBlocks, ItemULongLong -- 11
pPresentationPosition->u64QPCPosition, ItemULongLong -- 12
}
#typev MinWaveRTPullModeStream_cpp559 36 "%0:CMiniportWaveRTPullModeStream::GetOutputPresentationPosition: GetDSPPosition failure status - 0x%10!x!, returning previous stored position  " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::GetOutputPresentationPosition
{
status, ItemLong -- 10
}
#typev MinWaveRTPullModeStream_cpp527 35 "%0CMiniportWaveRTPullModeStream::GetOutputPresentationPosition correcting the elapsedTime streamID = %10!I64u!, elapsedtime = %11!I64u!, pauseElapseTime = %12!I64u! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::GetOutputPresentationPosition
{
m_streamID, ItemULongLong -- 10
elapsedTime, ItemULongLong -- 11
pauseElapseTime, ItemULongLong -- 12
}
#typev MinWaveRTPullModeStream_cpp503 34 "%0Enteirng CMiniportWaveRTPullModeStream::GetOutputPresentationPosition streamID = %10!I64u!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::GetOutputPresentationPosition
{
m_streamID, ItemULongLong -- 10
}
#typev MinWaveRTPullModeStream_cpp281 22 "%0:CMiniportWaveRTPullModeStream::GetOutputStreamPresentationPosition: Leaving method  status = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::GetOutputStreamPresentationPosition
{
Status, ItemLong -- 10
}
#typev MinWaveRTPullModeStream_cpp268 21 "%0Entering CMiniportWaveRTPullModeStream::GetOutputStreamPresentationPosition" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::GetOutputStreamPresentationPosition
{
}
#typev MinWaveRTPullModeStream_cpp317 24 "%0Leaving CMiniportWaveRTPullModeStream::GetPacketCount: PacketCount: %10!I64u! ntStatus = 0x%11!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::GetPacketCount
{
*pPacketCount, ItemULongLong -- 10
ntStatus, ItemLong -- 11
}
#typev MinWaveRTPullModeStream_cpp299 23 "%0Entering CMiniportWaveRTPullModeStream::GetPacketCount" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::GetPacketCount
{
}
#typev MinWaveRTPullModeStream_cpp685 39 "%0Leaving CMiniportWaveRTPullModeStream::GetStreamPosition: PlayOffset = %10!I64u!,  WriteOffSet = %11!I64u!
 " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::GetStreamPosition
{
m_AudioPosition.PlayOffset, ItemULongLong -- 10
m_AudioPosition.WriteOffset, ItemULongLong -- 11
}
#typev MinWaveRTPullModeStream_cpp617 33 "%0Leaving CMiniportWaveRTPullModeStream::GetDSPJumpAheadBytesFirstTime,  Jump Ahead = %10!04d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::GetStreamPosition
{
m_ulDSPJumpAhead, ItemLong -- 10
}
#typev MinWaveRTPullModeStream_cpp617 32 "%0Enteirng CMiniportWaveRTPullModeStream::GetDSPJumpAheadBytesFirstTime" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::GetStreamPosition
{
}
#typev MinWaveRTPullModeStream_cpp589 38 "%0Enteirng CMiniportWaveRTPullModeStream::GetStreamPosition" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::GetStreamPosition
{
}
#typev MinWaveRTPullModeStream_cpp372 30 "%0Leaving CMiniportWaveRTPullModeStream::HandleBufDone: SHOULD NOT BE CALLED" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::HandleBufDone
{
}
#typev MinWaveRTPullModeStream_cpp369 29 "%0Entering CMiniportWaveRTPullModeStream::HandleBufDone: SHOULD NOT BE CALLED" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::HandleBufDone
{
}
#typev MinWaveRTPullModeStream_cpp1186 67 "%0:CMiniportWaveRTPullModeStream::Init: Leaving Method,  error = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::Init
{
status, ItemLong -- 10
}
#typev MinWaveRTPullModeStream_cpp1152 66 "%0:CMiniportWaveRTPullModeStream::Init: Entering Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::Init
{
}
#typev MinWaveRTPullModeStream_cpp908 53 "%0:CMiniportWaveRTPullModeStream::InitDMA: Leaving Method,  error = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::InitDMA
{
status, ItemLong -- 10
}
#typev MinWaveRTPullModeStream_cpp888 52 "%0:CMiniportWaveRTPullModeStream::InitDMA: Could not Initialize Q6Stream,  error = 0x%10!08X!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRTPullModeStream::InitDMA
{
err, ItemLong -- 10
}
#typev MinWaveRTPullModeStream_cpp875 51 "%0:CMiniportWaveRTPullModeStream::InitDMA: ADM Handle already opened" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_WARNING FLAGS=QCAUDRT_WARNING FUNC=CMiniportWaveRTPullModeStream::InitDMA
{
}
#typev MinWaveRTPullModeStream_cpp868 50 "%0:CMiniportWaveRTPullModeStream::InitDMA: Could not open ADM Handle,  error" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRTPullModeStream::InitDMA
{
}
#typev MinWaveRTPullModeStream_cpp858 49 "%0:CMiniportWaveRTPullModeStream::InitDMA: VoteAVTimerClock failed" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRTPullModeStream::InitDMA
{
}
#typev MinWaveRTPullModeStream_cpp848 48 "%0:CMiniportWaveRTPullModeStream::InitDMA: Entering Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::InitDMA
{
}
#typev MinWaveRTPullModeStream_cpp152 16 "%0:CMiniportWaveRTPullModeStream::NonDelegatingQueryInterface: Leaving method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::NonDelegatingQueryInterface
{
}
#typev MinWaveRTPullModeStream_cpp136 15 "%0:CMiniportWaveRTPullModeStream::NonDelegatingQueryInterface: THRenderInterface is enabled " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::NonDelegatingQueryInterface
{
}
#typev MinWaveRTPullModeStream_cpp131 14 "%0:CMiniportWaveRTPullModeStream::NonDelegatingQueryInterface: Entering method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::NonDelegatingQueryInterface
{
}
#typev MinWaveRTPullModeStream_cpp835 47 "%0:CMiniportWaveRTPullModeStream::PauseDMA: Leaving Method,  error = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::PauseDMA
{
status, ItemLong -- 10
}
#typev MinWaveRTPullModeStream_cpp817 46 "%0:CMiniportWaveRTPullModeStream::PauseDMA: Entering Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::PauseDMA
{
}
#typev MinWaveRTPullModeStream_cpp753 43 "%0:CMiniportWaveRTPullModeStream::ResumeDMA: Leaving Method,  error = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::ResumeDMA
{
status, ItemLong -- 10
}
#typev MinWaveRTPullModeStream_cpp743 42 "%0:CMiniportWaveRTPullModeStream::ResumeDMA: InitialDSPPathDelay = %10!I64u!,  m_lQPCInitialCount = %11!I64u! ,  m_lQPCFrequency = %12!I64u! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::ResumeDMA
{
InitialDSPPathDelay.QuadPart, ItemULongLong -- 10
m_lQPCInitialCount.QuadPart, ItemULongLong -- 11
m_lQPCFrequency.QuadPart, ItemULongLong -- 12
}
// PDB:  qcaudminiport850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
#typev MinWaveRTPullModeStream_cpp708 41 "%0:CMiniportWaveRTPullModeStream::ResumeDMA: VoteAVTimerClock failed" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRTPullModeStream::ResumeDMA
{
}
#typev MinWaveRTPullModeStream_cpp701 40 "%0:CMiniportWaveRTPullModeStream::ResumeDMA: Entering Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::ResumeDMA
{
}
#typev MinWaveRTPullModeStream_cpp354 28 "%0Leaving CMiniportWaveRTPullModeStream::SetPacketInfo: Packet Info Set: StreamID %10!I64u!,  Packet_Num: %11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::SetPacketInfo
{
m_streamID, ItemULongLong -- 10
(m_ulWaterMarkEventCnt - 1), ItemLong -- 11
}
#typev MinWaveRTPullModeStream_cpp351 27 "%0CMiniportWaveRTPullModeStream::SetPacketInfo: EOS Ping buffer filled with silence " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::SetPacketInfo
{
}
#typev MinWaveRTPullModeStream_cpp344 26 "%0CMiniportWaveRTPullModeStream::SetPacketInfo: EOS Pong buffer filled with silence " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::SetPacketInfo
{
}
#typev MinWaveRTPullModeStream_cpp330 25 "%0Entering CMiniportWaveRTPullModeStream::SetPacketInfo" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::SetPacketInfo
{
}
#typev MinWaveRTPullModeStream_cpp1210 70 "%0Leaving CMiniportWaveRTPullModeStream::SetPowerState,  pin %10!d! streamType %11!d! status = 0x%12!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::SetPowerState
{
m_ulPin, ItemLong -- 10
m_StreamType, ItemLong -- 11
status, ItemLong -- 12
}
#typev MinWaveRTPullModeStream_cpp1199 69 "%0CMiniportWaveRTPullModeStream::SetPowerState NewPowerstate %10!d!,  PowerState %11!d!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::SetPowerState
{
NewPowerState, ItemLong -- 10
PowerState, ItemLong -- 11
}
#typev MinWaveRTPullModeStream_cpp1198 68 "%0Entering CMiniportWaveRTPullModeStream::SetPowerState pin %10!d!,  streamType %11!d!,  StreamID %12!I64u!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::SetPowerState
{
m_ulPin, ItemLong -- 10
m_StreamType, ItemLong -- 11
m_streamID, ItemULongLong -- 12
}
#typev MinWaveRTPullModeStream_cpp256 20 "%0Leaving CMiniportWaveRTPullModeStream::SetWritePacket: ntStatus = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::SetWritePacket
{
ntStatus, ItemLong -- 10
}
#typev MinWaveRTPullModeStream_cpp249 19 "%0:CMiniportWaveRTPullModeStream::SetWritePacket: StreamID %10!I64u!,  PacketNumber: %11!ld!,  m_ulWaterMarkEventCnt: %12!1d!,  Flags: %13!1d!,  ntStatus = 0x%14!08X!" //   IFRLOG=m_IfrLogHandle LEVEL=TRACE_LEVEL_ERROR FLAGS=QCAUDRT_ERROR FUNC=CMiniportWaveRTPullModeStream::SetWritePacket
{
m_streamID, ItemULongLong -- 10
PacketNumber, ItemLong -- 11
m_ulWaterMarkEventCnt, ItemLong -- 12
Flags, ItemLong -- 13
ntStatus, ItemLong -- 14
}
#typev MinWaveRTPullModeStream_cpp171 18 "%0:CMiniportWaveRTPullModeStream::SetWritePacket: StreamID %10!I64u!,  PacketNumber: %11!ld!,  m_ulWaterMarkEventCnt: %12!1d!,  Flags: %13!1d! " //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::SetWritePacket
{
m_streamID, ItemULongLong -- 10
PacketNumber, ItemLong -- 11
m_ulWaterMarkEventCnt, ItemLong -- 12
Flags, ItemLong -- 13
}
#typev MinWaveRTPullModeStream_cpp170 17 "%0Entering CMiniportWaveRTPullModeStream::SetWritePacket" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_VERBOSE FLAGS=QCAUDRT_VERBOSE FUNC=CMiniportWaveRTPullModeStream::SetWritePacket
{
}
#typev MinWaveRTPullModeStream_cpp805 45 "%0:CMiniportWaveRTPullModeStream::StopDMA: Leaving Method,  error = 0x%10!08X!" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::StopDMA
{
status, ItemLong -- 10
}
#typev MinWaveRTPullModeStream_cpp763 44 "%0:CMiniportWaveRTPullModeStream::StopDMA: Entering Method" //   IFRLOG=NULL LEVEL=TRACE_LEVEL_INFORMATION FLAGS=QCAUDRT_INFO FUNC=CMiniportWaveRTPullModeStream::StopDMA
{
}
