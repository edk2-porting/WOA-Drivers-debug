// PDB:  qciommu850.pdb
// PDB:  Last Updated :2020-09-09:19:38:55:000 (UTC) [tracepdb]
0c445e0a-8021-3a6e-c5ac-704d15ba12fa IOMMU // SRC=SmmuTreeInterface.cpp MJ= MN=
#typev SmmuTreeInterface_cpp214 17 "%0 SmmuTreeInterface.cpp::%!FUNC! :CALLSTACK Returning 0x%10!08x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=CleanupTree
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp201 16 "%0 SmmuTreeInterface.cpp::%!FUNC!::201 :ERROR IoUnregisterPlugPlayNotification failed for SK interface 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=CleanupTree
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp194 15 "%0 SmmuTreeInterface.cpp::%!FUNC! :WARNING Already unregistered for TrEE SK Device Interface Class notification." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=CleanupTree
{
}
#typev SmmuTreeInterface_cpp183 14 "%0 SmmuTreeInterface.cpp::%!FUNC!::183 :ERROR IoUnregisterPlugPlayNotification failed for Pass Through interface 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=CleanupTree
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp176 13 "%0 SmmuTreeInterface.cpp::%!FUNC! :WARNING Already unregistered for TrEE Pass Through Device Interface Class notification." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=CleanupTree
{
}
#typev SmmuTreeInterface_cpp169 12 "%0 SmmuTreeInterface.cpp::%!FUNC!::169 :ERROR Invalid parameter 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=CleanupTree
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp214 17 "%0 SmmuTreeInterface.cpp::%!FUNC! :CALLSTACK Returning 0x%10!08x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`CleanupTree'::`1'::fin$0
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp201 16 "%0 SmmuTreeInterface.cpp::%!FUNC!::201 :ERROR IoUnregisterPlugPlayNotification failed for SK interface 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`CleanupTree'::`1'::fin$0
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp194 15 "%0 SmmuTreeInterface.cpp::%!FUNC! :WARNING Already unregistered for TrEE SK Device Interface Class notification." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`CleanupTree'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp183 14 "%0 SmmuTreeInterface.cpp::%!FUNC!::183 :ERROR IoUnregisterPlugPlayNotification failed for Pass Through interface 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`CleanupTree'::`1'::fin$0
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp176 13 "%0 SmmuTreeInterface.cpp::%!FUNC! :WARNING Already unregistered for TrEE Pass Through Device Interface Class notification." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`CleanupTree'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp169 12 "%0 SmmuTreeInterface.cpp::%!FUNC!::169 :ERROR Invalid parameter 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`CleanupTree'::`1'::fin$0
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp275 19 "%0 SmmuTreeInterface.cpp::%!FUNC!::275 :WdfIoTargetOpen failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=CreateAndOpenSecureTarget
{
}
#typev SmmuTreeInterface_cpp257 18 "%0 SmmuTreeInterface.cpp::%!FUNC!::257 :WdfIoTargetCreate failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=CreateAndOpenSecureTarget
{
}
#typev SmmuTreeInterface_cpp130 11 "%0 SmmuTreeInterface.cpp::%!FUNC!::130 :ERROR IoRegisterPlugPlayNotification failed for SK interface with status 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=InitializeTree
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp115 10 "%0 SmmuTreeInterface.cpp::%!FUNC!::115 :ERROR IoRegisterPlugPlayNotification failed for Pass Through interface with status 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=InitializeTree
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp130 11 "%0 SmmuTreeInterface.cpp::%!FUNC!::130 :ERROR IoRegisterPlugPlayNotification failed for SK interface with status 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`InitializeTree'::`1'::fin$0
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp115 10 "%0 SmmuTreeInterface.cpp::%!FUNC!::115 :ERROR IoRegisterPlugPlayNotification failed for Pass Through interface with status 0x%10!08x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`InitializeTree'::`1'::fin$0
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp384 24 "%0 SmmuTreeInterface.cpp::%!FUNC!::384 :Error: Both Pass through(%10!d!) and Sk Service(%11!d!) interfaces are not ready together." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SMMUProcessTreeNotifyInterfaceChange
{
pDeviceContext->IsSecureProgPassThroughUp, ItemLong -- 10
pDeviceContext->IsSecureProgSkServiceUp, ItemLong -- 11
}
#typev SmmuTreeInterface_cpp377 23 "%0 SmmuTreeInterface.cpp::%!FUNC!::377 :CloseAndDestroySecureTarget Failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SMMUProcessTreeNotifyInterfaceChange
{
}
#typev SmmuTreeInterface_cpp368 22 "%0 SmmuTreeInterface.cpp::%!FUNC!::368 :Unable to register with secure programming channel" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SMMUProcessTreeNotifyInterfaceChange
{
}
#typev SmmuTreeInterface_cpp361 21 "%0 SmmuTreeInterface.cpp::%!FUNC!::361 :CreateAndOpenSecureTarget Failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SMMUProcessTreeNotifyInterfaceChange
{
}
#typev SmmuTreeInterface_cpp341 20 "%0 SmmuTreeInterface.cpp::%!FUNC!::341 : Invalid parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SMMUProcessTreeNotifyInterfaceChange
{
}
#typev SmmuTreeInterface_cpp384 24 "%0 SmmuTreeInterface.cpp::%!FUNC!::384 :Error: Both Pass through(%10!d!) and Sk Service(%11!d!) interfaces are not ready together." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SMMUProcessTreeNotifyInterfaceChange'::`1'::fin$0
{
pDeviceContext->IsSecureProgPassThroughUp, ItemLong -- 10
pDeviceContext->IsSecureProgSkServiceUp, ItemLong -- 11
}
#typev SmmuTreeInterface_cpp377 23 "%0 SmmuTreeInterface.cpp::%!FUNC!::377 :CloseAndDestroySecureTarget Failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SMMUProcessTreeNotifyInterfaceChange'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp368 22 "%0 SmmuTreeInterface.cpp::%!FUNC!::368 :Unable to register with secure programming channel" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SMMUProcessTreeNotifyInterfaceChange'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp361 21 "%0 SmmuTreeInterface.cpp::%!FUNC!::361 :CreateAndOpenSecureTarget Failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SMMUProcessTreeNotifyInterfaceChange'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp341 20 "%0 SmmuTreeInterface.cpp::%!FUNC!::341 : Invalid parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SMMUProcessTreeNotifyInterfaceChange'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp464 29 "%0 SmmuTreeInterface.cpp::%!FUNC! :SMMU : Exit from %!FUNC! with status 0x%10!X!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=SMMUSecureProgrammingPassThroughInterfaceNotficationCallback
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp455 28 "%0 SmmuTreeInterface.cpp::%!FUNC!::455 :SMMU : Interface received in %!FUNC! does not belongs to Tree Pass Through Interface." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SMMUSecureProgrammingPassThroughInterfaceNotficationCallback
{
}
#typev SmmuTreeInterface_cpp444 27 "%0 SmmuTreeInterface.cpp::%!FUNC! :SMMU : Tree Pass through removal notification" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=SMMUSecureProgrammingPassThroughInterfaceNotficationCallback
{
}
#typev SmmuTreeInterface_cpp434 26 "%0 SmmuTreeInterface.cpp::%!FUNC! :SMMU : Tree Pass through arrival notification" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=SMMUSecureProgrammingPassThroughInterfaceNotficationCallback
{
}
#typev SmmuTreeInterface_cpp419 25 "%0 SmmuTreeInterface.cpp::%!FUNC!::419 : Invalid parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SMMUSecureProgrammingPassThroughInterfaceNotficationCallback
{
}
#typev SmmuTreeInterface_cpp464 29 "%0 SmmuTreeInterface.cpp::%!FUNC! :SMMU : Exit from %!FUNC! with status 0x%10!X!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`SMMUSecureProgrammingPassThroughInterfaceNotficationCallback'::`1'::fin$0
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp455 28 "%0 SmmuTreeInterface.cpp::%!FUNC!::455 :SMMU : Interface received in %!FUNC! does not belongs to Tree Pass Through Interface." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SMMUSecureProgrammingPassThroughInterfaceNotficationCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp444 27 "%0 SmmuTreeInterface.cpp::%!FUNC! :SMMU : Tree Pass through removal notification" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`SMMUSecureProgrammingPassThroughInterfaceNotficationCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp434 26 "%0 SmmuTreeInterface.cpp::%!FUNC! :SMMU : Tree Pass through arrival notification" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`SMMUSecureProgrammingPassThroughInterfaceNotficationCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp419 25 "%0 SmmuTreeInterface.cpp::%!FUNC!::419 : Invalid parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SMMUSecureProgrammingPassThroughInterfaceNotficationCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp532 34 "%0 SmmuTreeInterface.cpp::%!FUNC! :SMMU : Exit from %!FUNC! with status 0x%10!X!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=SMMUSecureProgrammingSkServiceInterfaceNotficationCallback
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp523 33 "%0 SmmuTreeInterface.cpp::%!FUNC!::523 :SMMU : Interface received in %!FUNC! does not belongs to Tree Pass Through Interface." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SMMUSecureProgrammingSkServiceInterfaceNotficationCallback
{
}
#typev SmmuTreeInterface_cpp512 32 "%0 SmmuTreeInterface.cpp::%!FUNC! :SMMU : Tree SK interface removal notification" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=SMMUSecureProgrammingSkServiceInterfaceNotficationCallback
{
}
#typev SmmuTreeInterface_cpp502 31 "%0 SmmuTreeInterface.cpp::%!FUNC! :SMMU : Tree SK interface arrival notification" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=SMMUSecureProgrammingSkServiceInterfaceNotficationCallback
{
}
#typev SmmuTreeInterface_cpp493 30 "%0 SmmuTreeInterface.cpp::%!FUNC!::493 : Invalid parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=SMMUSecureProgrammingSkServiceInterfaceNotficationCallback
{
}
#typev SmmuTreeInterface_cpp532 34 "%0 SmmuTreeInterface.cpp::%!FUNC! :SMMU : Exit from %!FUNC! with status 0x%10!X!." //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`SMMUSecureProgrammingSkServiceInterfaceNotficationCallback'::`1'::fin$0
{
status, ItemLong -- 10
}
#typev SmmuTreeInterface_cpp523 33 "%0 SmmuTreeInterface.cpp::%!FUNC!::523 :SMMU : Interface received in %!FUNC! does not belongs to Tree Pass Through Interface." //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SMMUSecureProgrammingSkServiceInterfaceNotficationCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp512 32 "%0 SmmuTreeInterface.cpp::%!FUNC! :SMMU : Tree SK interface removal notification" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`SMMUSecureProgrammingSkServiceInterfaceNotficationCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp502 31 "%0 SmmuTreeInterface.cpp::%!FUNC! :SMMU : Tree SK interface arrival notification" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=Core FUNC=`SMMUSecureProgrammingSkServiceInterfaceNotficationCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp493 30 "%0 SmmuTreeInterface.cpp::%!FUNC!::493 : Invalid parameter" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=`SMMUSecureProgrammingSkServiceInterfaceNotficationCallback'::`1'::fin$0
{
}
#typev SmmuTreeInterface_cpp978 46 "%0 SmmuTreeInterface.cpp::%!FUNC!::978 :WdfIoTargetSendIoctlSynchronously failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp971 45 "%0 SmmuTreeInterface.cpp::%!FUNC!::971 :TZ returned bad data" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp964 44 "%0 SmmuTreeInterface.cpp::%!FUNC!::964 :TZ returned bad status" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp902 43 "%0 SmmuTreeInterface.cpp::%!FUNC!::902 :Unsupported TZ Command ID" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
#typev SmmuTreeInterface_cpp850 41 "%0 SmmuTreeInterface.cpp::%!FUNC!::850 :TrEE interface not available" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=Core FUNC=TreePerformMemProtectAssignACVM
{
}
