// PDB:  qcdx12arm32um7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:21:088 (UTC) [tracepdb]
787e3a90-ea72-3d01-e4da-59ae1b8a26f8 video // SRC=venusdecodedevice.cpp MJ= MN=
#typev venusvideofactory_cpp100 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
#typev venusvideofactory_cpp100 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
// PDB:  qcdx12arm32um7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:21:088 (UTC) [tracepdb]
#typev venusdecodedevice_cpp342 29 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp323 28 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
// PDB:  qcdx12arm32um7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:21:088 (UTC) [tracepdb]
#typev venusdecodedevice_cpp357 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp356 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp1832 122 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1720 118 "%0AllocInterlaceBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1715 117 "%0AllocInterlaceBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1828 121 "%0DxResource create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1815 120 "%0DxMemObj create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1797 119 "%0Interlace Intermediate Buf DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1695 116 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp2007 132 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1876 126 "%0AllocInternalBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1871 125 "%0AllocInternalBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2003 131 "%0AllocInternalBuffer DxResource create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1990 130 "%0AllocInternalBuffer DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1972 129 "%0AllocInternalBuffer DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1942 128 "%4!s!::[%!FUNC!]video internal buffer %10!u! allocation success 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
createData.pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1932 127 "%0Invalid internal buffer index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1861 124 "%0AllocInternalBuffer allocation failed: incorrect index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1851 123 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1301 95 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1132 92 "%4!s!::[%!FUNC!]null arg" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1157 94 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1150 93 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1126 91 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp4639 304 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4519 298 "%0Invalid input params %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4531 299 "%0failed to calloc %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4580 301 "%0Int DPB DxResource create fail %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
m_descData.sampleWidth, ItemLong -- 11
m_descData.sampleHeight, ItemLong -- 12
}
#typev venusdecodedevice_cpp4624 303 "%0Int DPB resource DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4607 302 "%0Int DPB resource DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4573 300 "%4!s!::[%!FUNC!]Int DPB DxResource create success, corresp DxMemObj to be created" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4515 297 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp2095 137 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp2056 136 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp3148 222 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3145 221 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3138 220 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3115 219 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3100 218 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3068 217 "%0HandleH264InterlaceInterweaved failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3057 216 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3026 215 "%0ValidateH264CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3023 165 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3023 164 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3023 163 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3016 214 "%0ValidateH264RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3013 151 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3013 150 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3013 149 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3004 213 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2988 212 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2978 211 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2952 210 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2947 209 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3343 236 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3340 235 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3333 234 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3310 233 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3295 232 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3274 231 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3238 229 "%0ValidateHevcCurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3235 168 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3235 167 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3235 166 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3228 228 "%0ValidateHevcRefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3225 154 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3225 153 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3225 152 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3216 227 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3200 226 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3190 225 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3173 224 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3168 223 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3479 245 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3475 244 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_vc1DecodeFrame.SliceInfo.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3468 243 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3450 242 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3436 241 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3393 240 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3378 239 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3368 238 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3363 237 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3858 271 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3855 270 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3848 269 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3825 268 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3810 267 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3789 266 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3758 265 "%0ValidateVp8CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3755 171 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3755 170 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3755 169 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3748 264 "%0ValidateVp8RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3736 263 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3720 262 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3710 261 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3693 260 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3688 259 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3668 258 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3665 257 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp9DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3658 256 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3635 255 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3620 254 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3599 253 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3568 252 "%0ValidateVp9CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3565 174 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3565 173 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3565 172 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3558 251 "%0ValidateVp9RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3555 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3555 161 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3555 160 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3546 250 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3530 249 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3520 248 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3503 247 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3498 246 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp1677 115 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1671 114 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1664 113 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1643 112 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp4209 283 "%4!s!::[%!FUNC!]Enabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4206 286 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4206 285 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
// PDB:  qcdx12arm32um7180.pdb
// PDB:  Last Updated :2021-10-17:21:53:21:088 (UTC) [tracepdb]
#typev venusdecodedevice_cpp737 58 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp733 57 "%0FillBitStreamData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp726 56 "%0Invalid heap pointer in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp718 55 "%4!s!::[%!FUNC!]nInputAllocLen %10!u! nInputFilledLen %11!u! nInputStartOffset %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
pBitStream->nInputAllocLen, ItemLong -- 10
pBitStream->nInputFilledLen, ItemLong -- 11
pBitStream->nInputStartOffset, ItemLong -- 12
}
#typev venusdecodedevice_cpp709 54 "%0Error: BitStream Address is 0x0 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp688 53 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp4856 320 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4841 319 "%4!s!::[%!FUNC!]OPB Buffer Address : %10!I64u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
pOpbInfo[Plane0].PackEngineAddress, ItemULongLong -- 10
}
#typev venusdecodedevice_cpp4818 318 "%0pHeap->pMemObj invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4808 317 "%0pHeap invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4797 316 "%0pSubResInfo invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4787 315 "%0OpbResource invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4782 314 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4893 324 "%0Error: Descriptor width/height is greater than resource width/height" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4942 330 "%4!s!::[%!FUNC!]Buffer req: OPB Res compress flag = %10!u!, OPB Buffer updated compress flag = %11!u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_pOpbResource->IsUBWCompressedRes(), ItemLong -- 10
pOpbInfo->BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp4940 329 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferHeight[0], ItemLong -- 10
pOpbInfo->BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4938 328 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferStride[0], ItemLong -- 10
pOpbInfo->BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4936 327 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferAlignment[0], ItemLong -- 10
pOpbInfo->BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4934 326 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferSize[0], ItemLong -- 10
pOpbInfo->BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4933 325 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4886 323 "%4!s!::[%!FUNC!]OPB Resource Width: %10!u! , OPB Resource Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->width, ItemLong -- 10
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4885 322 "%4!s!::[%!FUNC!]DPB width: %10!u! , Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_dpbDesc.width, ItemLong -- 10
m_dpbDesc.height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4873 321 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4755 313 "%4!s!::[%!FUNC!]Exit " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4752 312 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4744 311 "%4!s!::[%!FUNC!]Failed to alloc interlace intermediate buffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4738 310 "%4!s!::[%!FUNC!]Enable Interlace 3-PASS mode " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4711 309 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4704 308 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4688 307 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp482 43 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp465 42 "%0DPB-OPB split mode driver required, NULL DPB unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp460 41 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, after 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp454 40 "%0DPB-OPB split mode changed by OS after 1st frame, not handled " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp440 39 "%0DPB-OPB split mode driver required, failed to allocate DPB" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp415 38 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp409 37 "%4!s!::[%!FUNC!]DPB-OPB split due to OS ref_only, 1st frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp404 36 "%0DPB-OPB split due to OS ref_only is already set, not expected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp397 35 "%4!s!::[%!FUNC!]DPB-OPB split 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
splitType, ItemLong -- 10
}
#typev venusdecodedevice_cpp390 34 "%0DPB-OPB split due to OS but not DPB set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp385 33 "%0DPB-OPB split due to OS but ref_only not set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp374 32 "%4!s!::[%!FUNC!]Enter " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp629 49 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp617 48 "%0HwDecodeFrame fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp564 47 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp551 46 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp519 45 "%4!s!::[%!FUNC!]DPB Res Compress Flag = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pDpbResource->IsUBWCompressedRes(), ItemLong -- 10
}
#typev venusdecodedevice_cpp504 44 "%4!s!::[%!FUNC!]Enter profile=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp285 25 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp281 291 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp281 289 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp281 290 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp281 288 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp275 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp275 306 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp275 305 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp275 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp269 111 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp269 110 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp269 109 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp264 24 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp248 23 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp187 287 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp232 21 "%0InitDecodePictureBufferCount fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp242 22 "%0AllocateInternalVideoBuffers fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp239 135 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp239 134 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp239 133 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp213 108 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp213 107 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp213 106 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp193 62 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp193 61 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp193 60 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp193 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp176 20 "%4!s!::[%!FUNC!]SessionType %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
SessionType(), ItemLong -- 10
}
#typev venusdecodedevice_cpp100 14 "%0Invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp152 19 "%4!s!::[%!FUNC!]dims %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.sampleWidth, ItemLong -- 10
m_descData.sampleHeight, ItemLong -- 11
sampleMB, ItemLong -- 12
}
#typev venusdecodedevice_cpp138 18 "%4!s!::[%!FUNC!]Same DPB & OPB format, no split required %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp132 17 "%0DPB & OPB format differ %10!u! %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
m_opbFormat, ItemLong -- 11
}
#typev venusdecodedevice_cpp122 16 "%0Invalid output format %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp108 15 "%4!s!::[%!FUNC!]outputFormat = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp60 13 "%4!s!::[%!FUNC!]Decode profile = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.profile, ItemLong -- 10
}
#typev venusdecodedevice_cpp47 12 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp4169 282 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwIsContentInterlaced
{
}
#typev venusdecodedevice_cpp1575 105 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1571 104 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1564 103 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1536 102 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1517 101 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1464 100 "%0InitDecodePictureBufferList, DPB list is FULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1426 99 "%0pHeap->pMemObj NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1416 98 "%0pHeap NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1404 97 "%0pDpbResource NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1399 96 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1103 90 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp1098 89 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1091 88 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1078 87 "%4!s!::[%!FUNC!]buff reqs %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
bufferReqs.BufferAlignment[0], ItemLong -- 12
}
#typev venusdecodedevice_cpp1051 86 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp841 66 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp837 65 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp830 64 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp804 63 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp5000 336 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4992 334 "%0m_pDpbResource is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4997 335 "%0SubResourceInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4981 333 "%4!s!::[%!FUNC!]Aligned Buffer Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
reqOutput.stride[0], ItemLong -- 10
reqOutput.height[0], ItemLong -- 11
}
#typev venusdecodedevice_cpp4980 332 "%4!s!::[%!FUNC!]DPB Resource Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
actualResourceWidth, ItemLong -- 10
actualResourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp4963 331 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4138 281 "%0Invalid Command %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
CmdType, ItemLong -- 10
}
#typev venusdecodedevice_cpp4124 280 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4093 279 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4062 278 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4031 277 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4001 276 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3972 275 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3959 274 "%0Stop Session Submit failed: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3932 273 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3919 272 "%0Start Session Submit failed:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1034 85 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1029 84 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1022 83 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1005 82 "%4!s!::[%!FUNC!]Pixel format = %10!u!, IsCompressed = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.PixelFormat, ItemLong -- 10
bufferReqs.BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp1003 81 "%4!s!::[%!FUNC!]Resource Width = %10!u!, Resource Height     = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.resourceWidth, ItemLong -- 10
bufferReqs.resourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp999 80 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp973 78 "%0OPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp987 79 "%4!s!::[%!FUNC!]Setting following DPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp964 77 "%0DPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp950 76 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp930 75 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp925 74 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp918 73 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp900 72 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferHeight[0], ItemLong -- 10
bufferReqs.BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp898 71 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferStride[0], ItemLong -- 10
bufferReqs.BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp896 70 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferAlignment[0], ItemLong -- 10
bufferReqs.BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp894 69 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp893 68 "%4!s!::[%!FUNC!]Setting following buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp858 67 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp2593 181 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2549 177 "%4!s!::[%!FUNC!]PicParams H264 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
refFrameList[i].sPicEntry.Index7Bits, ItemLong -- 10
refFrameList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2523 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2523 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2523 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2520 176 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2579 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2579 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2579 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2576 179 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2569 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2569 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2569 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2566 178 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2586 180 "%4!s!::[%!FUNC!]unhandled buffer type %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2512 175 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2689 188 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2646 184 "%4!s!::[%!FUNC!]PicParams HEVC sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
refFrameList[i].sPicEntry.Index7Bits, ItemLong -- 10
refFrameList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2623 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2623 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2623 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2620 183 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2676 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2676 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2676 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2673 186 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2666 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2666 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2666 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2663 185 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2683 187 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2612 182 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2751 194 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2717 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2717 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2717 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2714 190 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2737 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2737 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2737 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2734 192 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2727 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2727 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2727 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2724 191 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2744 193 "%4!s!::[%!FUNC!]unhandled buffer %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2707 189 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp4491 296 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4477 294 "%0invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4466 293 "%0invalid private data pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4421 292 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp2927 208 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2900 205 "%4!s!::[%!FUNC!]PicParams Vp8 sPicEntryIndex7Bits %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.lst_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp2888 204 "%4!s!::[%!FUNC!]PicParams Vp8 sPicEntryIndex7Bits %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.gld_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp2876 203 "%4!s!::[%!FUNC!]PicParams Vp8 sPicEntryIndex7Bits %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.alt_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp2864 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2864 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2864 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2861 202 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2913 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2913 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2913 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2910 206 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2920 207 "%0Invalid Buffer Type %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2853 201 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2835 200 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2802 197 "%4!s!::[%!FUNC!]PicParams Vp9 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
frameRefs[i].sPicEntry.Index7Bits, ItemLong -- 10
frameRefs[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2780 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2780 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2780 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2777 196 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2822 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2822 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2822 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2819 198 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2829 199 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2770 195 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp4264 284 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp4267 282 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp4260 282 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp2343 159 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2336 158 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2321 157 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2307 156 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2299 155 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
// PDB:  qcdx12arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:23:988 (UTC) [tracepdb]
#typev venusvideofactory_cpp100 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
#typev venusvideofactory_cpp100 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
// PDB:  qcdx12arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:23:988 (UTC) [tracepdb]
#typev venusdecodedevice_cpp342 29 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp323 28 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
// PDB:  qcdx12arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:23:988 (UTC) [tracepdb]
#typev venusdecodedevice_cpp357 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::~VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp356 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::~VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp357 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp356 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp1832 122 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1720 118 "%0AllocInterlaceBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1715 117 "%0AllocInterlaceBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1828 121 "%0DxResource create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1815 120 "%0DxMemObj create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1797 119 "%0Interlace Intermediate Buf DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1695 116 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp2007 132 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1876 126 "%0AllocInternalBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1871 125 "%0AllocInternalBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2003 131 "%0AllocInternalBuffer DxResource create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1990 130 "%0AllocInternalBuffer DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1972 129 "%0AllocInternalBuffer DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1942 128 "%4!s!::[%!FUNC!]video internal buffer %10!u! allocation success 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
createData.pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1927 127 "%0Invalid internal buffer index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1861 124 "%0AllocInternalBuffer allocation failed: incorrect index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1851 123 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp2040 135 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp2034 134 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp2022 133 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp1301 95 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1132 92 "%4!s!::[%!FUNC!]null arg" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1157 94 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1150 93 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1126 91 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp667 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp663 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp650 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp4639 304 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4519 298 "%0Invalid input params %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4531 299 "%0failed to calloc %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4580 301 "%0Int DPB DxResource create fail %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
m_descData.sampleWidth, ItemLong -- 11
m_descData.sampleHeight, ItemLong -- 12
}
#typev venusdecodedevice_cpp4624 303 "%0Int DPB resource DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4607 302 "%0Int DPB resource DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4573 300 "%4!s!::[%!FUNC!]Int DPB DxResource create success, corresp DxMemObj to be created" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4515 297 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp30 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp29 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp4359 287 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateVenusDecodeDeviceSchedulerCtxt
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2095 137 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp2056 136 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
// PDB:  qcdx12arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:23:988 (UTC) [tracepdb]
#typev venusdecodedevice_cpp3148 222 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3145 221 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3138 220 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3115 219 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3100 218 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3068 217 "%0HandleH264InterlaceInterweaved failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3057 216 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3026 215 "%0ValidateH264CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3023 165 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3023 164 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3023 163 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3016 214 "%0ValidateH264RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3013 151 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3013 150 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3013 149 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3004 213 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2988 212 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2978 211 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2952 210 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2947 209 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3343 236 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3340 235 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3333 234 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3310 233 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3295 232 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3274 231 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3238 229 "%0ValidateHevcCurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3235 168 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3235 167 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3235 166 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3228 228 "%0ValidateHevcRefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3225 154 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3225 153 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3225 152 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3216 227 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3200 226 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3190 225 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3173 224 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3168 223 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3479 245 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3475 244 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_vc1DecodeFrame.SliceInfo.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3468 243 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3450 242 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3436 241 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3393 240 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3378 239 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3368 238 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3363 237 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3858 271 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3855 270 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3848 269 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3825 268 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3810 267 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3789 266 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3758 265 "%0ValidateVp8CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3755 171 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3755 170 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3755 169 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3748 264 "%0ValidateVp8RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3736 263 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3720 262 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3710 261 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3693 260 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3688 259 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3668 258 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3665 257 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp9DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3658 256 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3635 255 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3620 254 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3599 253 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3568 252 "%0ValidateVp9CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3565 174 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3565 173 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3565 172 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3558 251 "%0ValidateVp9RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3555 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3555 161 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3555 160 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3546 250 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3530 249 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3520 248 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3503 247 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3498 246 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp4673 306 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyDpbResource
{
}
#typev venusdecodedevice_cpp4657 305 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyDpbResource
{
}
#typev venusdecodedevice_cpp1677 115 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1671 114 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1664 113 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1643 112 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp308 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp305 306 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp305 305 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp301 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp4399 291 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp4389 289 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp4396 290 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4379 288 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp4234 284 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DisableDpbCompression
{
}
#typev venusdecodedevice_cpp4209 283 "%4!s!::[%!FUNC!]Enabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4206 286 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4206 285 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
// PDB:  qcdx12arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:23:988 (UTC) [tracepdb]
#typev venusdecodedevice_cpp737 58 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp733 57 "%0FillBitStreamData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp726 56 "%0Invalid heap pointer in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp718 55 "%4!s!::[%!FUNC!]nInputAllocLen %10!u! nInputFilledLen %11!u! nInputStartOffset %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
pBitStream->nInputAllocLen, ItemLong -- 10
pBitStream->nInputFilledLen, ItemLong -- 11
pBitStream->nInputStartOffset, ItemLong -- 12
}
#typev venusdecodedevice_cpp709 54 "%0Error: BitStream Address is 0x0 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp688 53 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp4856 320 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4841 319 "%4!s!::[%!FUNC!]OPB Buffer Address : %10!I64u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
pOpbInfo[Plane0].PackEngineAddress, ItemULongLong -- 10
}
#typev venusdecodedevice_cpp4818 318 "%0pHeap->pMemObj invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4808 317 "%0pHeap invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4797 316 "%0pSubResInfo invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4787 315 "%0OpbResource invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4782 314 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4893 324 "%0Error: Descriptor width/height is greater than resource width/height" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4942 330 "%4!s!::[%!FUNC!]Buffer req: OPB Res compress flag = %10!u!, OPB Buffer updated compress flag = %11!u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_pOpbResource->IsUBWCompressedRes(), ItemLong -- 10
pOpbInfo->BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp4940 329 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferHeight[0], ItemLong -- 10
pOpbInfo->BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4938 328 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferStride[0], ItemLong -- 10
pOpbInfo->BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4936 327 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferAlignment[0], ItemLong -- 10
pOpbInfo->BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4934 326 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferSize[0], ItemLong -- 10
pOpbInfo->BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4933 325 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4886 323 "%4!s!::[%!FUNC!]OPB Resource Width: %10!u! , OPB Resource Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->width, ItemLong -- 10
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4885 322 "%4!s!::[%!FUNC!]DPB width: %10!u! , Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_dpbDesc.width, ItemLong -- 10
m_dpbDesc.height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4873 321 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4755 313 "%4!s!::[%!FUNC!]Exit " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4752 312 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4744 311 "%4!s!::[%!FUNC!]Failed to alloc interlace intermediate buffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4738 310 "%4!s!::[%!FUNC!]Enable Interlace 3-PASS mode " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4711 309 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4704 308 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4688 307 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp482 43 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp465 42 "%0DPB-OPB split mode driver required, NULL DPB unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp460 41 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, after 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp454 40 "%0DPB-OPB split mode changed by OS after 1st frame, not handled " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp440 39 "%0DPB-OPB split mode driver required, failed to allocate DPB" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp415 38 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp409 37 "%4!s!::[%!FUNC!]DPB-OPB split due to OS ref_only, 1st frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp404 36 "%0DPB-OPB split due to OS ref_only is already set, not expected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp397 35 "%4!s!::[%!FUNC!]DPB-OPB split 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
splitType, ItemLong -- 10
}
#typev venusdecodedevice_cpp390 34 "%0DPB-OPB split due to OS but not DPB set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp385 33 "%0DPB-OPB split due to OS but ref_only not set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp374 32 "%4!s!::[%!FUNC!]Enter " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp629 49 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp617 48 "%0HwDecodeFrame fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp564 47 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp551 46 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp519 45 "%4!s!::[%!FUNC!]DPB Res Compress Flag = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pDpbResource->IsUBWCompressedRes(), ItemLong -- 10
}
#typev venusdecodedevice_cpp504 44 "%4!s!::[%!FUNC!]Enter profile=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp285 25 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp281 291 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp281 289 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp281 290 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp281 288 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp278 137 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp278 136 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp269 111 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp269 110 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp269 109 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp264 24 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp248 23 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp187 287 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp232 21 "%0InitDecodePictureBufferCount fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp242 22 "%0AllocateInternalVideoBuffers fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp239 135 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp239 134 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp239 133 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp213 108 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp213 107 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp213 106 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp176 20 "%4!s!::[%!FUNC!]SessionType %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
SessionType(), ItemLong -- 10
}
#typev venusdecodedevice_cpp100 14 "%0Invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp152 19 "%4!s!::[%!FUNC!]dims %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.sampleWidth, ItemLong -- 10
m_descData.sampleHeight, ItemLong -- 11
sampleMB, ItemLong -- 12
}
#typev venusdecodedevice_cpp138 18 "%4!s!::[%!FUNC!]Same DPB & OPB format, no split required %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp132 17 "%0DPB & OPB format differ %10!u! %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
m_opbFormat, ItemLong -- 11
}
#typev venusdecodedevice_cpp122 16 "%0Invalid output format %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp108 15 "%4!s!::[%!FUNC!]outputFormat = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp60 13 "%4!s!::[%!FUNC!]Decode profile = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.profile, ItemLong -- 10
}
#typev venusdecodedevice_cpp47 12 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp4169 282 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwIsContentInterlaced
{
}
#typev venusdecodedevice_cpp1575 105 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1571 104 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1564 103 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1536 102 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1517 101 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1464 100 "%0InitDecodePictureBufferList, DPB list is FULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1426 99 "%0pHeap->pMemObj NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1416 98 "%0pHeap NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1404 97 "%0pDpbResource NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1399 96 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1103 90 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp1098 89 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1091 88 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1078 87 "%4!s!::[%!FUNC!]buff reqs %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
bufferReqs.BufferAlignment[0], ItemLong -- 12
}
#typev venusdecodedevice_cpp1051 86 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp787 62 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp783 61 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp776 60 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp755 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp841 66 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp837 65 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp830 64 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp804 63 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp5000 336 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4992 334 "%0m_pDpbResource is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4997 335 "%0SubResourceInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4981 333 "%4!s!::[%!FUNC!]Aligned Buffer Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
reqOutput.stride[0], ItemLong -- 10
reqOutput.height[0], ItemLong -- 11
}
#typev venusdecodedevice_cpp4980 332 "%4!s!::[%!FUNC!]DPB Resource Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
actualResourceWidth, ItemLong -- 10
actualResourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp4963 331 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4302 286 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsVideoUBWCEnabled
{
}
#typev venusdecodedevice_cpp4295 285 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsVideoUBWCEnabled
{
}
#typev venusdecodedevice_cpp4138 281 "%0Invalid Command %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
CmdType, ItemLong -- 10
}
#typev venusdecodedevice_cpp4124 280 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4093 279 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4062 278 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4031 277 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4001 276 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3972 275 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3959 274 "%0Stop Session Submit failed: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3932 273 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3919 272 "%0Start Session Submit failed:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1034 85 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1029 84 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1022 83 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1005 82 "%4!s!::[%!FUNC!]Pixel format = %10!u!, IsCompressed = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.PixelFormat, ItemLong -- 10
bufferReqs.BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp1003 81 "%4!s!::[%!FUNC!]Resource Width = %10!u!, Resource Height     = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.resourceWidth, ItemLong -- 10
bufferReqs.resourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp999 80 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp973 78 "%0OPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp987 79 "%4!s!::[%!FUNC!]Setting following DPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp964 77 "%0DPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp950 76 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp930 75 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp925 74 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp918 73 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp900 72 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferHeight[0], ItemLong -- 10
bufferReqs.BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp898 71 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferStride[0], ItemLong -- 10
bufferReqs.BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp896 70 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferAlignment[0], ItemLong -- 10
bufferReqs.BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp894 69 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp893 68 "%4!s!::[%!FUNC!]Setting following buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp858 67 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp1601 108 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1597 107 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1592 106 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1627 111 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1623 110 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1618 109 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp2593 181 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2549 177 "%4!s!::[%!FUNC!]PicParams H264 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
refFrameList[i].sPicEntry.Index7Bits, ItemLong -- 10
refFrameList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2520 176 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2576 179 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2566 178 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2586 180 "%4!s!::[%!FUNC!]unhandled buffer type %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2512 175 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2689 188 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2646 184 "%4!s!::[%!FUNC!]PicParams HEVC sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
refFrameList[i].sPicEntry.Index7Bits, ItemLong -- 10
refFrameList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2620 183 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2673 186 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2663 185 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2683 187 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2612 182 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2751 194 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2714 190 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2734 192 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2724 191 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2744 193 "%4!s!::[%!FUNC!]unhandled buffer %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2707 189 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp4491 296 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4477 294 "%0invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4466 293 "%0invalid private data pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4421 292 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp2927 208 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2900 205 "%4!s!::[%!FUNC!]PicParams Vp8 sPicEntryIndex7Bits %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.lst_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp2888 204 "%4!s!::[%!FUNC!]PicParams Vp8 sPicEntryIndex7Bits %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.gld_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp2876 203 "%4!s!::[%!FUNC!]PicParams Vp8 sPicEntryIndex7Bits %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.alt_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp2861 202 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2910 206 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2920 207 "%0Invalid Buffer Type %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2853 201 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2835 200 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2802 197 "%4!s!::[%!FUNC!]PicParams Vp9 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
frameRefs[i].sPicEntry.Index7Bits, ItemLong -- 10
frameRefs[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2777 196 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2819 198 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2829 199 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2770 195 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp4264 284 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp2405 165 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264CurrPic
{
}
#typev venusdecodedevice_cpp2400 164 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateH264CurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2392 163 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264CurrPic
{
}
#typev venusdecodedevice_cpp2249 151 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
}
#typev venusdecodedevice_cpp2242 150 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2231 149 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
}
#typev venusdecodedevice_cpp2435 168 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcCurrPic
{
}
#typev venusdecodedevice_cpp2430 167 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcCurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2421 166 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcCurrPic
{
}
#typev venusdecodedevice_cpp2283 154 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2276 153 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2265 152 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2464 171 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8CurrPic
{
}
#typev venusdecodedevice_cpp2459 170 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8CurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2451 169 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8CurrPic
{
}
#typev venusdecodedevice_cpp2343 159 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2336 158 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2321 157 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2307 156 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2299 155 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2494 174 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9CurrPic
{
}
#typev venusdecodedevice_cpp2489 173 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9CurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2480 172 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9CurrPic
{
}
#typev venusdecodedevice_cpp2376 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
#typev venusdecodedevice_cpp2369 161 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2359 160 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
// PDB:  qcdx12arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:23:988 (UTC) [tracepdb]
#typev venusvideofactory_cpp100 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
#typev venusvideofactory_cpp100 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
// PDB:  qcdx12arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:23:988 (UTC) [tracepdb]
#typev venusdecodedevice_cpp342 29 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp323 28 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
// PDB:  qcdx12arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:23:988 (UTC) [tracepdb]
#typev venusdecodedevice_cpp357 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::~VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp356 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::~VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp357 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp356 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp1832 122 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1720 118 "%0AllocInterlaceBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1715 117 "%0AllocInterlaceBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1828 121 "%0DxResource create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1815 120 "%0DxMemObj create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1797 119 "%0Interlace Intermediate Buf DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1695 116 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp2007 132 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1876 126 "%0AllocInternalBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1871 125 "%0AllocInternalBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2003 131 "%0AllocInternalBuffer DxResource create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1990 130 "%0AllocInternalBuffer DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1972 129 "%0AllocInternalBuffer DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1942 128 "%4!s!::[%!FUNC!]video internal buffer %10!u! allocation success 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
createData.pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1927 127 "%0Invalid internal buffer index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1861 124 "%0AllocInternalBuffer allocation failed: incorrect index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1851 123 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp2040 135 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp2034 134 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp2022 133 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp1301 95 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1132 92 "%4!s!::[%!FUNC!]null arg" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1157 94 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1150 93 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1126 91 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp667 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp663 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp650 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp4639 304 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4519 298 "%0Invalid input params %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4531 299 "%0failed to calloc %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4580 301 "%0Int DPB DxResource create fail %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
m_descData.sampleWidth, ItemLong -- 11
m_descData.sampleHeight, ItemLong -- 12
}
#typev venusdecodedevice_cpp4624 303 "%0Int DPB resource DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4607 302 "%0Int DPB resource DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4573 300 "%4!s!::[%!FUNC!]Int DPB DxResource create success, corresp DxMemObj to be created" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4515 297 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp30 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp29 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp4359 287 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateVenusDecodeDeviceSchedulerCtxt
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2095 137 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp2056 136 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
// PDB:  qcdx12arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:23:988 (UTC) [tracepdb]
#typev venusdecodedevice_cpp3148 222 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3145 221 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3138 220 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3115 219 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3100 218 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3068 217 "%0HandleH264InterlaceInterweaved failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3057 216 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3026 215 "%0ValidateH264CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3023 165 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3023 164 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3023 163 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3016 214 "%0ValidateH264RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3013 151 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3013 150 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3013 149 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3004 213 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2988 212 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2978 211 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2952 210 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2947 209 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3343 236 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3340 235 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3333 234 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3310 233 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3295 232 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3274 231 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3238 229 "%0ValidateHevcCurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3235 168 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3235 167 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3235 166 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3228 228 "%0ValidateHevcRefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3225 154 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3225 153 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3225 152 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3216 227 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3200 226 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3190 225 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3173 224 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3168 223 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3479 245 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3475 244 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_vc1DecodeFrame.SliceInfo.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3468 243 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3450 242 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3436 241 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3393 240 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3378 239 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3368 238 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3363 237 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3858 271 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3855 270 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3848 269 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3825 268 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3810 267 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3789 266 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3758 265 "%0ValidateVp8CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3755 171 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3755 170 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3755 169 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3748 264 "%0ValidateVp8RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3736 263 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3720 262 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3710 261 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3693 260 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3688 259 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3668 258 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3665 257 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp9DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3658 256 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3635 255 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3620 254 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3599 253 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3568 252 "%0ValidateVp9CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3565 174 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3565 173 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3565 172 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3558 251 "%0ValidateVp9RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3555 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3555 161 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3555 160 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3546 250 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3530 249 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3520 248 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3503 247 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3498 246 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp4673 306 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyDpbResource
{
}
#typev venusdecodedevice_cpp4657 305 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyDpbResource
{
}
#typev venusdecodedevice_cpp1677 115 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1671 114 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1664 113 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1643 112 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp308 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp305 306 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp305 305 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp301 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp4399 291 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp4389 289 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp4396 290 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4379 288 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp4234 284 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DisableDpbCompression
{
}
#typev venusdecodedevice_cpp4209 283 "%4!s!::[%!FUNC!]Enabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4206 286 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4206 285 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
// PDB:  qcdx12arm64xum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:23:988 (UTC) [tracepdb]
#typev venusdecodedevice_cpp737 58 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp733 57 "%0FillBitStreamData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp726 56 "%0Invalid heap pointer in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp718 55 "%4!s!::[%!FUNC!]nInputAllocLen %10!u! nInputFilledLen %11!u! nInputStartOffset %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
pBitStream->nInputAllocLen, ItemLong -- 10
pBitStream->nInputFilledLen, ItemLong -- 11
pBitStream->nInputStartOffset, ItemLong -- 12
}
#typev venusdecodedevice_cpp709 54 "%0Error: BitStream Address is 0x0 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp688 53 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp4856 320 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4841 319 "%4!s!::[%!FUNC!]OPB Buffer Address : %10!I64u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
pOpbInfo[Plane0].PackEngineAddress, ItemULongLong -- 10
}
#typev venusdecodedevice_cpp4818 318 "%0pHeap->pMemObj invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4808 317 "%0pHeap invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4797 316 "%0pSubResInfo invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4787 315 "%0OpbResource invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4782 314 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4893 324 "%0Error: Descriptor width/height is greater than resource width/height" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4942 330 "%4!s!::[%!FUNC!]Buffer req: OPB Res compress flag = %10!u!, OPB Buffer updated compress flag = %11!u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_pOpbResource->IsUBWCompressedRes(), ItemLong -- 10
pOpbInfo->BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp4940 329 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferHeight[0], ItemLong -- 10
pOpbInfo->BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4938 328 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferStride[0], ItemLong -- 10
pOpbInfo->BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4936 327 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferAlignment[0], ItemLong -- 10
pOpbInfo->BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4934 326 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferSize[0], ItemLong -- 10
pOpbInfo->BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4933 325 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4886 323 "%4!s!::[%!FUNC!]OPB Resource Width: %10!u! , OPB Resource Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->width, ItemLong -- 10
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4885 322 "%4!s!::[%!FUNC!]DPB width: %10!u! , Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_dpbDesc.width, ItemLong -- 10
m_dpbDesc.height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4873 321 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4755 313 "%4!s!::[%!FUNC!]Exit " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4752 312 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4744 311 "%4!s!::[%!FUNC!]Failed to alloc interlace intermediate buffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4738 310 "%4!s!::[%!FUNC!]Enable Interlace 3-PASS mode " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4711 309 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4704 308 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4688 307 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp482 43 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp465 42 "%0DPB-OPB split mode driver required, NULL DPB unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp460 41 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, after 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp454 40 "%0DPB-OPB split mode changed by OS after 1st frame, not handled " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp440 39 "%0DPB-OPB split mode driver required, failed to allocate DPB" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp415 38 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp409 37 "%4!s!::[%!FUNC!]DPB-OPB split due to OS ref_only, 1st frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp404 36 "%0DPB-OPB split due to OS ref_only is already set, not expected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp397 35 "%4!s!::[%!FUNC!]DPB-OPB split 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
splitType, ItemLong -- 10
}
#typev venusdecodedevice_cpp390 34 "%0DPB-OPB split due to OS but not DPB set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp385 33 "%0DPB-OPB split due to OS but ref_only not set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp374 32 "%4!s!::[%!FUNC!]Enter " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp629 49 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp617 48 "%0HwDecodeFrame fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp564 47 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp551 46 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp519 45 "%4!s!::[%!FUNC!]DPB Res Compress Flag = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pDpbResource->IsUBWCompressedRes(), ItemLong -- 10
}
#typev venusdecodedevice_cpp504 44 "%4!s!::[%!FUNC!]Enter profile=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp285 25 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp281 291 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp281 289 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp281 290 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp281 288 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp269 111 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp269 110 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp269 109 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp264 24 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp248 23 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp187 287 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp232 21 "%0InitDecodePictureBufferCount fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp242 22 "%0AllocateInternalVideoBuffers fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp239 135 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp239 134 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp239 133 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp213 108 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp213 107 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp213 106 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp176 20 "%4!s!::[%!FUNC!]SessionType %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
SessionType(), ItemLong -- 10
}
#typev venusdecodedevice_cpp100 14 "%0Invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp152 19 "%4!s!::[%!FUNC!]dims %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.sampleWidth, ItemLong -- 10
m_descData.sampleHeight, ItemLong -- 11
sampleMB, ItemLong -- 12
}
#typev venusdecodedevice_cpp138 18 "%4!s!::[%!FUNC!]Same DPB & OPB format, no split required %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp132 17 "%0DPB & OPB format differ %10!u! %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
m_opbFormat, ItemLong -- 11
}
#typev venusdecodedevice_cpp122 16 "%0Invalid output format %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp108 15 "%4!s!::[%!FUNC!]outputFormat = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp60 13 "%4!s!::[%!FUNC!]Decode profile = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.profile, ItemLong -- 10
}
#typev venusdecodedevice_cpp47 12 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp4169 282 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwIsContentInterlaced
{
}
#typev venusdecodedevice_cpp1575 105 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1571 104 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1564 103 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1536 102 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1517 101 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1464 100 "%0InitDecodePictureBufferList, DPB list is FULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1426 99 "%0pHeap->pMemObj NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1416 98 "%0pHeap NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1404 97 "%0pDpbResource NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1399 96 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1103 90 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp1098 89 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1091 88 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1078 87 "%4!s!::[%!FUNC!]buff reqs %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
bufferReqs.BufferAlignment[0], ItemLong -- 12
}
#typev venusdecodedevice_cpp1051 86 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp787 62 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp783 61 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp776 60 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp755 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp841 66 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp837 65 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp830 64 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp804 63 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp5000 336 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4992 334 "%0m_pDpbResource is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4997 335 "%0SubResourceInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4981 333 "%4!s!::[%!FUNC!]Aligned Buffer Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
reqOutput.stride[0], ItemLong -- 10
reqOutput.height[0], ItemLong -- 11
}
#typev venusdecodedevice_cpp4980 332 "%4!s!::[%!FUNC!]DPB Resource Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
actualResourceWidth, ItemLong -- 10
actualResourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp4963 331 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4302 286 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsVideoUBWCEnabled
{
}
#typev venusdecodedevice_cpp4295 285 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsVideoUBWCEnabled
{
}
#typev venusdecodedevice_cpp4138 281 "%0Invalid Command %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
CmdType, ItemLong -- 10
}
#typev venusdecodedevice_cpp4124 280 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4093 279 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4062 278 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4031 277 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4001 276 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3972 275 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3959 274 "%0Stop Session Submit failed: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3932 273 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3919 272 "%0Start Session Submit failed:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1034 85 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1029 84 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1022 83 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1005 82 "%4!s!::[%!FUNC!]Pixel format = %10!u!, IsCompressed = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.PixelFormat, ItemLong -- 10
bufferReqs.BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp1003 81 "%4!s!::[%!FUNC!]Resource Width = %10!u!, Resource Height     = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.resourceWidth, ItemLong -- 10
bufferReqs.resourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp999 80 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp973 78 "%0OPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp987 79 "%4!s!::[%!FUNC!]Setting following DPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp964 77 "%0DPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp950 76 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp930 75 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp925 74 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp918 73 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp900 72 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferHeight[0], ItemLong -- 10
bufferReqs.BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp898 71 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferStride[0], ItemLong -- 10
bufferReqs.BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp896 70 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferAlignment[0], ItemLong -- 10
bufferReqs.BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp894 69 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp893 68 "%4!s!::[%!FUNC!]Setting following buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp858 67 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp1601 108 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1597 107 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1592 106 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1627 111 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1623 110 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1618 109 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp2593 181 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2549 177 "%4!s!::[%!FUNC!]PicParams H264 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
refFrameList[i].sPicEntry.Index7Bits, ItemLong -- 10
refFrameList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2520 176 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2576 179 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2566 178 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2586 180 "%4!s!::[%!FUNC!]unhandled buffer type %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2512 175 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2689 188 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2646 184 "%4!s!::[%!FUNC!]PicParams HEVC sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
refFrameList[i].sPicEntry.Index7Bits, ItemLong -- 10
refFrameList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2620 183 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2673 186 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2663 185 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2683 187 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2612 182 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2751 194 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2714 190 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2734 192 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2724 191 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2744 193 "%4!s!::[%!FUNC!]unhandled buffer %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2707 189 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp4491 296 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4477 294 "%0invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4466 293 "%0invalid private data pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4421 292 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp2927 208 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2900 205 "%4!s!::[%!FUNC!]PicParams Vp8 sPicEntryIndex7Bits %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.lst_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp2888 204 "%4!s!::[%!FUNC!]PicParams Vp8 sPicEntryIndex7Bits %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.gld_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp2876 203 "%4!s!::[%!FUNC!]PicParams Vp8 sPicEntryIndex7Bits %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.alt_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp2861 202 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2910 206 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2920 207 "%0Invalid Buffer Type %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2853 201 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2835 200 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2802 197 "%4!s!::[%!FUNC!]PicParams Vp9 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
frameRefs[i].sPicEntry.Index7Bits, ItemLong -- 10
frameRefs[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2777 196 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2819 198 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2829 199 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2770 195 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp4264 284 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp2405 165 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264CurrPic
{
}
#typev venusdecodedevice_cpp2400 164 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateH264CurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2392 163 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264CurrPic
{
}
#typev venusdecodedevice_cpp2249 151 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
}
#typev venusdecodedevice_cpp2242 150 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2231 149 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
}
#typev venusdecodedevice_cpp2435 168 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcCurrPic
{
}
#typev venusdecodedevice_cpp2430 167 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcCurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2421 166 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcCurrPic
{
}
#typev venusdecodedevice_cpp2283 154 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2276 153 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2265 152 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2464 171 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8CurrPic
{
}
#typev venusdecodedevice_cpp2459 170 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8CurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2451 169 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8CurrPic
{
}
#typev venusdecodedevice_cpp2343 159 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2336 158 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2321 157 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2307 156 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2299 155 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2494 174 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9CurrPic
{
}
#typev venusdecodedevice_cpp2489 173 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9CurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2480 172 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9CurrPic
{
}
#typev venusdecodedevice_cpp2376 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
#typev venusdecodedevice_cpp2369 161 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2359 160 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
// PDB:  qcdx12chpeum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:37:258 (UTC) [tracepdb]
#typev venusvideofactory_cpp100 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
#typev venusvideofactory_cpp100 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
// PDB:  qcdx12chpeum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:37:258 (UTC) [tracepdb]
#typev venusdecodedevice_cpp342 29 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp323 28 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
// PDB:  qcdx12chpeum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:37:258 (UTC) [tracepdb]
#typev venusdecodedevice_cpp357 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::~VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp356 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::~VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp357 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp356 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp1832 122 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1720 118 "%0AllocInterlaceBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1715 117 "%0AllocInterlaceBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1828 121 "%0DxResource create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1815 120 "%0DxMemObj create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1797 119 "%0Interlace Intermediate Buf DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1695 116 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp2007 132 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1876 126 "%0AllocInternalBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1871 125 "%0AllocInternalBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2003 131 "%0AllocInternalBuffer DxResource create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1990 130 "%0AllocInternalBuffer DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1972 129 "%0AllocInternalBuffer DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1942 128 "%4!s!::[%!FUNC!]video internal buffer %10!u! allocation success 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
createData.pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1927 127 "%0Invalid internal buffer index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1861 124 "%0AllocInternalBuffer allocation failed: incorrect index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1851 123 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp2040 135 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp2034 134 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp2022 133 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp1301 95 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1132 92 "%4!s!::[%!FUNC!]null arg" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1157 94 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1150 93 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1126 91 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp667 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp663 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp650 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp4639 304 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4519 298 "%0Invalid input params %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4531 299 "%0failed to calloc %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4580 301 "%0Int DPB DxResource create fail %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
m_descData.sampleWidth, ItemLong -- 11
m_descData.sampleHeight, ItemLong -- 12
}
#typev venusdecodedevice_cpp4624 303 "%0Int DPB resource DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4607 302 "%0Int DPB resource DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4573 300 "%4!s!::[%!FUNC!]Int DPB DxResource create success, corresp DxMemObj to be created" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4515 297 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp30 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp29 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp4359 287 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateVenusDecodeDeviceSchedulerCtxt
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2095 137 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp2056 136 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
// PDB:  qcdx12chpeum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:37:258 (UTC) [tracepdb]
#typev venusdecodedevice_cpp3148 222 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3145 221 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3138 220 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3115 219 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3100 218 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3068 217 "%0HandleH264InterlaceInterweaved failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3057 216 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3026 215 "%0ValidateH264CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3023 165 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3023 164 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3023 163 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3016 214 "%0ValidateH264RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3013 151 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3013 150 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3013 149 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3004 213 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2988 212 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2978 211 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2952 210 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2947 209 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3343 236 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3340 235 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3333 234 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3310 233 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3295 232 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3274 231 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3238 229 "%0ValidateHevcCurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3235 168 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3235 167 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3235 166 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3228 228 "%0ValidateHevcRefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3225 154 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3225 153 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3225 152 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3216 227 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3200 226 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3190 225 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3173 224 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3168 223 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3479 245 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3475 244 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_vc1DecodeFrame.SliceInfo.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3468 243 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3450 242 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3436 241 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3393 240 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3378 239 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3368 238 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3363 237 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3858 271 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3855 270 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3848 269 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3825 268 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3810 267 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3789 266 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3758 265 "%0ValidateVp8CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3755 171 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3755 170 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3755 169 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3748 264 "%0ValidateVp8RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3736 263 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3720 262 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3710 261 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3693 260 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3688 259 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3668 258 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3665 257 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp9DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3658 256 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3635 255 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3620 254 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3599 253 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3568 252 "%0ValidateVp9CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3565 174 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3565 173 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3565 172 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3558 251 "%0ValidateVp9RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3555 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3555 161 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3555 160 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3546 250 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3530 249 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3520 248 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3503 247 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3498 246 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp4673 306 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyDpbResource
{
}
#typev venusdecodedevice_cpp4657 305 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyDpbResource
{
}
#typev venusdecodedevice_cpp1677 115 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1671 114 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1664 113 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1643 112 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp308 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp305 306 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp305 305 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp301 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp4399 291 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp4389 289 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp4396 290 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4379 288 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp4234 284 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DisableDpbCompression
{
}
#typev venusdecodedevice_cpp4209 283 "%4!s!::[%!FUNC!]Enabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4206 286 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4206 285 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
// PDB:  qcdx12chpeum7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:37:258 (UTC) [tracepdb]
#typev venusdecodedevice_cpp737 58 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp733 57 "%0FillBitStreamData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp726 56 "%0Invalid heap pointer in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp718 55 "%4!s!::[%!FUNC!]nInputAllocLen %10!u! nInputFilledLen %11!u! nInputStartOffset %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
pBitStream->nInputAllocLen, ItemLong -- 10
pBitStream->nInputFilledLen, ItemLong -- 11
pBitStream->nInputStartOffset, ItemLong -- 12
}
#typev venusdecodedevice_cpp709 54 "%0Error: BitStream Address is 0x0 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp688 53 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp4856 320 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4841 319 "%4!s!::[%!FUNC!]OPB Buffer Address : %10!I64u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
pOpbInfo[Plane0].PackEngineAddress, ItemULongLong -- 10
}
#typev venusdecodedevice_cpp4818 318 "%0pHeap->pMemObj invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4808 317 "%0pHeap invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4797 316 "%0pSubResInfo invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4787 315 "%0OpbResource invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4782 314 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4893 324 "%0Error: Descriptor width/height is greater than resource width/height" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4942 330 "%4!s!::[%!FUNC!]Buffer req: OPB Res compress flag = %10!u!, OPB Buffer updated compress flag = %11!u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_pOpbResource->IsUBWCompressedRes(), ItemLong -- 10
pOpbInfo->BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp4940 329 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferHeight[0], ItemLong -- 10
pOpbInfo->BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4938 328 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferStride[0], ItemLong -- 10
pOpbInfo->BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4936 327 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferAlignment[0], ItemLong -- 10
pOpbInfo->BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4934 326 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferSize[0], ItemLong -- 10
pOpbInfo->BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4933 325 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4886 323 "%4!s!::[%!FUNC!]OPB Resource Width: %10!u! , OPB Resource Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->width, ItemLong -- 10
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4885 322 "%4!s!::[%!FUNC!]DPB width: %10!u! , Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_dpbDesc.width, ItemLong -- 10
m_dpbDesc.height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4873 321 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4755 313 "%4!s!::[%!FUNC!]Exit " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4752 312 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4744 311 "%4!s!::[%!FUNC!]Failed to alloc interlace intermediate buffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4738 310 "%4!s!::[%!FUNC!]Enable Interlace 3-PASS mode " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4711 309 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4704 308 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4688 307 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp482 43 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp465 42 "%0DPB-OPB split mode driver required, NULL DPB unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp460 41 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, after 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp454 40 "%0DPB-OPB split mode changed by OS after 1st frame, not handled " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp440 39 "%0DPB-OPB split mode driver required, failed to allocate DPB" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp415 38 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp409 37 "%4!s!::[%!FUNC!]DPB-OPB split due to OS ref_only, 1st frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp404 36 "%0DPB-OPB split due to OS ref_only is already set, not expected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp397 35 "%4!s!::[%!FUNC!]DPB-OPB split 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
splitType, ItemLong -- 10
}
#typev venusdecodedevice_cpp390 34 "%0DPB-OPB split due to OS but not DPB set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp385 33 "%0DPB-OPB split due to OS but ref_only not set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp374 32 "%4!s!::[%!FUNC!]Enter " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp629 49 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp617 48 "%0HwDecodeFrame fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp564 47 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp551 46 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp519 45 "%4!s!::[%!FUNC!]DPB Res Compress Flag = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pDpbResource->IsUBWCompressedRes(), ItemLong -- 10
}
#typev venusdecodedevice_cpp504 44 "%4!s!::[%!FUNC!]Enter profile=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp285 25 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp281 291 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp281 289 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp281 290 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp281 288 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp269 111 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp269 110 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp269 109 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp264 24 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp248 23 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp187 287 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp232 21 "%0InitDecodePictureBufferCount fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp242 22 "%0AllocateInternalVideoBuffers fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp239 135 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp239 134 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp239 133 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp213 108 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp213 107 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp213 106 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp176 20 "%4!s!::[%!FUNC!]SessionType %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
SessionType(), ItemLong -- 10
}
#typev venusdecodedevice_cpp100 14 "%0Invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp152 19 "%4!s!::[%!FUNC!]dims %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.sampleWidth, ItemLong -- 10
m_descData.sampleHeight, ItemLong -- 11
sampleMB, ItemLong -- 12
}
#typev venusdecodedevice_cpp138 18 "%4!s!::[%!FUNC!]Same DPB & OPB format, no split required %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp132 17 "%0DPB & OPB format differ %10!u! %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
m_opbFormat, ItemLong -- 11
}
#typev venusdecodedevice_cpp122 16 "%0Invalid output format %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp108 15 "%4!s!::[%!FUNC!]outputFormat = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp60 13 "%4!s!::[%!FUNC!]Decode profile = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.profile, ItemLong -- 10
}
#typev venusdecodedevice_cpp47 12 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp4169 282 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwIsContentInterlaced
{
}
#typev venusdecodedevice_cpp1575 105 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1571 104 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1564 103 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1536 102 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1517 101 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1464 100 "%0InitDecodePictureBufferList, DPB list is FULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1426 99 "%0pHeap->pMemObj NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1416 98 "%0pHeap NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1404 97 "%0pDpbResource NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1399 96 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1103 90 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp1098 89 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1091 88 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1078 87 "%4!s!::[%!FUNC!]buff reqs %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
bufferReqs.BufferAlignment[0], ItemLong -- 12
}
#typev venusdecodedevice_cpp1051 86 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp787 62 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp783 61 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp776 60 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp755 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp841 66 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp837 65 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp830 64 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp804 63 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp5000 336 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4992 334 "%0m_pDpbResource is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4997 335 "%0SubResourceInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4981 333 "%4!s!::[%!FUNC!]Aligned Buffer Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
reqOutput.stride[0], ItemLong -- 10
reqOutput.height[0], ItemLong -- 11
}
#typev venusdecodedevice_cpp4980 332 "%4!s!::[%!FUNC!]DPB Resource Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
actualResourceWidth, ItemLong -- 10
actualResourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp4963 331 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4302 286 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsVideoUBWCEnabled
{
}
#typev venusdecodedevice_cpp4295 285 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsVideoUBWCEnabled
{
}
#typev venusdecodedevice_cpp4138 281 "%0Invalid Command %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
CmdType, ItemLong -- 10
}
#typev venusdecodedevice_cpp4124 280 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4093 279 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4062 278 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4031 277 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4001 276 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3972 275 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3959 274 "%0Stop Session Submit failed: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3932 273 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3919 272 "%0Start Session Submit failed:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1034 85 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1029 84 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1022 83 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1005 82 "%4!s!::[%!FUNC!]Pixel format = %10!u!, IsCompressed = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.PixelFormat, ItemLong -- 10
bufferReqs.BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp1003 81 "%4!s!::[%!FUNC!]Resource Width = %10!u!, Resource Height     = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.resourceWidth, ItemLong -- 10
bufferReqs.resourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp999 80 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp973 78 "%0OPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp987 79 "%4!s!::[%!FUNC!]Setting following DPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp964 77 "%0DPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp950 76 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp930 75 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp925 74 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp918 73 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp900 72 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferHeight[0], ItemLong -- 10
bufferReqs.BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp898 71 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferStride[0], ItemLong -- 10
bufferReqs.BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp896 70 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferAlignment[0], ItemLong -- 10
bufferReqs.BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp894 69 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp893 68 "%4!s!::[%!FUNC!]Setting following buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp858 67 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp1601 108 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1597 107 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1592 106 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1627 111 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1623 110 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1618 109 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp2593 181 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2549 177 "%4!s!::[%!FUNC!]PicParams H264 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
refFrameList[i].sPicEntry.Index7Bits, ItemLong -- 10
refFrameList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2520 176 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2576 179 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2566 178 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2586 180 "%4!s!::[%!FUNC!]unhandled buffer type %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2512 175 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2689 188 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2646 184 "%4!s!::[%!FUNC!]PicParams HEVC sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
refFrameList[i].sPicEntry.Index7Bits, ItemLong -- 10
refFrameList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2620 183 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2673 186 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2663 185 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2683 187 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2612 182 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2751 194 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2714 190 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2734 192 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2724 191 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2744 193 "%4!s!::[%!FUNC!]unhandled buffer %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2707 189 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp4491 296 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4477 294 "%0invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4466 293 "%0invalid private data pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4421 292 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp2927 208 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2900 205 "%4!s!::[%!FUNC!]PicParams Vp8 sPicEntryIndex7Bits %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.lst_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp2888 204 "%4!s!::[%!FUNC!]PicParams Vp8 sPicEntryIndex7Bits %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.gld_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp2876 203 "%4!s!::[%!FUNC!]PicParams Vp8 sPicEntryIndex7Bits %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.alt_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp2861 202 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2910 206 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2920 207 "%0Invalid Buffer Type %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2853 201 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2835 200 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2802 197 "%4!s!::[%!FUNC!]PicParams Vp9 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
frameRefs[i].sPicEntry.Index7Bits, ItemLong -- 10
frameRefs[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2777 196 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2819 198 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2829 199 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2770 195 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp4264 284 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp2405 165 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264CurrPic
{
}
#typev venusdecodedevice_cpp2400 164 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateH264CurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2392 163 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264CurrPic
{
}
#typev venusdecodedevice_cpp2249 151 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
}
#typev venusdecodedevice_cpp2242 150 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2231 149 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
}
#typev venusdecodedevice_cpp2435 168 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcCurrPic
{
}
#typev venusdecodedevice_cpp2430 167 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcCurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2421 166 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcCurrPic
{
}
#typev venusdecodedevice_cpp2283 154 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2276 153 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2265 152 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2464 171 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8CurrPic
{
}
#typev venusdecodedevice_cpp2459 170 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8CurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2451 169 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8CurrPic
{
}
#typev venusdecodedevice_cpp2343 159 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2336 158 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2321 157 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2307 156 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2299 155 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2494 174 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9CurrPic
{
}
#typev venusdecodedevice_cpp2489 173 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9CurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2480 172 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9CurrPic
{
}
#typev venusdecodedevice_cpp2376 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
#typev venusdecodedevice_cpp2369 161 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2359 160 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
// PDB:  qcdx12x86um7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:20:268 (UTC) [tracepdb]
#typev venusvideofactory_cpp100 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
#typev venusvideofactory_cpp100 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusVideoFactory::HwCreateDecodeDevice
{
}
// PDB:  qcdx12x86um7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:20:268 (UTC) [tracepdb]
#typev venusdecodedevice_cpp342 29 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp323 28 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::VenusDecodeDevice
{
}
// PDB:  qcdx12x86um7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:20:268 (UTC) [tracepdb]
#typev venusdecodedevice_cpp357 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::~VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp356 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::~VenusDecodeDevice
{
}
#typev venusdecodedevice_cpp357 31 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp356 30 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::`scalar deleting destructor'
{
}
#typev venusdecodedevice_cpp1832 122 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1720 118 "%0AllocInterlaceBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1715 117 "%0AllocInterlaceBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1828 121 "%0DxResource create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1815 120 "%0DxMemObj create for Interlace Intermediate Buf failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1797 119 "%0Interlace Intermediate Buf DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp1695 116 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInterlaceIntermediateBuffer
{
}
#typev venusdecodedevice_cpp2007 132 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1876 126 "%0AllocInternalBuffer allocation failed: INVALID Mem Obj handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppMemObj, ItemPtr -- 10
}
#typev venusdecodedevice_cpp1871 125 "%0AllocInternalBuffer allocation failed: INVALID Resource handle %10!p!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
ppInternalResource, ItemPtr -- 10
}
#typev venusdecodedevice_cpp2003 131 "%0AllocInternalBuffer DxResource create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1990 130 "%0AllocInternalBuffer DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1972 129 "%0AllocInternalBuffer DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp1942 128 "%4!s!::[%!FUNC!]video internal buffer %10!u! allocation success 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
createData.pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp1932 127 "%0Invalid internal buffer index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1861 124 "%0AllocInternalBuffer allocation failed: incorrect index %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
indx, ItemLong -- 10
}
#typev venusdecodedevice_cpp1851 123 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocInternalBuffer
{
}
#typev venusdecodedevice_cpp2040 135 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp2034 134 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp2022 133 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::AllocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp1301 95 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1132 92 "%4!s!::[%!FUNC!]null arg" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1157 94 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1150 93 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp1126 91 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CalculateBufferReq
{
}
#typev venusdecodedevice_cpp667 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp663 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp650 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CopyBufferData
{
}
#typev venusdecodedevice_cpp4639 304 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4519 298 "%0Invalid input params %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4531 299 "%0failed to calloc %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
}
#typev venusdecodedevice_cpp4580 301 "%0Int DPB DxResource create fail %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
numSubRes, ItemLong -- 10
m_descData.sampleWidth, ItemLong -- 11
m_descData.sampleHeight, ItemLong -- 12
}
#typev venusdecodedevice_cpp4624 303 "%0Int DPB resource DxMemObj create failed %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4607 302 "%0Int DPB resource DxMemObj DxHeap create failed" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4573 300 "%4!s!::[%!FUNC!]Int DPB DxResource create success, corresp DxMemObj to be created" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp4515 297 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateDpbResource
{
}
#typev venusdecodedevice_cpp30 11 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp29 10 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::CreateObject
{
}
#typev venusdecodedevice_cpp4359 287 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::CreateVenusDecodeDeviceSchedulerCtxt
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2095 137 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
#typev venusdecodedevice_cpp2056 136 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DeallocVideoDecInternalBuffers
{
}
// PDB:  qcdx12x86um7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:20:268 (UTC) [tracepdb]
#typev venusdecodedevice_cpp3148 222 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3145 221 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_h264DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3138 220 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3115 219 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3100 218 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3068 217 "%0HandleH264InterlaceInterweaved failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3057 216 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3026 215 "%0ValidateH264CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3023 165 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3023 164 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3023 163 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3016 214 "%0ValidateH264RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3013 151 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3013 150 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3013 149 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3004 213 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2988 212 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2978 211 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2952 210 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp2947 209 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeH264Frame
{
}
#typev venusdecodedevice_cpp3343 236 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3340 235 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_hevcDecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3333 234 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3310 233 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3295 232 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3274 231 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3238 229 "%0ValidateHevcCurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3235 168 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3235 167 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3235 166 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3228 228 "%0ValidateHevcRefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3225 154 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3225 153 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3225 152 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3216 227 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3200 226 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3190 225 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3173 224 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3168 223 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeHevcFrame
{
}
#typev venusdecodedevice_cpp3479 245 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3475 244 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_vc1DecodeFrame.SliceInfo.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3468 243 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3450 242 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3436 241 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3393 240 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3378 239 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3368 238 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3363 237 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVc1Frame
{
}
#typev venusdecodedevice_cpp3858 271 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3855 270 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_vp8DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3848 269 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3825 268 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3810 267 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3789 266 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3758 265 "%0ValidateVp8CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3755 171 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3755 170 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3755 169 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3748 264 "%0ValidateVp8RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3736 263 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3720 262 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3710 261 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3693 260 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3688 259 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp8Frame
{
}
#typev venusdecodedevice_cpp3668 258 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3665 257 "%0Bad Slice detected in bit stream %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_vp9DecodeFrame.SliceHeader.wBadSliceChopping, ItemLong -- 10
}
#typev venusdecodedevice_cpp3658 256 "%0PrepareVideoCommand failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3635 255 "%0FillBitStreamData failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3620 254 "%0FillOpbInfo failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3599 253 "%0Error: Internal Buffer Eng Address [%10!d!] is 0x0 0x%11!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
i, ItemLong -- 10
result, ItemLong -- 11
}
#typev venusdecodedevice_cpp3568 252 "%0ValidateVp9CurrPic failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3565 174 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3565 173 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3565 172 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3558 251 "%0ValidateVp9RefFrameList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3555 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3555 161 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3555 160 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp3546 250 "%0SetDecodeNewBufRequirement failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3530 249 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3520 248 "%0InitDecodePictureBufferList failed 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3503 247 "%4!s!::[%!FUNC!]updateDpbList %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
m_stateFlags.updateDpbList, ItemLong -- 10
}
#typev venusdecodedevice_cpp3498 246 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DecodeVp9Frame
{
}
#typev venusdecodedevice_cpp4673 306 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyDpbResource
{
}
#typev venusdecodedevice_cpp4657 305 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyDpbResource
{
}
#typev venusdecodedevice_cpp1677 115 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1671 114 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1664 113 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1643 112 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyEngineDecodeSession
{
}
#typev venusdecodedevice_cpp308 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp305 306 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp305 305 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp301 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyResources
{
}
#typev venusdecodedevice_cpp4399 291 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp4389 289 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp4396 290 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp4379 288 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DestroyVenusDecodeDeviceSchedulerCtxt
{
}
#typev venusdecodedevice_cpp4234 284 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::DisableDpbCompression
{
}
#typev venusdecodedevice_cpp4209 283 "%4!s!::[%!FUNC!]Enabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4206 286 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
#typev venusdecodedevice_cpp4206 285 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::EnableDpbCompression
{
}
// PDB:  qcdx12x86um7180.pdb
// PDB:  Last Updated :2021-10-17:21:54:20:268 (UTC) [tracepdb]
#typev venusdecodedevice_cpp737 58 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp733 57 "%0FillBitStreamData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp726 56 "%0Invalid heap pointer in FillBitStreamData " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp718 55 "%4!s!::[%!FUNC!]nInputAllocLen %10!u! nInputFilledLen %11!u! nInputStartOffset %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
pBitStream->nInputAllocLen, ItemLong -- 10
pBitStream->nInputFilledLen, ItemLong -- 11
pBitStream->nInputStartOffset, ItemLong -- 12
}
#typev venusdecodedevice_cpp709 54 "%0Error: BitStream Address is 0x0 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp688 53 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillBitStreamData
{
}
#typev venusdecodedevice_cpp4856 320 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4841 319 "%4!s!::[%!FUNC!]OPB Buffer Address : %10!I64u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
pOpbInfo[Plane0].PackEngineAddress, ItemULongLong -- 10
}
#typev venusdecodedevice_cpp4818 318 "%0pHeap->pMemObj invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4808 317 "%0pHeap invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4797 316 "%0pSubResInfo invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4787 315 "%0OpbResource invalid" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4782 314 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbAddress
{
}
#typev venusdecodedevice_cpp4893 324 "%0Error: Descriptor width/height is greater than resource width/height" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4942 330 "%4!s!::[%!FUNC!]Buffer req: OPB Res compress flag = %10!u!, OPB Buffer updated compress flag = %11!u! " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_pOpbResource->IsUBWCompressedRes(), ItemLong -- 10
pOpbInfo->BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp4940 329 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferHeight[0], ItemLong -- 10
pOpbInfo->BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4938 328 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferStride[0], ItemLong -- 10
pOpbInfo->BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4936 327 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferAlignment[0], ItemLong -- 10
pOpbInfo->BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4934 326 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pOpbInfo->BufferSize[0], ItemLong -- 10
pOpbInfo->BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp4933 325 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4886 323 "%4!s!::[%!FUNC!]OPB Resource Width: %10!u! , OPB Resource Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->width, ItemLong -- 10
pDecFrameData->pOPBBuffer->SubResourceInfo(0)->height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4885 322 "%4!s!::[%!FUNC!]DPB width: %10!u! , Height %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
m_dpbDesc.width, ItemLong -- 10
m_dpbDesc.height, ItemLong -- 11
}
#typev venusdecodedevice_cpp4873 321 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::FillOpbInfo
{
}
#typev venusdecodedevice_cpp4755 313 "%4!s!::[%!FUNC!]Exit " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4752 312 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4744 311 "%4!s!::[%!FUNC!]Failed to alloc interlace intermediate buffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4738 310 "%4!s!::[%!FUNC!]Enable Interlace 3-PASS mode " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4711 309 "%4!s!::[%!FUNC!]null device pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4704 308 "%4!s!::[%!FUNC!]null Adapter pointer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp4688 307 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HandleH264InterlaceInterweaved
{
}
#typev venusdecodedevice_cpp482 43 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp465 42 "%0DPB-OPB split mode driver required, NULL DPB unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp460 41 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, after 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp454 40 "%0DPB-OPB split mode changed by OS after 1st frame, not handled " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp440 39 "%0DPB-OPB split mode driver required, failed to allocate DPB" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp415 38 "%4!s!::[%!FUNC!]DPB-OPB split due to driver, 1st frame " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp409 37 "%4!s!::[%!FUNC!]DPB-OPB split due to OS ref_only, 1st frame" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp404 36 "%0DPB-OPB split due to OS ref_only is already set, not expected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp397 35 "%4!s!::[%!FUNC!]DPB-OPB split 0x%10!x!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
splitType, ItemLong -- 10
}
#typev venusdecodedevice_cpp390 34 "%0DPB-OPB split due to OS but not DPB set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp385 33 "%0DPB-OPB split due to OS but ref_only not set, unexpected" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp374 32 "%4!s!::[%!FUNC!]Enter " //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecidePostProc
{
}
#typev venusdecodedevice_cpp629 49 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
}
#typev venusdecodedevice_cpp617 48 "%0HwDecodeFrame fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp564 47 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp551 46 "%0SendPredication failed in HwDecodeFrame 0x%10!x!, %11!d! " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
result, ItemLong -- 10
m_isPredicationEnabled, ItemLong -- 11
}
#typev venusdecodedevice_cpp519 45 "%4!s!::[%!FUNC!]DPB Res Compress Flag = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
m_pDpbResource->IsUBWCompressedRes(), ItemLong -- 10
}
#typev venusdecodedevice_cpp504 44 "%4!s!::[%!FUNC!]Enter profile=%10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDecodeFrame
{
Profile(), ItemLong -- 10
}
#typev venusdecodedevice_cpp285 25 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp281 291 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp281 289 "%0Invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp281 290 "%0Destroy Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp281 288 "%4!s!::[%!FUNC!]Entry" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp278 137 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp278 136 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp275 27 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp275 306 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp275 305 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp275 26 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp269 111 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp269 110 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp269 109 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp264 24 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwDestroy
{
}
#typev venusdecodedevice_cpp248 23 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp187 287 "%0Create Video Scheduler Ctxt Failed in venus decode device: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp232 21 "%0InitDecodePictureBufferCount fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp242 22 "%0AllocateInternalVideoBuffers fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp239 135 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp239 134 "%4!s!::[%!FUNC!]Internal Decode Buffer [%10!d!] allocated: 0x%11!p!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
indx, ItemLong -- 10
m_pVideoIntBuffer[indx].pResource, ItemPtr -- 11
}
#typev venusdecodedevice_cpp239 133 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp213 108 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp213 107 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp213 106 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp193 62 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp193 61 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp193 60 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp193 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp176 20 "%4!s!::[%!FUNC!]SessionType %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
SessionType(), ItemLong -- 10
}
#typev venusdecodedevice_cpp100 14 "%0Invalid Profile" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp152 19 "%4!s!::[%!FUNC!]dims %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.sampleWidth, ItemLong -- 10
m_descData.sampleHeight, ItemLong -- 11
sampleMB, ItemLong -- 12
}
#typev venusdecodedevice_cpp138 18 "%4!s!::[%!FUNC!]Same DPB & OPB format, no split required %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp132 17 "%0DPB & OPB format differ %10!u! %11!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_dpbFormat, ItemLong -- 10
m_opbFormat, ItemLong -- 11
}
#typev venusdecodedevice_cpp122 16 "%0Invalid output format %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp108 15 "%4!s!::[%!FUNC!]outputFormat = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.outputFormat, ItemLong -- 10
}
#typev venusdecodedevice_cpp60 13 "%4!s!::[%!FUNC!]Decode profile = %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
m_descData.profile, ItemLong -- 10
}
#typev venusdecodedevice_cpp47 12 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::HwInit
{
}
#typev venusdecodedevice_cpp4169 282 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::HwIsContentInterlaced
{
}
#typev venusdecodedevice_cpp1575 105 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1571 104 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1564 103 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1536 102 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferCount
{
}
#typev venusdecodedevice_cpp1517 101 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1464 100 "%0InitDecodePictureBufferList, DPB list is FULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1426 99 "%0pHeap->pMemObj NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1416 98 "%0pHeap NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1404 97 "%0pDpbResource NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1399 96 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitDecodePictureBufferList
{
}
#typev venusdecodedevice_cpp1103 90 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp1098 89 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1091 88 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1076 87 "%4!s!::[%!FUNC!]buff reqs %10!u! %11!u! %12!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
bufferReqs.BufferAlignment[0], ItemLong -- 12
}
#typev venusdecodedevice_cpp1051 86 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeBSBufferRequirements
{
}
#typev venusdecodedevice_cpp787 62 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp783 61 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp776 60 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp755 59 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSession
{
}
#typev venusdecodedevice_cpp841 66 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp837 65 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp830 64 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp804 63 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::InitEngineDecodeSessionDescriptor
{
}
#typev venusdecodedevice_cpp5000 336 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4992 334 "%0m_pDpbResource is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4997 335 "%0SubResourceInfo is NULL" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4981 333 "%4!s!::[%!FUNC!]Aligned Buffer Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
reqOutput.stride[0], ItemLong -- 10
reqOutput.height[0], ItemLong -- 11
}
#typev venusdecodedevice_cpp4980 332 "%4!s!::[%!FUNC!]DPB Resource Width = %10!u!, Height = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
actualResourceWidth, ItemLong -- 10
actualResourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp4963 331 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsOutputResSizeMatchSesResolution
{
}
#typev venusdecodedevice_cpp4302 286 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsVideoUBWCEnabled
{
}
#typev venusdecodedevice_cpp4295 285 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::IsVideoUBWCEnabled
{
}
#typev venusdecodedevice_cpp4138 281 "%0Invalid Command %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
CmdType, ItemLong -- 10
}
#typev venusdecodedevice_cpp4124 280 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4093 279 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4062 278 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4031 277 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp4001 276 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3972 275 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3959 274 "%0Stop Session Submit failed: %10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp3932 273 "%0Invalid Command Pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
}
#typev venusdecodedevice_cpp3919 272 "%0Start Session Submit failed:%10!d!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::PrepareVideoCommand
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1034 85 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp1029 84 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1022 83 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp1005 82 "%4!s!::[%!FUNC!]Pixel format = %10!u!, IsCompressed = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.PixelFormat, ItemLong -- 10
bufferReqs.BufferFlags.Compressed, ItemLong -- 11
}
#typev venusdecodedevice_cpp1003 81 "%4!s!::[%!FUNC!]Resource Width = %10!u!, Resource Height     = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
bufferReqs.resourceWidth, ItemLong -- 10
bufferReqs.resourceHeight, ItemLong -- 11
}
#typev venusdecodedevice_cpp999 80 "%4!s!::[%!FUNC!]Setting following OPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp973 78 "%0OPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp987 79 "%4!s!::[%!FUNC!]Setting following DPB buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp964 77 "%0DPB SubResourceInfo pointer is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp950 76 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetDecodeNewBufRequirement
{
}
#typev venusdecodedevice_cpp930 75 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp925 74 "%0Esc fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp918 73 "%0Esc ret code 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp900 72 "%4!s!::[%!FUNC!]Buffer req: Height[0]    = %10!u!, Height[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferHeight[0], ItemLong -- 10
bufferReqs.BufferHeight[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp898 71 "%4!s!::[%!FUNC!]Buffer req: Stride[0]    = %10!u!, Stride[1]    = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferStride[0], ItemLong -- 10
bufferReqs.BufferStride[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp896 70 "%4!s!::[%!FUNC!]Buffer req: Alignment[0] = %10!u!, Alignment[1] = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferAlignment[0], ItemLong -- 10
bufferReqs.BufferAlignment[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp894 69 "%4!s!::[%!FUNC!]Buffer req: Size[0]      = %10!u!, Size[1]      = %11!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
bufferReqs.BufferSize[0], ItemLong -- 10
bufferReqs.BufferSize[1], ItemLong -- 11
}
#typev venusdecodedevice_cpp893 68 "%4!s!::[%!FUNC!]Setting following buffer requirements" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp858 67 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SetEngineDecodeBufferRequirements
{
}
#typev venusdecodedevice_cpp1601 108 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1597 107 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1592 106 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StartEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1627 111 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1623 110 "%0 Failed to send start session command" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp1618 109 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::StopEngineDecodeSession
{
}
#typev venusdecodedevice_cpp2593 181 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2549 177 "%4!s!::[%!FUNC!]PicParams H264 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
refFrameList[i].sPicEntry.Index7Bits, ItemLong -- 10
refFrameList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2523 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2523 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2523 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2520 176 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2579 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2579 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2579 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2576 179 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2569 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2569 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2569 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2566 178 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2586 180 "%4!s!::[%!FUNC!]unhandled buffer type %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2512 175 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitH264Buffers
{
}
#typev venusdecodedevice_cpp2689 188 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2646 184 "%4!s!::[%!FUNC!]PicParams HEVC sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
refFrameList[i].sPicEntry.Index7Bits, ItemLong -- 10
refFrameList[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2623 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2623 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2623 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2620 183 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2676 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2676 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2676 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2673 186 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2666 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2666 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2666 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2663 185 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2683 187 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2612 182 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitHevcBuffers
{
}
#typev venusdecodedevice_cpp2751 194 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2717 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2717 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2717 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2714 190 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2737 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2737 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2737 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2734 192 "%4!s!::[%!FUNC!]DxDecodeInvQMatrixBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2727 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2727 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2727 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2724 191 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp2744 193 "%4!s!::[%!FUNC!]unhandled buffer %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2707 189 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVc1Buffers
{
}
#typev venusdecodedevice_cpp4491 296 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4477 294 "%0invalid device pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4466 293 "%0invalid private data pointer" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp4421 292 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVideoCommand
{
}
#typev venusdecodedevice_cpp2927 208 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2900 205 "%4!s!::[%!FUNC!]PicParams Vp8 sPicEntryIndex7Bits %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.lst_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp2888 204 "%4!s!::[%!FUNC!]PicParams Vp8 sPicEntryIndex7Bits %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.gld_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp2876 203 "%4!s!::[%!FUNC!]PicParams Vp8 sPicEntryIndex7Bits %10!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
m_vp8DecodeFrame.PicParams.alt_fb_idx.sPicEntry.Index7Bits, ItemLong -- 10
}
#typev venusdecodedevice_cpp2864 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2864 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2864 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2861 202 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2913 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2913 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2913 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2910 206 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2920 207 "%0Invalid Buffer Type %10!u!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2853 201 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp8Buffers
{
}
#typev venusdecodedevice_cpp2835 200 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2802 197 "%4!s!::[%!FUNC!]PicParams Vp9 sPicEntryIndex7Bits sPicEntryAssociatedFlag %10!d! , %11!d!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
frameRefs[i].sPicEntry.Index7Bits, ItemLong -- 10
frameRefs[i].sPicEntry.AssociatedFlag, ItemLong -- 11
}
#typev venusdecodedevice_cpp2780 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2780 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2780 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2777 196 "%4!s!::[%!FUNC!]DxDecodePicParamBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2822 52 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2822 51 "%0CopyBufferData fail 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2822 50 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2819 198 "%4!s!::[%!FUNC!]DxDecodeSliceCtrlBuffer" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp2829 199 "%4!s!::[%!FUNC!]unhandled %10!u!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
pSubmitData->bufferDesc[bufferIdx].bufferType, ItemLong -- 10
}
#typev venusdecodedevice_cpp2770 195 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::SubmitVp9Buffers
{
}
#typev venusdecodedevice_cpp4264 284 "%4!s!::[%!FUNC!]Disabling DPB compression" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp4267 282 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp4260 282 "%0pH264Frame is NULL " //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::UpdateDpbCompression
{
}
#typev venusdecodedevice_cpp2405 165 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264CurrPic
{
}
#typev venusdecodedevice_cpp2400 164 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateH264CurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2392 163 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264CurrPic
{
}
#typev venusdecodedevice_cpp2249 151 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
}
#typev venusdecodedevice_cpp2242 150 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2231 149 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateH264RefFrameList
{
}
#typev venusdecodedevice_cpp2435 168 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcCurrPic
{
}
#typev venusdecodedevice_cpp2430 167 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcCurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2421 166 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcCurrPic
{
}
#typev venusdecodedevice_cpp2283 154 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2276 153 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2265 152 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateHevcRefFrameList
{
}
#typev venusdecodedevice_cpp2464 171 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8CurrPic
{
}
#typev venusdecodedevice_cpp2459 170 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8CurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2451 169 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8CurrPic
{
}
#typev venusdecodedevice_cpp2343 159 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2336 158 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2321 157 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2307 156 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2299 155 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp8RefFrameList
{
}
#typev venusdecodedevice_cpp2494 174 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9CurrPic
{
}
#typev venusdecodedevice_cpp2489 173 "%0Error: Output Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9CurrPic
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2480 172 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9CurrPic
{
}
#typev venusdecodedevice_cpp2376 162 "%4!s!::[%!FUNC!]Exit" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
#typev venusdecodedevice_cpp2369 161 "%0Error: Reference Buffer Address is NULL 0x%10!x!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
result, ItemLong -- 10
}
#typev venusdecodedevice_cpp2359 160 "%4!s!::[%!FUNC!]Enter" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=video FUNC=VenusDecodeDevice::ValidateVp9RefFrameList
{
}
